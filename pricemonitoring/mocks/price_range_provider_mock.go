// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/pricemonitoring (interfaces: PriceRangeProvider)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPriceRangeProvider is a mock of PriceRangeProvider interface
type MockPriceRangeProvider struct {
	ctrl     *gomock.Controller
	recorder *MockPriceRangeProviderMockRecorder
}

// MockPriceRangeProviderMockRecorder is the mock recorder for MockPriceRangeProvider
type MockPriceRangeProviderMockRecorder struct {
	mock *MockPriceRangeProvider
}

// NewMockPriceRangeProvider creates a new mock instance
func NewMockPriceRangeProvider(ctrl *gomock.Controller) *MockPriceRangeProvider {
	mock := &MockPriceRangeProvider{ctrl: ctrl}
	mock.recorder = &MockPriceRangeProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPriceRangeProvider) EXPECT() *MockPriceRangeProviderMockRecorder {
	return m.recorder
}

// PriceRange mocks base method
func (m *MockPriceRangeProvider) PriceRange(arg0, arg1, arg2 float64) (float64, float64) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PriceRange", arg0, arg1, arg2)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(float64)
	return ret0, ret1
}

// PriceRange indicates an expected call of PriceRange
func (mr *MockPriceRangeProviderMockRecorder) PriceRange(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PriceRange", reflect.TypeOf((*MockPriceRangeProvider)(nil).PriceRange), arg0, arg1, arg2)
}
