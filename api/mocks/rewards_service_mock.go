// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/data-node/api (interfaces: RewardsService)

// Package mocks is a generated GoMock package.
package mocks

import (
	v1 "code.vegaprotocol.io/protos/data-node/api/v1"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRewardsService is a mock of RewardsService interface
type MockRewardsService struct {
	ctrl     *gomock.Controller
	recorder *MockRewardsServiceMockRecorder
}

// MockRewardsServiceMockRecorder is the mock recorder for MockRewardsService
type MockRewardsServiceMockRecorder struct {
	mock *MockRewardsService
}

// NewMockRewardsService creates a new mock instance
func NewMockRewardsService(ctrl *gomock.Controller) *MockRewardsService {
	mock := &MockRewardsService{ctrl: ctrl}
	mock.recorder = &MockRewardsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRewardsService) EXPECT() *MockRewardsServiceMockRecorder {
	return m.recorder
}

// GetRewardDetails mocks base method
func (m *MockRewardsService) GetRewardDetails(arg0 context.Context, arg1 string) (*v1.GetRewardDetailsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRewardDetails", arg0, arg1)
	ret0, _ := ret[0].(*v1.GetRewardDetailsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRewardDetails indicates an expected call of GetRewardDetails
func (mr *MockRewardsServiceMockRecorder) GetRewardDetails(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRewardDetails", reflect.TypeOf((*MockRewardsService)(nil).GetRewardDetails), arg0, arg1)
}
