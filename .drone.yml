---

kind: pipeline
name: default
type: docker

platform:
  arch: amd64
  os: linux

steps:
  - name: prepare
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13
    pull: always
    volumes:
      - name: gocache
        path: /go
    environment:
      CGO_ENABLED: "0"
      GO111MODULE: "on"
      GOOS: linux
      GOARCH: amd64
      GITLAB_DEPLOY_SSH_KNOWN_HOSTS:
        from_secret: GITLAB_DEPLOY_SSH_KNOWN_HOSTS
      GITLAB_DEPLOY_SSH_PRIVATE_KEY:
        from_secret: GITLAB_DEPLOY_SSH_PRIVATE_KEY
    commands:
      # The following git+ssh config enables accessing private Gitlab repos.
      - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"
      - eval "$(ssh-agent -s)" ; mkdir -p ~/.ssh ; chmod 0700 ~/.ssh
      - if ! echo "$${GITLAB_DEPLOY_SSH_PRIVATE_KEY}" | grep -q "BEGIN RSA PRIVATE KEY" ; then
          echo "Need env var GITLAB_DEPLOY_SSH_PRIVATE_KEY to have an RSA private key" ; exit 1 ; fi
      - if ! echo "$${GITLAB_DEPLOY_SSH_KNOWN_HOSTS}" | grep -q "^gitlab.com ssh-rsa" ; then
          echo "Need env var GITLAB_DEPLOY_SSH_KNOWN_HOSTS to have one or more host keys" ; exit 1 ; fi
      - echo "$${GITLAB_DEPLOY_SSH_PRIVATE_KEY}" >~/.ssh/id_rsa ; chmod 0600 ~/.ssh/id_rsa
      - echo "$${GITLAB_DEPLOY_SSH_KNOWN_HOSTS}" >~/.ssh/known_hosts ; chmod 0644 ~/.ssh/known_hosts
      - echo "On with the show."

  - name: build
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13
    volumes:
      - name: gocache
        path: /go
    commands:
      - make install
    depends_on:
      - prepare

  - name: test
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13
    volumes:
      - name: gocache
        path: /go
    commands:
      - make test
    depends_on:
      - build

  - name: race
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13
    volumes:
      - name: gocache
        path: /go
    commands:
      - make race
    depends_on:
      - build
    when:
      branch:
        - master
        - develop
        - release/*

  - name: msan
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13
    volumes:
      - name: gocache
        path: /go
    commands:
      - make msan
    depends_on:
      - build
    when:
      branch:
        - master
        - develop
        - release/*

  - name: coverage
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13
    volumes:
      - name: gocache
        path: /go
    commands:
      - make coveragehtml
    depends_on:
      - build
    when:
      branch:
        - master
        - develop
        - release/*

  - name: lint
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13
    volumes:
      - name: gocache
        path: /go
    commands:
      - make print_check || exit 1
      - export PATH="$${PATH}:/go/bin"
      - make lint || true  # Ignore lint failure for now (see #196)
    depends_on:
      - build

  - name: autogen_checks
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13
    volumes:
      - name: gocache
        path: /go
    commands:
      - code=0
      - make deps
      - make rest_check || code=1
      - make proto_check || code=1
      - make gqlgen_check || code=1
      - bash script/diff_graphqlschema.sh || code=1
      - exit "$code"
    depends_on:
      - build

  - name: vet
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13
    volumes:
      - name: gocache
        path: /go
    commands:
      - make vet
    depends_on:
      - build
    when:
      branch:
        - master
        - develop
        - release/*

  - name: push_to_devnet
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline:1.11.13
    volumes:
      - name: gocache
        path: /go
    commands:
      - ./script/deploy.sh devnet vega "/go/bin/vega:/home/vega/current/:0755"
      # Nasty auth hack. Single quotes to avoid yaml k:v pair.
      - 'for u in $VEGANET_USERS ; do
          /go/bin/vegaccount -addr geo.d.vega.xyz:3002 -traderid "$$u" ;
          curl -s -XPOST -H "Content-type: application/json" -H "Authorization: Bearer $$VEGA_AUTH_MASTERTOKEN"
            -d "{\"id\": \"$$u\", \"password\": \"123\"}" https://auth.d.vega.xyz 1>/dev/null ;
          echo ;
        done'
    depends_on:
      - test
      - race
      - msan
      - coverage
      - lint
      - autogen_checks
      - vet
    when:
      branch:
        - develop

  - name: publish_docker
    image: registry.gitlab.com/vega-protocol/devops-infra/cipipeline-docker:stable
    volumes: []
    commands:
      - apps="$$(find cmd -maxdepth 1 -and -not -name cmd | awk -F/ '{print $$2}')"
      - 'for app in $$apps ; do
          f="/go/bin/$$app" ;
          if ! test -f "$$f" ; then echo "Failed to find: $$f" ; exit 1 ; fi ;
          cp -a "$f$" . || exit 1 ;
        done'
      - imgtag="$${DRONE_BRANCH}"
      - if test -z "$$imgtag" ; then imgtag="$${DRPNE_TAG}" ; fi
      - if test -z "$$imgtag" ; then exit 1 ; fi
      - docker build -t "registry.gitlab.com/vega-protocol/trading-core:$$imgtag" -f Dockerfile.quick . || exit 0
      - docker push "registry.gitlab.com/vega-protocol/trading-core:$$imgtag" || exit 0
      - for app in $$apps ; do rm -f "./$app"; done
    depends_on:
      - test
      - race
      - msan
      - coverage
      - lint
      - autogen_checks
      - vet
    when:
      branch:
        - develop


volumes:
  - name: gocache
    host:
      path: /var/lib/drone/volumes/gocache

image_pull_secrets:
  - dockerconfig
