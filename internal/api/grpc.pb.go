// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/api/grpc.proto

package api

import (
	proto1 "code.vegaprotocol.io/vega/proto"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrdersSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrdersSubscribeRequest) Reset()         { *m = OrdersSubscribeRequest{} }
func (m *OrdersSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersSubscribeRequest) ProtoMessage()    {}
func (*OrdersSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{0}
}

func (m *OrdersSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersSubscribeRequest.Unmarshal(m, b)
}
func (m *OrdersSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *OrdersSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersSubscribeRequest.Merge(m, src)
}
func (m *OrdersSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersSubscribeRequest.Size(m)
}
func (m *OrdersSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersSubscribeRequest proto.InternalMessageInfo

func (m *OrdersSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrdersSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type TradesSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradesSubscribeRequest) Reset()         { *m = TradesSubscribeRequest{} }
func (m *TradesSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*TradesSubscribeRequest) ProtoMessage()    {}
func (*TradesSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{1}
}

func (m *TradesSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesSubscribeRequest.Unmarshal(m, b)
}
func (m *TradesSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *TradesSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesSubscribeRequest.Merge(m, src)
}
func (m *TradesSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_TradesSubscribeRequest.Size(m)
}
func (m *TradesSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradesSubscribeRequest proto.InternalMessageInfo

func (m *TradesSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *TradesSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type CandlesSubscribeRequest struct {
	MarketID             string          `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Interval             proto1.Interval `protobuf:"varint,2,opt,name=interval,proto3,enum=vega.Interval" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CandlesSubscribeRequest) Reset()         { *m = CandlesSubscribeRequest{} }
func (m *CandlesSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*CandlesSubscribeRequest) ProtoMessage()    {}
func (*CandlesSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{2}
}

func (m *CandlesSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesSubscribeRequest.Unmarshal(m, b)
}
func (m *CandlesSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *CandlesSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesSubscribeRequest.Merge(m, src)
}
func (m *CandlesSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_CandlesSubscribeRequest.Size(m)
}
func (m *CandlesSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesSubscribeRequest proto.InternalMessageInfo

func (m *CandlesSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *CandlesSubscribeRequest) GetInterval() proto1.Interval {
	if m != nil {
		return m.Interval
	}
	return proto1.Interval_I1M
}

type MarketDepthSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDepthSubscribeRequest) Reset()         { *m = MarketDepthSubscribeRequest{} }
func (m *MarketDepthSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*MarketDepthSubscribeRequest) ProtoMessage()    {}
func (*MarketDepthSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{3}
}

func (m *MarketDepthSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthSubscribeRequest.Unmarshal(m, b)
}
func (m *MarketDepthSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *MarketDepthSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthSubscribeRequest.Merge(m, src)
}
func (m *MarketDepthSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_MarketDepthSubscribeRequest.Size(m)
}
func (m *MarketDepthSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthSubscribeRequest proto.InternalMessageInfo

func (m *MarketDepthSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type PositionsSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsSubscribeRequest) Reset()         { *m = PositionsSubscribeRequest{} }
func (m *PositionsSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*PositionsSubscribeRequest) ProtoMessage()    {}
func (*PositionsSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{4}
}

func (m *PositionsSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsSubscribeRequest.Unmarshal(m, b)
}
func (m *PositionsSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *PositionsSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsSubscribeRequest.Merge(m, src)
}
func (m *PositionsSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_PositionsSubscribeRequest.Size(m)
}
func (m *PositionsSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsSubscribeRequest proto.InternalMessageInfo

func (m *PositionsSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type OrderResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reference            string   `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderResponse) Reset()         { *m = OrderResponse{} }
func (m *OrderResponse) String() string { return proto.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()    {}
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{5}
}

func (m *OrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderResponse.Unmarshal(m, b)
}
func (m *OrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderResponse.Marshal(b, m, deterministic)
}
func (m *OrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderResponse.Merge(m, src)
}
func (m *OrderResponse) XXX_Size() int {
	return xxx_messageInfo_OrderResponse.Size(m)
}
func (m *OrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderResponse proto.InternalMessageInfo

func (m *OrderResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *OrderResponse) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type OrdersByMarketRequest struct {
	Market               string          `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Params               *OptionalParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByMarketRequest) Reset()         { *m = OrdersByMarketRequest{} }
func (m *OrdersByMarketRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersByMarketRequest) ProtoMessage()    {}
func (*OrdersByMarketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{6}
}

func (m *OrdersByMarketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByMarketRequest.Unmarshal(m, b)
}
func (m *OrdersByMarketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByMarketRequest.Marshal(b, m, deterministic)
}
func (m *OrdersByMarketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByMarketRequest.Merge(m, src)
}
func (m *OrdersByMarketRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersByMarketRequest.Size(m)
}
func (m *OrdersByMarketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByMarketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByMarketRequest proto.InternalMessageInfo

func (m *OrdersByMarketRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *OrdersByMarketRequest) GetParams() *OptionalParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type OrdersByMarketResponse struct {
	Orders               []*proto1.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByMarketResponse) Reset()         { *m = OrdersByMarketResponse{} }
func (m *OrdersByMarketResponse) String() string { return proto.CompactTextString(m) }
func (*OrdersByMarketResponse) ProtoMessage()    {}
func (*OrdersByMarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{7}
}

func (m *OrdersByMarketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByMarketResponse.Unmarshal(m, b)
}
func (m *OrdersByMarketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByMarketResponse.Marshal(b, m, deterministic)
}
func (m *OrdersByMarketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByMarketResponse.Merge(m, src)
}
func (m *OrdersByMarketResponse) XXX_Size() int {
	return xxx_messageInfo_OrdersByMarketResponse.Size(m)
}
func (m *OrdersByMarketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByMarketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByMarketResponse proto.InternalMessageInfo

func (m *OrdersByMarketResponse) GetOrders() []*proto1.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrdersByPartyRequest struct {
	Party                string          `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	Params               *OptionalParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByPartyRequest) Reset()         { *m = OrdersByPartyRequest{} }
func (m *OrdersByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersByPartyRequest) ProtoMessage()    {}
func (*OrdersByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{8}
}

func (m *OrdersByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByPartyRequest.Unmarshal(m, b)
}
func (m *OrdersByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByPartyRequest.Marshal(b, m, deterministic)
}
func (m *OrdersByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByPartyRequest.Merge(m, src)
}
func (m *OrdersByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersByPartyRequest.Size(m)
}
func (m *OrdersByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByPartyRequest proto.InternalMessageInfo

func (m *OrdersByPartyRequest) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *OrdersByPartyRequest) GetParams() *OptionalParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type OrdersByPartyResponse struct {
	Orders               []*proto1.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByPartyResponse) Reset()         { *m = OrdersByPartyResponse{} }
func (m *OrdersByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*OrdersByPartyResponse) ProtoMessage()    {}
func (*OrdersByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{9}
}

func (m *OrdersByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByPartyResponse.Unmarshal(m, b)
}
func (m *OrdersByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByPartyResponse.Marshal(b, m, deterministic)
}
func (m *OrdersByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByPartyResponse.Merge(m, src)
}
func (m *OrdersByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_OrdersByPartyResponse.Size(m)
}
func (m *OrdersByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByPartyResponse proto.InternalMessageInfo

func (m *OrdersByPartyResponse) GetOrders() []*proto1.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrderByMarketAndIdRequest struct {
	Market               string   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderByMarketAndIdRequest) Reset()         { *m = OrderByMarketAndIdRequest{} }
func (m *OrderByMarketAndIdRequest) String() string { return proto.CompactTextString(m) }
func (*OrderByMarketAndIdRequest) ProtoMessage()    {}
func (*OrderByMarketAndIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{10}
}

func (m *OrderByMarketAndIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByMarketAndIdRequest.Unmarshal(m, b)
}
func (m *OrderByMarketAndIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByMarketAndIdRequest.Marshal(b, m, deterministic)
}
func (m *OrderByMarketAndIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByMarketAndIdRequest.Merge(m, src)
}
func (m *OrderByMarketAndIdRequest) XXX_Size() int {
	return xxx_messageInfo_OrderByMarketAndIdRequest.Size(m)
}
func (m *OrderByMarketAndIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByMarketAndIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByMarketAndIdRequest proto.InternalMessageInfo

func (m *OrderByMarketAndIdRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *OrderByMarketAndIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type OrderByMarketAndIdResponse struct {
	Order                *proto1.Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrderByMarketAndIdResponse) Reset()         { *m = OrderByMarketAndIdResponse{} }
func (m *OrderByMarketAndIdResponse) String() string { return proto.CompactTextString(m) }
func (*OrderByMarketAndIdResponse) ProtoMessage()    {}
func (*OrderByMarketAndIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{11}
}

func (m *OrderByMarketAndIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByMarketAndIdResponse.Unmarshal(m, b)
}
func (m *OrderByMarketAndIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByMarketAndIdResponse.Marshal(b, m, deterministic)
}
func (m *OrderByMarketAndIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByMarketAndIdResponse.Merge(m, src)
}
func (m *OrderByMarketAndIdResponse) XXX_Size() int {
	return xxx_messageInfo_OrderByMarketAndIdResponse.Size(m)
}
func (m *OrderByMarketAndIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByMarketAndIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByMarketAndIdResponse proto.InternalMessageInfo

func (m *OrderByMarketAndIdResponse) GetOrder() *proto1.Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type MarketsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketsRequest) Reset()         { *m = MarketsRequest{} }
func (m *MarketsRequest) String() string { return proto.CompactTextString(m) }
func (*MarketsRequest) ProtoMessage()    {}
func (*MarketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{12}
}

func (m *MarketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketsRequest.Unmarshal(m, b)
}
func (m *MarketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketsRequest.Marshal(b, m, deterministic)
}
func (m *MarketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketsRequest.Merge(m, src)
}
func (m *MarketsRequest) XXX_Size() int {
	return xxx_messageInfo_MarketsRequest.Size(m)
}
func (m *MarketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketsRequest proto.InternalMessageInfo

type MarketsResponse struct {
	Markets              []string `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketsResponse) Reset()         { *m = MarketsResponse{} }
func (m *MarketsResponse) String() string { return proto.CompactTextString(m) }
func (*MarketsResponse) ProtoMessage()    {}
func (*MarketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{13}
}

func (m *MarketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketsResponse.Unmarshal(m, b)
}
func (m *MarketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketsResponse.Marshal(b, m, deterministic)
}
func (m *MarketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketsResponse.Merge(m, src)
}
func (m *MarketsResponse) XXX_Size() int {
	return xxx_messageInfo_MarketsResponse.Size(m)
}
func (m *MarketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketsResponse proto.InternalMessageInfo

func (m *MarketsResponse) GetMarkets() []string {
	if m != nil {
		return m.Markets
	}
	return nil
}

type CandlesRequest struct {
	Market               string          `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	SinceTimestamp       int64           `protobuf:"varint,2,opt,name=sinceTimestamp,proto3" json:"sinceTimestamp,omitempty"`
	Interval             proto1.Interval `protobuf:"varint,3,opt,name=interval,proto3,enum=vega.Interval" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CandlesRequest) Reset()         { *m = CandlesRequest{} }
func (m *CandlesRequest) String() string { return proto.CompactTextString(m) }
func (*CandlesRequest) ProtoMessage()    {}
func (*CandlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{14}
}

func (m *CandlesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesRequest.Unmarshal(m, b)
}
func (m *CandlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesRequest.Marshal(b, m, deterministic)
}
func (m *CandlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesRequest.Merge(m, src)
}
func (m *CandlesRequest) XXX_Size() int {
	return xxx_messageInfo_CandlesRequest.Size(m)
}
func (m *CandlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesRequest proto.InternalMessageInfo

func (m *CandlesRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *CandlesRequest) GetSinceTimestamp() int64 {
	if m != nil {
		return m.SinceTimestamp
	}
	return 0
}

func (m *CandlesRequest) GetInterval() proto1.Interval {
	if m != nil {
		return m.Interval
	}
	return proto1.Interval_I1M
}

type CandlesResponse struct {
	Candles              []*proto1.Candle `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CandlesResponse) Reset()         { *m = CandlesResponse{} }
func (m *CandlesResponse) String() string { return proto.CompactTextString(m) }
func (*CandlesResponse) ProtoMessage()    {}
func (*CandlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{15}
}

func (m *CandlesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesResponse.Unmarshal(m, b)
}
func (m *CandlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesResponse.Marshal(b, m, deterministic)
}
func (m *CandlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesResponse.Merge(m, src)
}
func (m *CandlesResponse) XXX_Size() int {
	return xxx_messageInfo_CandlesResponse.Size(m)
}
func (m *CandlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesResponse proto.InternalMessageInfo

func (m *CandlesResponse) GetCandles() []*proto1.Candle {
	if m != nil {
		return m.Candles
	}
	return nil
}

type MarketDepthRequest struct {
	Market               string   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDepthRequest) Reset()         { *m = MarketDepthRequest{} }
func (m *MarketDepthRequest) String() string { return proto.CompactTextString(m) }
func (*MarketDepthRequest) ProtoMessage()    {}
func (*MarketDepthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{16}
}

func (m *MarketDepthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthRequest.Unmarshal(m, b)
}
func (m *MarketDepthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthRequest.Marshal(b, m, deterministic)
}
func (m *MarketDepthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthRequest.Merge(m, src)
}
func (m *MarketDepthRequest) XXX_Size() int {
	return xxx_messageInfo_MarketDepthRequest.Size(m)
}
func (m *MarketDepthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthRequest proto.InternalMessageInfo

func (m *MarketDepthRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

type MarketDepthResponse struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Buy                  []*proto1.PriceLevel `protobuf:"bytes,2,rep,name=buy,proto3" json:"buy,omitempty"`
	Sell                 []*proto1.PriceLevel `protobuf:"bytes,3,rep,name=sell,proto3" json:"sell,omitempty"`
	LastTrade            *proto1.Trade        `protobuf:"bytes,4,opt,name=lastTrade,proto3" json:"lastTrade,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MarketDepthResponse) Reset()         { *m = MarketDepthResponse{} }
func (m *MarketDepthResponse) String() string { return proto.CompactTextString(m) }
func (*MarketDepthResponse) ProtoMessage()    {}
func (*MarketDepthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{17}
}

func (m *MarketDepthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthResponse.Unmarshal(m, b)
}
func (m *MarketDepthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthResponse.Marshal(b, m, deterministic)
}
func (m *MarketDepthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthResponse.Merge(m, src)
}
func (m *MarketDepthResponse) XXX_Size() int {
	return xxx_messageInfo_MarketDepthResponse.Size(m)
}
func (m *MarketDepthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthResponse proto.InternalMessageInfo

func (m *MarketDepthResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MarketDepthResponse) GetBuy() []*proto1.PriceLevel {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *MarketDepthResponse) GetSell() []*proto1.PriceLevel {
	if m != nil {
		return m.Sell
	}
	return nil
}

func (m *MarketDepthResponse) GetLastTrade() *proto1.Trade {
	if m != nil {
		return m.LastTrade
	}
	return nil
}

type TradesByMarketRequest struct {
	Market               string          `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Params               *OptionalParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByMarketRequest) Reset()         { *m = TradesByMarketRequest{} }
func (m *TradesByMarketRequest) String() string { return proto.CompactTextString(m) }
func (*TradesByMarketRequest) ProtoMessage()    {}
func (*TradesByMarketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{18}
}

func (m *TradesByMarketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByMarketRequest.Unmarshal(m, b)
}
func (m *TradesByMarketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByMarketRequest.Marshal(b, m, deterministic)
}
func (m *TradesByMarketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByMarketRequest.Merge(m, src)
}
func (m *TradesByMarketRequest) XXX_Size() int {
	return xxx_messageInfo_TradesByMarketRequest.Size(m)
}
func (m *TradesByMarketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByMarketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByMarketRequest proto.InternalMessageInfo

func (m *TradesByMarketRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *TradesByMarketRequest) GetParams() *OptionalParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type TradesByMarketResponse struct {
	Trades               []*proto1.Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByMarketResponse) Reset()         { *m = TradesByMarketResponse{} }
func (m *TradesByMarketResponse) String() string { return proto.CompactTextString(m) }
func (*TradesByMarketResponse) ProtoMessage()    {}
func (*TradesByMarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{19}
}

func (m *TradesByMarketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByMarketResponse.Unmarshal(m, b)
}
func (m *TradesByMarketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByMarketResponse.Marshal(b, m, deterministic)
}
func (m *TradesByMarketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByMarketResponse.Merge(m, src)
}
func (m *TradesByMarketResponse) XXX_Size() int {
	return xxx_messageInfo_TradesByMarketResponse.Size(m)
}
func (m *TradesByMarketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByMarketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByMarketResponse proto.InternalMessageInfo

func (m *TradesByMarketResponse) GetTrades() []*proto1.Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type PositionsByPartyRequest struct {
	Party                string   `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsByPartyRequest) Reset()         { *m = PositionsByPartyRequest{} }
func (m *PositionsByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*PositionsByPartyRequest) ProtoMessage()    {}
func (*PositionsByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{20}
}

func (m *PositionsByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsByPartyRequest.Unmarshal(m, b)
}
func (m *PositionsByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsByPartyRequest.Marshal(b, m, deterministic)
}
func (m *PositionsByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsByPartyRequest.Merge(m, src)
}
func (m *PositionsByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_PositionsByPartyRequest.Size(m)
}
func (m *PositionsByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsByPartyRequest proto.InternalMessageInfo

func (m *PositionsByPartyRequest) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

type PositionsByPartyResponse struct {
	Positions            []*proto1.MarketPosition `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PositionsByPartyResponse) Reset()         { *m = PositionsByPartyResponse{} }
func (m *PositionsByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*PositionsByPartyResponse) ProtoMessage()    {}
func (*PositionsByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{21}
}

func (m *PositionsByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsByPartyResponse.Unmarshal(m, b)
}
func (m *PositionsByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsByPartyResponse.Marshal(b, m, deterministic)
}
func (m *PositionsByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsByPartyResponse.Merge(m, src)
}
func (m *PositionsByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_PositionsByPartyResponse.Size(m)
}
func (m *PositionsByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsByPartyResponse proto.InternalMessageInfo

func (m *PositionsByPartyResponse) GetPositions() []*proto1.MarketPosition {
	if m != nil {
		return m.Positions
	}
	return nil
}

type StatisticsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatisticsRequest) Reset()         { *m = StatisticsRequest{} }
func (m *StatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsRequest) ProtoMessage()    {}
func (*StatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{22}
}

func (m *StatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatisticsRequest.Unmarshal(m, b)
}
func (m *StatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatisticsRequest.Marshal(b, m, deterministic)
}
func (m *StatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsRequest.Merge(m, src)
}
func (m *StatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_StatisticsRequest.Size(m)
}
func (m *StatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsRequest proto.InternalMessageInfo

type OptionalParams struct {
	Limit                uint64   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OptionalParams) Reset()         { *m = OptionalParams{} }
func (m *OptionalParams) String() string { return proto.CompactTextString(m) }
func (*OptionalParams) ProtoMessage()    {}
func (*OptionalParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{23}
}

func (m *OptionalParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptionalParams.Unmarshal(m, b)
}
func (m *OptionalParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptionalParams.Marshal(b, m, deterministic)
}
func (m *OptionalParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptionalParams.Merge(m, src)
}
func (m *OptionalParams) XXX_Size() int {
	return xxx_messageInfo_OptionalParams.Size(m)
}
func (m *OptionalParams) XXX_DiscardUnknown() {
	xxx_messageInfo_OptionalParams.DiscardUnknown(m)
}

var xxx_messageInfo_OptionalParams proto.InternalMessageInfo

func (m *OptionalParams) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type VegaTimeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VegaTimeRequest) Reset()         { *m = VegaTimeRequest{} }
func (m *VegaTimeRequest) String() string { return proto.CompactTextString(m) }
func (*VegaTimeRequest) ProtoMessage()    {}
func (*VegaTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{24}
}

func (m *VegaTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VegaTimeRequest.Unmarshal(m, b)
}
func (m *VegaTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VegaTimeRequest.Marshal(b, m, deterministic)
}
func (m *VegaTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VegaTimeRequest.Merge(m, src)
}
func (m *VegaTimeRequest) XXX_Size() int {
	return xxx_messageInfo_VegaTimeRequest.Size(m)
}
func (m *VegaTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VegaTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VegaTimeRequest proto.InternalMessageInfo

type VegaTimeResponse struct {
	Time                 string   `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VegaTimeResponse) Reset()         { *m = VegaTimeResponse{} }
func (m *VegaTimeResponse) String() string { return proto.CompactTextString(m) }
func (*VegaTimeResponse) ProtoMessage()    {}
func (*VegaTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32cc354767dfbde6, []int{25}
}

func (m *VegaTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VegaTimeResponse.Unmarshal(m, b)
}
func (m *VegaTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VegaTimeResponse.Marshal(b, m, deterministic)
}
func (m *VegaTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VegaTimeResponse.Merge(m, src)
}
func (m *VegaTimeResponse) XXX_Size() int {
	return xxx_messageInfo_VegaTimeResponse.Size(m)
}
func (m *VegaTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VegaTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VegaTimeResponse proto.InternalMessageInfo

func (m *VegaTimeResponse) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func init() {
	proto.RegisterType((*OrdersSubscribeRequest)(nil), "grpc.OrdersSubscribeRequest")
	proto.RegisterType((*TradesSubscribeRequest)(nil), "grpc.TradesSubscribeRequest")
	proto.RegisterType((*CandlesSubscribeRequest)(nil), "grpc.CandlesSubscribeRequest")
	proto.RegisterType((*MarketDepthSubscribeRequest)(nil), "grpc.MarketDepthSubscribeRequest")
	proto.RegisterType((*PositionsSubscribeRequest)(nil), "grpc.PositionsSubscribeRequest")
	proto.RegisterType((*OrderResponse)(nil), "grpc.OrderResponse")
	proto.RegisterType((*OrdersByMarketRequest)(nil), "grpc.OrdersByMarketRequest")
	proto.RegisterType((*OrdersByMarketResponse)(nil), "grpc.OrdersByMarketResponse")
	proto.RegisterType((*OrdersByPartyRequest)(nil), "grpc.OrdersByPartyRequest")
	proto.RegisterType((*OrdersByPartyResponse)(nil), "grpc.OrdersByPartyResponse")
	proto.RegisterType((*OrderByMarketAndIdRequest)(nil), "grpc.OrderByMarketAndIdRequest")
	proto.RegisterType((*OrderByMarketAndIdResponse)(nil), "grpc.OrderByMarketAndIdResponse")
	proto.RegisterType((*MarketsRequest)(nil), "grpc.MarketsRequest")
	proto.RegisterType((*MarketsResponse)(nil), "grpc.MarketsResponse")
	proto.RegisterType((*CandlesRequest)(nil), "grpc.CandlesRequest")
	proto.RegisterType((*CandlesResponse)(nil), "grpc.CandlesResponse")
	proto.RegisterType((*MarketDepthRequest)(nil), "grpc.MarketDepthRequest")
	proto.RegisterType((*MarketDepthResponse)(nil), "grpc.MarketDepthResponse")
	proto.RegisterType((*TradesByMarketRequest)(nil), "grpc.TradesByMarketRequest")
	proto.RegisterType((*TradesByMarketResponse)(nil), "grpc.TradesByMarketResponse")
	proto.RegisterType((*PositionsByPartyRequest)(nil), "grpc.PositionsByPartyRequest")
	proto.RegisterType((*PositionsByPartyResponse)(nil), "grpc.PositionsByPartyResponse")
	proto.RegisterType((*StatisticsRequest)(nil), "grpc.StatisticsRequest")
	proto.RegisterType((*OptionalParams)(nil), "grpc.OptionalParams")
	proto.RegisterType((*VegaTimeRequest)(nil), "grpc.VegaTimeRequest")
	proto.RegisterType((*VegaTimeResponse)(nil), "grpc.VegaTimeResponse")
}

func init() { proto.RegisterFile("internal/api/grpc.proto", fileDescriptor_32cc354767dfbde6) }

var fileDescriptor_32cc354767dfbde6 = []byte{
	// 1037 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xeb, 0x6e, 0x1b, 0x45,
	0x14, 0x66, 0x1d, 0xd7, 0x89, 0x8f, 0xc1, 0x71, 0x26, 0x4e, 0xec, 0x6c, 0x42, 0x9b, 0x0e, 0x28,
	0x0a, 0x97, 0xda, 0x96, 0x41, 0x0d, 0xa0, 0x02, 0x4a, 0x1a, 0xa9, 0x44, 0xd0, 0x34, 0x6c, 0x2a,
	0x90, 0xf8, 0x37, 0xde, 0x1d, 0xdc, 0x51, 0xf7, 0xc6, 0xce, 0x38, 0x51, 0xde, 0x81, 0x67, 0xe0,
	0xad, 0xf8, 0x8d, 0xc4, 0x93, 0xa0, 0x9d, 0x8b, 0xf7, 0xe2, 0xb5, 0x88, 0x25, 0xf8, 0xb7, 0x73,
	0xbe, 0x73, 0x9b, 0x33, 0xe7, 0x3b, 0x33, 0x0b, 0x3d, 0x16, 0x0a, 0x9a, 0x84, 0xc4, 0x1f, 0x92,
	0x98, 0x0d, 0xa7, 0x49, 0xec, 0x0e, 0xe2, 0x24, 0x12, 0x11, 0xaa, 0xa7, 0xdf, 0x76, 0x47, 0x2e,
	0x86, 0x37, 0x74, 0x4a, 0x94, 0xdc, 0x7e, 0x3a, 0x65, 0xe2, 0xcd, 0x6c, 0x32, 0x70, 0xa3, 0x60,
	0x18, 0xdc, 0x32, 0xf1, 0x36, 0xba, 0x1d, 0x4e, 0xa3, 0x27, 0x12, 0x7c, 0x72, 0x43, 0x7c, 0xe6,
	0x11, 0x11, 0x25, 0x7c, 0x38, 0xff, 0x54, 0x76, 0xf8, 0x12, 0x76, 0x5f, 0x25, 0x1e, 0x4d, 0xf8,
	0xf5, 0x6c, 0xc2, 0xdd, 0x84, 0x4d, 0xa8, 0x43, 0x7f, 0x9b, 0x51, 0x2e, 0x90, 0x0d, 0x1b, 0x01,
	0x49, 0xde, 0x52, 0x71, 0x71, 0xde, 0xb7, 0x0e, 0xad, 0xe3, 0xa6, 0x33, 0x5f, 0xa3, 0x3e, 0xac,
	0xc7, 0x24, 0x11, 0x77, 0x17, 0xe7, 0xfd, 0x9a, 0x84, 0xcc, 0x32, 0xf5, 0xf7, 0x3a, 0x21, 0x1e,
	0xfd, 0xaf, 0xfc, 0x11, 0xe8, 0x3d, 0x27, 0xa1, 0xe7, 0xaf, 0xe8, 0xf0, 0x63, 0xd8, 0x90, 0x15,
	0xbc, 0x21, 0xbe, 0xf4, 0xd8, 0x1e, 0xb7, 0x07, 0xb2, 0x5a, 0x17, 0x5a, 0xea, 0xcc, 0x71, 0xfc,
	0x25, 0xec, 0xbf, 0x94, 0x76, 0xe7, 0x34, 0x16, 0x6f, 0x56, 0x09, 0x83, 0x4f, 0x60, 0xef, 0x2a,
	0xe2, 0x4c, 0xb0, 0x28, 0x5c, 0x29, 0x3f, 0xfc, 0x02, 0xde, 0x93, 0x65, 0x77, 0x28, 0x8f, 0xa3,
	0x90, 0xd3, 0xb4, 0x02, 0x7c, 0xe6, 0xba, 0x94, 0x73, 0xa9, 0xbb, 0xe1, 0x98, 0x25, 0x3a, 0x80,
	0x66, 0x42, 0x7f, 0xa5, 0x09, 0x0d, 0x5d, 0xaa, 0xab, 0x93, 0x09, 0x30, 0x85, 0x1d, 0x75, 0x7e,
	0x67, 0x77, 0x6a, 0x13, 0x26, 0xfa, 0x43, 0x68, 0xa8, 0x68, 0x2a, 0xf6, 0x59, 0xe3, 0xef, 0xbf,
	0x1e, 0xd5, 0x0e, 0x2d, 0x47, 0x4b, 0xd1, 0xa7, 0xd0, 0x88, 0x49, 0x42, 0x02, 0x2e, 0x7d, 0xb6,
	0xc6, 0xdd, 0x81, 0xec, 0xb2, 0x57, 0x71, 0xba, 0x19, 0xe2, 0x5f, 0x49, 0xcc, 0xd1, 0x3a, 0xf8,
	0x6b, 0xd3, 0x26, 0x59, 0x18, 0x9d, 0xf8, 0x07, 0xd0, 0x88, 0x24, 0xd2, 0xb7, 0x0e, 0xd7, 0x8e,
	0x5b, 0xe3, 0x96, 0xaa, 0xb3, 0xda, 0x9d, 0x86, 0xf0, 0x04, 0xba, 0xc6, 0xfc, 0x2a, 0x3d, 0x58,
	0x93, 0xe4, 0x01, 0x3c, 0x90, 0x07, 0x5d, 0xca, 0x51, 0x09, 0x57, 0x4c, 0xf1, 0x59, 0x56, 0x09,
	0x1d, 0x63, 0x95, 0x0c, 0xaf, 0x61, 0x4f, 0x0a, 0xcc, 0xfe, 0x4e, 0x43, 0xef, 0xc2, 0xbb, 0x6f,
	0x2d, 0x77, 0xa1, 0xc6, 0x3c, 0x75, 0x36, 0x73, 0xac, 0xc6, 0x3c, 0xfc, 0x2d, 0xd8, 0x55, 0x4e,
	0x75, 0x5e, 0x8f, 0xe1, 0x81, 0x0c, 0x2e, 0x9d, 0x96, 0xd2, 0x52, 0x08, 0xee, 0x40, 0x5b, 0x59,
	0x72, 0x9d, 0x0a, 0xfe, 0x04, 0x36, 0xe7, 0x92, 0xac, 0x75, 0x54, 0x1e, 0x6a, 0x83, 0x4d, 0xc7,
	0x2c, 0xf1, 0xef, 0x16, 0xb4, 0x35, 0x7b, 0xee, 0xbb, 0x95, 0x01, 0xb4, 0x39, 0x0b, 0x5d, 0xfa,
	0x9a, 0x05, 0x94, 0x0b, 0x12, 0xc4, 0x72, 0x5b, 0x6b, 0x4a, 0xaf, 0xf3, 0x8e, 0x53, 0x42, 0x0b,
	0x44, 0x5b, 0xfb, 0x57, 0xa2, 0x6d, 0xce, 0xb3, 0xd1, 0xb9, 0x1f, 0xc1, 0xba, 0xab, 0x44, 0xfa,
	0x70, 0xde, 0x55, 0xd6, 0x4a, 0xcf, 0x31, 0x20, 0xfe, 0x1c, 0x50, 0x8e, 0xa3, 0xf7, 0xdc, 0x0c,
	0xfe, 0xc3, 0x82, 0xed, 0x82, 0x99, 0x8e, 0x8a, 0xa0, 0x1e, 0x92, 0x80, 0x6a, 0x56, 0xca, 0x6f,
	0x84, 0x61, 0x6d, 0x32, 0xbb, 0xeb, 0xd7, 0x64, 0x16, 0x1d, 0x95, 0xc5, 0x55, 0xc2, 0x5c, 0xfa,
	0x03, 0xbd, 0xa1, 0xbe, 0x93, 0x82, 0xe8, 0x43, 0xa8, 0x73, 0xea, 0xa7, 0x1b, 0xad, 0x56, 0x92,
	0x28, 0xfa, 0x08, 0x9a, 0x3e, 0xe1, 0x42, 0x8e, 0xc1, 0x7e, 0x3d, 0x7f, 0xb6, 0x52, 0xe4, 0x64,
	0x68, 0xca, 0x5e, 0x35, 0x2d, 0xff, 0x77, 0xf6, 0x96, 0xc3, 0x64, 0xdc, 0x10, 0x12, 0x29, 0x72,
	0x43, 0x25, 0xaa, 0x21, 0x7c, 0x02, 0xbd, 0xf9, 0x94, 0x5b, 0x85, 0xc0, 0xf8, 0x12, 0xfa, 0x8b,
	0x86, 0x3a, 0xf2, 0x18, 0x9a, 0xb1, 0xc1, 0x74, 0xf0, 0xae, 0x0a, 0xae, 0x52, 0x34, 0x86, 0x4e,
	0xa6, 0x86, 0xb7, 0x61, 0xeb, 0x5a, 0x10, 0xc1, 0xb8, 0x60, 0xee, 0x9c, 0x11, 0x03, 0x68, 0x17,
	0xb7, 0x9d, 0x26, 0xe5, 0xb3, 0x80, 0xa9, 0xda, 0xd5, 0x55, 0x52, 0xfd, 0xb1, 0xa3, 0x84, 0x78,
	0x0b, 0x36, 0x7f, 0xa2, 0x53, 0x92, 0xb6, 0xb0, 0x71, 0x71, 0x04, 0x9d, 0x4c, 0x94, 0xf5, 0x88,
	0x60, 0x59, 0x8f, 0xa4, 0xdf, 0xe3, 0x3f, 0x9b, 0xb0, 0x9e, 0xd6, 0x84, 0x85, 0x53, 0xf4, 0x05,
	0xb4, 0xae, 0x67, 0x93, 0x80, 0x09, 0x49, 0x58, 0xb4, 0x93, 0x63, 0xaf, 0x94, 0x73, 0xce, 0xa2,
	0xd0, 0x46, 0xba, 0x47, 0x68, 0x98, 0x1a, 0x29, 0xd5, 0xaf, 0xa0, 0xf5, 0x9c, 0x84, 0x2e, 0xf5,
	0xd5, 0xb2, 0x97, 0xb3, 0x54, 0x72, 0x9f, 0x88, 0x65, 0xb6, 0x27, 0x00, 0xa7, 0x01, 0x0d, 0x3d,
	0xb5, 0xea, 0xe6, 0x4c, 0xa5, 0x38, 0xa0, 0xa1, 0xb0, 0xb7, 0x75, 0x2f, 0x14, 0xee, 0x97, 0xef,
	0xa1, 0x5d, 0x1c, 0xe0, 0x68, 0x3f, 0xa7, 0x56, 0xee, 0x3f, 0xfb, 0xa0, 0x1a, 0xd4, 0xce, 0xbe,
	0xd3, 0xb7, 0x97, 0x39, 0x54, 0x64, 0x17, 0xd5, 0xf3, 0x2d, 0x62, 0xef, 0x57, 0x62, 0xda, 0xd3,
	0xcf, 0x80, 0x16, 0x27, 0x24, 0x7a, 0x94, 0x33, 0xa9, 0x1a, 0xc8, 0xf6, 0xe1, 0x72, 0x05, 0xed,
	0xf8, 0x29, 0xac, 0xeb, 0x39, 0x89, 0x34, 0x37, 0x8a, 0x83, 0xd4, 0xde, 0x29, 0x49, 0x33, 0x3b,
	0x3d, 0xa3, 0x8c, 0x5d, 0x71, 0x80, 0x1a, 0xbb, 0xf2, 0x20, 0x3b, 0x83, 0x56, 0x6e, 0xd2, 0xa0,
	0x7e, 0xde, 0x7b, 0x7e, 0x66, 0xd9, 0x7b, 0x15, 0x48, 0x76, 0x46, 0x45, 0x9a, 0x9a, 0x33, 0xaa,
	0x9c, 0x11, 0xe6, 0x8c, 0x96, 0x30, 0xfb, 0x47, 0xe8, 0x94, 0xb9, 0x87, 0xde, 0x57, 0x16, 0x4b,
	0xc8, 0x6c, 0x3f, 0x5c, 0x06, 0x6b, 0x97, 0x27, 0x00, 0x19, 0xfd, 0x50, 0x4f, 0x69, 0x2f, 0x10,
	0xd2, 0xd6, 0x73, 0x31, 0xa7, 0xfa, 0x0c, 0x5a, 0x2f, 0xa8, 0x30, 0x14, 0x43, 0xba, 0x84, 0x25,
	0x16, 0xda, 0xbb, 0x65, 0xb1, 0x0e, 0xfb, 0x0d, 0x6c, 0x96, 0x9e, 0xa8, 0xa8, 0xd0, 0x9e, 0xe5,
	0x87, 0x97, 0x9d, 0xbf, 0x49, 0x47, 0x56, 0x6a, 0x5f, 0x7a, 0x92, 0xa2, 0x42, 0xe9, 0x96, 0xd9,
	0x4b, 0x74, 0x64, 0xa1, 0x53, 0xe8, 0x94, 0x9f, 0xa0, 0xa6, 0x92, 0x4b, 0x9e, 0xa6, 0x76, 0xe1,
	0x16, 0x1b, 0x59, 0xe8, 0x12, 0xba, 0x55, 0x4f, 0x4c, 0xf4, 0x78, 0xa1, 0x19, 0x16, 0x5c, 0x6d,
	0xe5, 0x87, 0xa2, 0x54, 0x19, 0x59, 0xe8, 0x25, 0xa0, 0xc5, 0x77, 0xa7, 0xa1, 0xcd, 0xd2, 0x17,
	0xa9, 0x5d, 0x39, 0x60, 0x47, 0xd6, 0xd9, 0xf1, 0x2f, 0x47, 0x6e, 0xe4, 0x51, 0x89, 0xca, 0xdf,
	0x02, 0x37, 0xf2, 0x07, 0x4c, 0xfd, 0x5f, 0x0c, 0xf3, 0x7f, 0x22, 0x93, 0x86, 0x84, 0x3f, 0xfb,
	0x27, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x93, 0x2e, 0x76, 0xa0, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TradingClient is the client API for Trading service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TradingClient interface {
	// unary calls
	SubmitOrder(ctx context.Context, in *proto1.OrderSubmission, opts ...grpc.CallOption) (*proto1.PendingOrder, error)
	CancelOrder(ctx context.Context, in *proto1.OrderCancellation, opts ...grpc.CallOption) (*proto1.PendingOrder, error)
	AmendOrder(ctx context.Context, in *proto1.OrderAmendment, opts ...grpc.CallOption) (*OrderResponse, error)
	OrdersByMarket(ctx context.Context, in *OrdersByMarketRequest, opts ...grpc.CallOption) (*OrdersByMarketResponse, error)
	OrdersByParty(ctx context.Context, in *OrdersByPartyRequest, opts ...grpc.CallOption) (*OrdersByPartyResponse, error)
	OrderByMarketAndId(ctx context.Context, in *OrderByMarketAndIdRequest, opts ...grpc.CallOption) (*OrderByMarketAndIdResponse, error)
	Markets(ctx context.Context, in *MarketsRequest, opts ...grpc.CallOption) (*MarketsResponse, error)
	Candles(ctx context.Context, in *CandlesRequest, opts ...grpc.CallOption) (*CandlesResponse, error)
	MarketDepth(ctx context.Context, in *MarketDepthRequest, opts ...grpc.CallOption) (*MarketDepthResponse, error)
	TradesByMarket(ctx context.Context, in *TradesByMarketRequest, opts ...grpc.CallOption) (*TradesByMarketResponse, error)
	PositionsByParty(ctx context.Context, in *PositionsByPartyRequest, opts ...grpc.CallOption) (*PositionsByPartyResponse, error)
	Statistics(ctx context.Context, in *StatisticsRequest, opts ...grpc.CallOption) (*proto1.Statistics, error)
	GetVegaTime(ctx context.Context, in *VegaTimeRequest, opts ...grpc.CallOption) (*VegaTimeResponse, error)
	// streams
	OrdersSubscribe(ctx context.Context, in *OrdersSubscribeRequest, opts ...grpc.CallOption) (Trading_OrdersSubscribeClient, error)
	TradesSubscribe(ctx context.Context, in *TradesSubscribeRequest, opts ...grpc.CallOption) (Trading_TradesSubscribeClient, error)
	CandlesSubscribe(ctx context.Context, in *CandlesSubscribeRequest, opts ...grpc.CallOption) (Trading_CandlesSubscribeClient, error)
	MarketDepthSubscribe(ctx context.Context, in *MarketDepthSubscribeRequest, opts ...grpc.CallOption) (Trading_MarketDepthSubscribeClient, error)
	PositionsSubscribe(ctx context.Context, in *PositionsSubscribeRequest, opts ...grpc.CallOption) (Trading_PositionsSubscribeClient, error)
}

type tradingClient struct {
	cc *grpc.ClientConn
}

func NewTradingClient(cc *grpc.ClientConn) TradingClient {
	return &tradingClient{cc}
}

func (c *tradingClient) SubmitOrder(ctx context.Context, in *proto1.OrderSubmission, opts ...grpc.CallOption) (*proto1.PendingOrder, error) {
	out := new(proto1.PendingOrder)
	err := c.cc.Invoke(ctx, "/grpc.trading/SubmitOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) CancelOrder(ctx context.Context, in *proto1.OrderCancellation, opts ...grpc.CallOption) (*proto1.PendingOrder, error) {
	out := new(proto1.PendingOrder)
	err := c.cc.Invoke(ctx, "/grpc.trading/CancelOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) AmendOrder(ctx context.Context, in *proto1.OrderAmendment, opts ...grpc.CallOption) (*OrderResponse, error) {
	out := new(OrderResponse)
	err := c.cc.Invoke(ctx, "/grpc.trading/AmendOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) OrdersByMarket(ctx context.Context, in *OrdersByMarketRequest, opts ...grpc.CallOption) (*OrdersByMarketResponse, error) {
	out := new(OrdersByMarketResponse)
	err := c.cc.Invoke(ctx, "/grpc.trading/OrdersByMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) OrdersByParty(ctx context.Context, in *OrdersByPartyRequest, opts ...grpc.CallOption) (*OrdersByPartyResponse, error) {
	out := new(OrdersByPartyResponse)
	err := c.cc.Invoke(ctx, "/grpc.trading/OrdersByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) OrderByMarketAndId(ctx context.Context, in *OrderByMarketAndIdRequest, opts ...grpc.CallOption) (*OrderByMarketAndIdResponse, error) {
	out := new(OrderByMarketAndIdResponse)
	err := c.cc.Invoke(ctx, "/grpc.trading/OrderByMarketAndId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) Markets(ctx context.Context, in *MarketsRequest, opts ...grpc.CallOption) (*MarketsResponse, error) {
	out := new(MarketsResponse)
	err := c.cc.Invoke(ctx, "/grpc.trading/Markets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) Candles(ctx context.Context, in *CandlesRequest, opts ...grpc.CallOption) (*CandlesResponse, error) {
	out := new(CandlesResponse)
	err := c.cc.Invoke(ctx, "/grpc.trading/Candles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) MarketDepth(ctx context.Context, in *MarketDepthRequest, opts ...grpc.CallOption) (*MarketDepthResponse, error) {
	out := new(MarketDepthResponse)
	err := c.cc.Invoke(ctx, "/grpc.trading/MarketDepth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) TradesByMarket(ctx context.Context, in *TradesByMarketRequest, opts ...grpc.CallOption) (*TradesByMarketResponse, error) {
	out := new(TradesByMarketResponse)
	err := c.cc.Invoke(ctx, "/grpc.trading/TradesByMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) PositionsByParty(ctx context.Context, in *PositionsByPartyRequest, opts ...grpc.CallOption) (*PositionsByPartyResponse, error) {
	out := new(PositionsByPartyResponse)
	err := c.cc.Invoke(ctx, "/grpc.trading/PositionsByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) Statistics(ctx context.Context, in *StatisticsRequest, opts ...grpc.CallOption) (*proto1.Statistics, error) {
	out := new(proto1.Statistics)
	err := c.cc.Invoke(ctx, "/grpc.trading/Statistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) GetVegaTime(ctx context.Context, in *VegaTimeRequest, opts ...grpc.CallOption) (*VegaTimeResponse, error) {
	out := new(VegaTimeResponse)
	err := c.cc.Invoke(ctx, "/grpc.trading/GetVegaTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) OrdersSubscribe(ctx context.Context, in *OrdersSubscribeRequest, opts ...grpc.CallOption) (Trading_OrdersSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trading_serviceDesc.Streams[0], "/grpc.trading/OrdersSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingOrdersSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trading_OrdersSubscribeClient interface {
	Recv() (*proto1.Order, error)
	grpc.ClientStream
}

type tradingOrdersSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingOrdersSubscribeClient) Recv() (*proto1.Order, error) {
	m := new(proto1.Order)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingClient) TradesSubscribe(ctx context.Context, in *TradesSubscribeRequest, opts ...grpc.CallOption) (Trading_TradesSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trading_serviceDesc.Streams[1], "/grpc.trading/TradesSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingTradesSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trading_TradesSubscribeClient interface {
	Recv() (*proto1.Trade, error)
	grpc.ClientStream
}

type tradingTradesSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingTradesSubscribeClient) Recv() (*proto1.Trade, error) {
	m := new(proto1.Trade)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingClient) CandlesSubscribe(ctx context.Context, in *CandlesSubscribeRequest, opts ...grpc.CallOption) (Trading_CandlesSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trading_serviceDesc.Streams[2], "/grpc.trading/CandlesSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingCandlesSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trading_CandlesSubscribeClient interface {
	Recv() (*proto1.Candle, error)
	grpc.ClientStream
}

type tradingCandlesSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingCandlesSubscribeClient) Recv() (*proto1.Candle, error) {
	m := new(proto1.Candle)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingClient) MarketDepthSubscribe(ctx context.Context, in *MarketDepthSubscribeRequest, opts ...grpc.CallOption) (Trading_MarketDepthSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trading_serviceDesc.Streams[3], "/grpc.trading/MarketDepthSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingMarketDepthSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trading_MarketDepthSubscribeClient interface {
	Recv() (*proto1.MarketDepth, error)
	grpc.ClientStream
}

type tradingMarketDepthSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingMarketDepthSubscribeClient) Recv() (*proto1.MarketDepth, error) {
	m := new(proto1.MarketDepth)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingClient) PositionsSubscribe(ctx context.Context, in *PositionsSubscribeRequest, opts ...grpc.CallOption) (Trading_PositionsSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trading_serviceDesc.Streams[4], "/grpc.trading/PositionsSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingPositionsSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trading_PositionsSubscribeClient interface {
	Recv() (*proto1.MarketPosition, error)
	grpc.ClientStream
}

type tradingPositionsSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingPositionsSubscribeClient) Recv() (*proto1.MarketPosition, error) {
	m := new(proto1.MarketPosition)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TradingServer is the server API for Trading service.
type TradingServer interface {
	// unary calls
	SubmitOrder(context.Context, *proto1.OrderSubmission) (*proto1.PendingOrder, error)
	CancelOrder(context.Context, *proto1.OrderCancellation) (*proto1.PendingOrder, error)
	AmendOrder(context.Context, *proto1.OrderAmendment) (*OrderResponse, error)
	OrdersByMarket(context.Context, *OrdersByMarketRequest) (*OrdersByMarketResponse, error)
	OrdersByParty(context.Context, *OrdersByPartyRequest) (*OrdersByPartyResponse, error)
	OrderByMarketAndId(context.Context, *OrderByMarketAndIdRequest) (*OrderByMarketAndIdResponse, error)
	Markets(context.Context, *MarketsRequest) (*MarketsResponse, error)
	Candles(context.Context, *CandlesRequest) (*CandlesResponse, error)
	MarketDepth(context.Context, *MarketDepthRequest) (*MarketDepthResponse, error)
	TradesByMarket(context.Context, *TradesByMarketRequest) (*TradesByMarketResponse, error)
	PositionsByParty(context.Context, *PositionsByPartyRequest) (*PositionsByPartyResponse, error)
	Statistics(context.Context, *StatisticsRequest) (*proto1.Statistics, error)
	GetVegaTime(context.Context, *VegaTimeRequest) (*VegaTimeResponse, error)
	// streams
	OrdersSubscribe(*OrdersSubscribeRequest, Trading_OrdersSubscribeServer) error
	TradesSubscribe(*TradesSubscribeRequest, Trading_TradesSubscribeServer) error
	CandlesSubscribe(*CandlesSubscribeRequest, Trading_CandlesSubscribeServer) error
	MarketDepthSubscribe(*MarketDepthSubscribeRequest, Trading_MarketDepthSubscribeServer) error
	PositionsSubscribe(*PositionsSubscribeRequest, Trading_PositionsSubscribeServer) error
}

func RegisterTradingServer(s *grpc.Server, srv TradingServer) {
	s.RegisterService(&_Trading_serviceDesc, srv)
}

func _Trading_SubmitOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.OrderSubmission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).SubmitOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/SubmitOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).SubmitOrder(ctx, req.(*proto1.OrderSubmission))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_CancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.OrderCancellation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).CancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/CancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).CancelOrder(ctx, req.(*proto1.OrderCancellation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_AmendOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.OrderAmendment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).AmendOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/AmendOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).AmendOrder(ctx, req.(*proto1.OrderAmendment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_OrdersByMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdersByMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).OrdersByMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/OrdersByMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).OrdersByMarket(ctx, req.(*OrdersByMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_OrdersByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdersByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).OrdersByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/OrdersByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).OrdersByParty(ctx, req.(*OrdersByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_OrderByMarketAndId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderByMarketAndIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).OrderByMarketAndId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/OrderByMarketAndId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).OrderByMarketAndId(ctx, req.(*OrderByMarketAndIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_Markets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).Markets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/Markets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).Markets(ctx, req.(*MarketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_Candles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CandlesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).Candles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/Candles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).Candles(ctx, req.(*CandlesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_MarketDepth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarketDepthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).MarketDepth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/MarketDepth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).MarketDepth(ctx, req.(*MarketDepthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_TradesByMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradesByMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).TradesByMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/TradesByMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).TradesByMarket(ctx, req.(*TradesByMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_PositionsByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionsByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).PositionsByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/PositionsByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).PositionsByParty(ctx, req.(*PositionsByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_Statistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).Statistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/Statistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).Statistics(ctx, req.(*StatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_GetVegaTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VegaTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).GetVegaTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.trading/GetVegaTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).GetVegaTime(ctx, req.(*VegaTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_OrdersSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OrdersSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingServer).OrdersSubscribe(m, &tradingOrdersSubscribeServer{stream})
}

type Trading_OrdersSubscribeServer interface {
	Send(*proto1.Order) error
	grpc.ServerStream
}

type tradingOrdersSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingOrdersSubscribeServer) Send(m *proto1.Order) error {
	return x.ServerStream.SendMsg(m)
}

func _Trading_TradesSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TradesSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingServer).TradesSubscribe(m, &tradingTradesSubscribeServer{stream})
}

type Trading_TradesSubscribeServer interface {
	Send(*proto1.Trade) error
	grpc.ServerStream
}

type tradingTradesSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingTradesSubscribeServer) Send(m *proto1.Trade) error {
	return x.ServerStream.SendMsg(m)
}

func _Trading_CandlesSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CandlesSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingServer).CandlesSubscribe(m, &tradingCandlesSubscribeServer{stream})
}

type Trading_CandlesSubscribeServer interface {
	Send(*proto1.Candle) error
	grpc.ServerStream
}

type tradingCandlesSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingCandlesSubscribeServer) Send(m *proto1.Candle) error {
	return x.ServerStream.SendMsg(m)
}

func _Trading_MarketDepthSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MarketDepthSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingServer).MarketDepthSubscribe(m, &tradingMarketDepthSubscribeServer{stream})
}

type Trading_MarketDepthSubscribeServer interface {
	Send(*proto1.MarketDepth) error
	grpc.ServerStream
}

type tradingMarketDepthSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingMarketDepthSubscribeServer) Send(m *proto1.MarketDepth) error {
	return x.ServerStream.SendMsg(m)
}

func _Trading_PositionsSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PositionsSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingServer).PositionsSubscribe(m, &tradingPositionsSubscribeServer{stream})
}

type Trading_PositionsSubscribeServer interface {
	Send(*proto1.MarketPosition) error
	grpc.ServerStream
}

type tradingPositionsSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingPositionsSubscribeServer) Send(m *proto1.MarketPosition) error {
	return x.ServerStream.SendMsg(m)
}

var _Trading_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.trading",
	HandlerType: (*TradingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitOrder",
			Handler:    _Trading_SubmitOrder_Handler,
		},
		{
			MethodName: "CancelOrder",
			Handler:    _Trading_CancelOrder_Handler,
		},
		{
			MethodName: "AmendOrder",
			Handler:    _Trading_AmendOrder_Handler,
		},
		{
			MethodName: "OrdersByMarket",
			Handler:    _Trading_OrdersByMarket_Handler,
		},
		{
			MethodName: "OrdersByParty",
			Handler:    _Trading_OrdersByParty_Handler,
		},
		{
			MethodName: "OrderByMarketAndId",
			Handler:    _Trading_OrderByMarketAndId_Handler,
		},
		{
			MethodName: "Markets",
			Handler:    _Trading_Markets_Handler,
		},
		{
			MethodName: "Candles",
			Handler:    _Trading_Candles_Handler,
		},
		{
			MethodName: "MarketDepth",
			Handler:    _Trading_MarketDepth_Handler,
		},
		{
			MethodName: "TradesByMarket",
			Handler:    _Trading_TradesByMarket_Handler,
		},
		{
			MethodName: "PositionsByParty",
			Handler:    _Trading_PositionsByParty_Handler,
		},
		{
			MethodName: "Statistics",
			Handler:    _Trading_Statistics_Handler,
		},
		{
			MethodName: "GetVegaTime",
			Handler:    _Trading_GetVegaTime_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OrdersSubscribe",
			Handler:       _Trading_OrdersSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "TradesSubscribe",
			Handler:       _Trading_TradesSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CandlesSubscribe",
			Handler:       _Trading_CandlesSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MarketDepthSubscribe",
			Handler:       _Trading_MarketDepthSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PositionsSubscribe",
			Handler:       _Trading_PositionsSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "internal/api/grpc.proto",
}
