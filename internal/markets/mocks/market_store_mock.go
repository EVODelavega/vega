// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/internal/markets (interfaces: ServiceMarketStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	proto "code.vegaprotocol.io/vega/proto"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockServiceMarketStore is a mock of ServiceMarketStore interface
type MockServiceMarketStore struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMarketStoreMockRecorder
}

// MockServiceMarketStoreMockRecorder is the mock recorder for MockServiceMarketStore
type MockServiceMarketStoreMockRecorder struct {
	mock *MockServiceMarketStore
}

// NewMockServiceMarketStore creates a new mock instance
func NewMockServiceMarketStore(ctrl *gomock.Controller) *MockServiceMarketStore {
	mock := &MockServiceMarketStore{ctrl: ctrl}
	mock.recorder = &MockServiceMarketStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockServiceMarketStore) EXPECT() *MockServiceMarketStoreMockRecorder {
	return m.recorder
}

// GetAll mocks base method
func (m *MockServiceMarketStore) GetAll() ([]*proto.Market, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*proto.Market)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockServiceMarketStoreMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockServiceMarketStore)(nil).GetAll))
}

// GetByID mocks base method
func (m *MockServiceMarketStore) GetByID(arg0 string) (*proto.Market, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*proto.Market)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockServiceMarketStoreMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockServiceMarketStore)(nil).GetByID), arg0)
}

// Post mocks base method
func (m *MockServiceMarketStore) Post(arg0 *proto.Market) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Post", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Post indicates an expected call of Post
func (mr *MockServiceMarketStoreMockRecorder) Post(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Post", reflect.TypeOf((*MockServiceMarketStore)(nil).Post), arg0)
}
