// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/internal/vegatime (interfaces: Service)

// Package newmocks is a generated GoMock package.
package newmocks

import (
	vegatime "code.vegaprotocol.io/vega/internal/vegatime"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetTimeLastBatch mocks base method
func (m *MockService) GetTimeLastBatch() (vegatime.Stamp, time.Time, error) {
	ret := m.ctrl.Call(m, "GetTimeLastBatch")
	ret0, _ := ret[0].(vegatime.Stamp)
	ret1, _ := ret[1].(time.Time)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetTimeLastBatch indicates an expected call of GetTimeLastBatch
func (mr *MockServiceMockRecorder) GetTimeLastBatch() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTimeLastBatch", reflect.TypeOf((*MockService)(nil).GetTimeLastBatch))
}

// GetTimeNow mocks base method
func (m *MockService) GetTimeNow() (vegatime.Stamp, time.Time, error) {
	ret := m.ctrl.Call(m, "GetTimeNow")
	ret0, _ := ret[0].(vegatime.Stamp)
	ret1, _ := ret[1].(time.Time)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetTimeNow indicates an expected call of GetTimeNow
func (mr *MockServiceMockRecorder) GetTimeNow() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTimeNow", reflect.TypeOf((*MockService)(nil).GetTimeNow))
}

// SetTimeNow mocks base method
func (m *MockService) SetTimeNow(arg0 vegatime.Stamp) {
	m.ctrl.Call(m, "SetTimeNow", arg0)
}

// SetTimeNow indicates an expected call of SetTimeNow
func (mr *MockServiceMockRecorder) SetTimeNow(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTimeNow", reflect.TypeOf((*MockService)(nil).SetTimeNow), arg0)
}
