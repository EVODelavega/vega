syntax = "proto3";

package vega;
option go_package = "code.vegaprotocol.io/vega/proto";

import "github.com/mwitkow/go-proto-validators/validator.proto";
//import "markets.proto";

message NetworkConfiguration {
  uint64  minCloseInDays = 1;
  uint64  maxCloseInDays = 2;

  uint64  minEnactInDays  = 3;
  uint64  maxEnactInDays  = 4;

  uint64 minParticipationStake = 5 [(validator.field) = {int_gt: 0}];
}


message Vote {
    enum Value {
        NO  = 0;
        YES = 1;
    }

    string voter = 1 [(validator.field) = {string_not_empty : true}];
    Value  value = 2 [(validator.field) = {is_in_enum : true}];
    uint64 stake = 3 [(validator.field) = {int_gt: 0}];
}


message Proposal {
  // Proposal terms
  message Terms {
    message Parameters {
      uint64 closeInDays           = 1;
      uint64 enactInDays           = 2;
      uint64 minParticipationStake = 3 [(validator.field) = {int_gt: 0, int_lt: 100}];
    }
  
    message UpdateMarket {
    }
    message NewMarket {
      //Market market = 1 [(validator.field) = {msg_exists: true}];
    }
    message UpdateNetwork {
      NetworkConfiguration changes = 1 [(validator.field) = {msg_exists: true}];
    }
  
    Parameters    parameters  = 1 [(validator.field) = {msg_exists: true}];
    oneof change {
      UpdateMarket  updateMarket  = 101;
      NewMarket     newMarket     = 102;
      UpdateNetwork updateNetwork = 103;
    };
  }

  // Proposal state transition:
  // Open ->
  //   - Passed -> Enacted.
  //   - Rejected.
  // Proposal can enter Failed state from any other state.
  enum State {
    // Proposal became invalid and cannot be processed.
    FAILED    = 0;

    // Proposal is open for voting.
    OPEN      = 1;

    // Proposal has gained enough support to be executed.
    PASSED    = 2;

    // Proposal has could not gain enough support to be executed.
    REJECTED  = 3;

    // Proposal has been executed and the changes under this proposal have now been applied.
    ENACTED   = 4;
  }

  string        id        = 1;
  string        reference = 2 [(validator.field) = {string_not_empty : true}];
  string        author    = 3 [(validator.field) = {string_not_empty : true}];
  State         state     = 4 [(validator.field) = {is_in_enum: true}];
  int64         timestamp = 5;
  Terms         proposal  = 6 [(validator.field) = {msg_exists: true}];
  repeated Vote votes     = 7;
}