syntax = "proto3";

package vega;
option go_package = "code.vegaprotocol.io/vega/proto";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "markets.proto";

message NetworkConfiguration {
    int64  minClosingDateTime = 1;
    int64  maxClosingDateTime = 2;

    int64  minEnactmentDateTime  = 3;
    int64  maxEnactmentDateTime  = 4;

    uint64 minParticipationPx = 5;
}

message Vote {
    enum Value {
        NO  = 0;
        YES = 1;
    }

    string voter    = 1 [(validator.field) = {string_not_empty : true}];
    Value  value    = 2 [(validator.field) = {is_in_enum : true}];
    uint64 stakePx  = 3 [(validator.field) = {int_gt: 0, int_lt: 100}];
}

message Proposal {
    // Proposal state transition:
    // Open ->
    //   - Passed -> Enacted.
    //   - Rejected.
    // Proposal can enter Failed state from any other state.
    enum State {
      // Proposal became invalid and cannot be processed.
      FAILED    = 0;
  
      // Proposal is open for voting.
      OPEN      = 1;
  
      // Proposal has gained enough support to be executed.
      PASSED    = 2;
  
      // Proposal has could not gain enough support to be executed.
      REJECTED  = 3;
  
      // Proposal has been executed and the changes under this proposal have now been applied.
      ENACTED   = 4;
    }
  
    message Parameters {
      int64  closingDateTime    = 1;
      int64  enactmentDateTime  = 2;
      uint64 minParticipationPx = 3 [(validator.field) = {int_gt: 0, int_lt: 100}];
    }
  
    message UpdateMarket {
      string              marketId  = 1 [(validator.field) = {string_not_empty : true}];
      map<string, string> changes   = 2;
    }
    message NewMarket {
      Market market = 1 [(validator.field) = {msg_exists: true}];
    }
    message UpdateNetwork {
      NetworkConfiguration changes = 1;
    }
  
    State         state       = 1 [(validator.field) = {is_in_enum: true}];
    string        author      = 3 [(validator.field) = {string_not_empty : true}];
    int64         timestamp   = 4;
    repeated Vote votes       = 5;
    Parameters    parameters  = 6 [(validator.field) = {msg_exists: true}];
    oneof change {
      UpdateMarket  updateMarket  = 101;
      NewMarket     newMarket     = 102;
      UpdateNetwork updateNetwork = 103;
    };
  }