// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/vega.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Side int32

const (
	// Default value, always invalid
	Side_SIDE_UNSPECIFIED Side = 0
	// Buy
	Side_SIDE_BUY Side = 1
	// Sell
	Side_SIDE_SELL Side = 2
)

var Side_name = map[int32]string{
	0: "SIDE_UNSPECIFIED",
	1: "SIDE_BUY",
	2: "SIDE_SELL",
}

var Side_value = map[string]int32{
	"SIDE_UNSPECIFIED": 0,
	"SIDE_BUY":         1,
	"SIDE_SELL":        2,
}

func (x Side) String() string {
	return proto.EnumName(Side_name, int32(x))
}

func (Side) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{0}
}

type Interval int32

const (
	// Default value, always invalid
	Interval_INTERVAL_UNSPECIFIED Interval = 0
	// 1 minute
	Interval_INTERVAL_I1M Interval = 60
	// 5 minutes
	Interval_INTERVAL_I5M Interval = 300
	// 15 minutes
	Interval_INTERVAL_I15M Interval = 900
	// 1 hour
	Interval_INTERVAL_I1H Interval = 3600
	// 6 hours
	Interval_INTERVAL_I6H Interval = 21600
	// 1 day
	Interval_INTERVAL_I1D Interval = 86400
)

var Interval_name = map[int32]string{
	0:     "INTERVAL_UNSPECIFIED",
	60:    "INTERVAL_I1M",
	300:   "INTERVAL_I5M",
	900:   "INTERVAL_I15M",
	3600:  "INTERVAL_I1H",
	21600: "INTERVAL_I6H",
	86400: "INTERVAL_I1D",
}

var Interval_value = map[string]int32{
	"INTERVAL_UNSPECIFIED": 0,
	"INTERVAL_I1M":         60,
	"INTERVAL_I5M":         300,
	"INTERVAL_I15M":        900,
	"INTERVAL_I1H":         3600,
	"INTERVAL_I6H":         21600,
	"INTERVAL_I1D":         86400,
}

func (x Interval) String() string {
	return proto.EnumName(Interval_name, int32(x))
}

func (Interval) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{1}
}

// Set when an order has an issue
type OrderError int32

const (
	// Empty default error
	OrderError_ORDER_ERROR_NONE OrderError = 0
	// Order was submitted for a market that does not exist
	OrderError_ORDER_ERROR_INVALID_MARKET_ID OrderError = 1
	// Order was submitted with an invalid ID
	OrderError_ORDER_ERROR_INVALID_ORDER_ID OrderError = 2
	// Order was amended with a sequence number that was not previous version + 1
	OrderError_ORDER_ERROR_OUT_OF_SEQUENCE OrderError = 3
	// Order was amended with an invalid remaining size (e.g. remaining greater than total size)
	OrderError_ORDER_ERROR_INVALID_REMAINING_SIZE OrderError = 4
	// Node was unable to get Vega (blockchain) time
	OrderError_ORDER_ERROR_TIME_FAILURE OrderError = 5
	// Failed to remove an order from the book
	OrderError_ORDER_ERROR_REMOVAL_FAILURE OrderError = 6
	// GTT Order submitted or amended with an expiration that was badly formatted or otherwise invalid
	OrderError_ORDER_ERROR_INVALID_EXPIRATION_DATETIME OrderError = 7
	// Order was submitted or amended with an invalid reference field
	OrderError_ORDER_ERROR_INVALID_ORDER_REFERENCE OrderError = 8
	// Order amend was submitted for an order field that cannot not be amended (e.g. order id)
	OrderError_ORDER_ERROR_EDIT_NOT_ALLOWED OrderError = 9
	// Amend failure because amend details do not match original order
	OrderError_ORDER_ERROR_AMEND_FAILURE OrderError = 10
	// Order not found in the order book or in order store
	OrderError_ORDER_ERROR_NOT_FOUND OrderError = 11
	// Order was submitted with an invalid or missing party ID
	OrderError_ORDER_ERROR_INVALID_PARTY_ID OrderError = 12
	// Order was submitted for a market that has closed
	OrderError_ORDER_ERROR_MARKET_CLOSED OrderError = 13
	// Order was submitted, but the party did not have enough collateral to cover the order
	OrderError_ORDER_ERROR_MARGIN_CHECK_FAILED OrderError = 14
	// Order was submitted, but the party did not have an account for this asset
	OrderError_ORDER_ERROR_MISSING_GENERAL_ACCOUNT OrderError = 15
	// Unspecified internal error
	OrderError_ORDER_ERROR_INTERNAL_ERROR OrderError = 16
	// Order was submitted with an invalid or missing size (e.g. 0)
	OrderError_ORDER_ERROR_INVALID_SIZE OrderError = 17
	// Order was submitted with an invalid persistence for its type
	OrderError_ORDER_ERROR_INVALID_PERSISTENCE OrderError = 18
	// Order was submitted with an invalid type field
	OrderError_ORDER_ERROR_INVALID_TYPE OrderError = 19
	// Order was stopped as it would have traded with another order for the same party
	OrderError_ORDER_ERROR_SELF_TRADING OrderError = 20
	// Order was submitted, but the party did not have enough collateral to cover the fees for the order
	OrderError_ORDER_ERROR_INSUFFICIENT_FUNDS_TO_PAY_FEES OrderError = 21
)

var OrderError_name = map[int32]string{
	0:  "ORDER_ERROR_NONE",
	1:  "ORDER_ERROR_INVALID_MARKET_ID",
	2:  "ORDER_ERROR_INVALID_ORDER_ID",
	3:  "ORDER_ERROR_OUT_OF_SEQUENCE",
	4:  "ORDER_ERROR_INVALID_REMAINING_SIZE",
	5:  "ORDER_ERROR_TIME_FAILURE",
	6:  "ORDER_ERROR_REMOVAL_FAILURE",
	7:  "ORDER_ERROR_INVALID_EXPIRATION_DATETIME",
	8:  "ORDER_ERROR_INVALID_ORDER_REFERENCE",
	9:  "ORDER_ERROR_EDIT_NOT_ALLOWED",
	10: "ORDER_ERROR_AMEND_FAILURE",
	11: "ORDER_ERROR_NOT_FOUND",
	12: "ORDER_ERROR_INVALID_PARTY_ID",
	13: "ORDER_ERROR_MARKET_CLOSED",
	14: "ORDER_ERROR_MARGIN_CHECK_FAILED",
	15: "ORDER_ERROR_MISSING_GENERAL_ACCOUNT",
	16: "ORDER_ERROR_INTERNAL_ERROR",
	17: "ORDER_ERROR_INVALID_SIZE",
	18: "ORDER_ERROR_INVALID_PERSISTENCE",
	19: "ORDER_ERROR_INVALID_TYPE",
	20: "ORDER_ERROR_SELF_TRADING",
	21: "ORDER_ERROR_INSUFFICIENT_FUNDS_TO_PAY_FEES",
}

var OrderError_value = map[string]int32{
	"ORDER_ERROR_NONE":                           0,
	"ORDER_ERROR_INVALID_MARKET_ID":              1,
	"ORDER_ERROR_INVALID_ORDER_ID":               2,
	"ORDER_ERROR_OUT_OF_SEQUENCE":                3,
	"ORDER_ERROR_INVALID_REMAINING_SIZE":         4,
	"ORDER_ERROR_TIME_FAILURE":                   5,
	"ORDER_ERROR_REMOVAL_FAILURE":                6,
	"ORDER_ERROR_INVALID_EXPIRATION_DATETIME":    7,
	"ORDER_ERROR_INVALID_ORDER_REFERENCE":        8,
	"ORDER_ERROR_EDIT_NOT_ALLOWED":               9,
	"ORDER_ERROR_AMEND_FAILURE":                  10,
	"ORDER_ERROR_NOT_FOUND":                      11,
	"ORDER_ERROR_INVALID_PARTY_ID":               12,
	"ORDER_ERROR_MARKET_CLOSED":                  13,
	"ORDER_ERROR_MARGIN_CHECK_FAILED":            14,
	"ORDER_ERROR_MISSING_GENERAL_ACCOUNT":        15,
	"ORDER_ERROR_INTERNAL_ERROR":                 16,
	"ORDER_ERROR_INVALID_SIZE":                   17,
	"ORDER_ERROR_INVALID_PERSISTENCE":            18,
	"ORDER_ERROR_INVALID_TYPE":                   19,
	"ORDER_ERROR_SELF_TRADING":                   20,
	"ORDER_ERROR_INSUFFICIENT_FUNDS_TO_PAY_FEES": 21,
}

func (x OrderError) String() string {
	return proto.EnumName(OrderError_name, int32(x))
}

func (OrderError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{2}
}

type ChainStatus int32

const (
	ChainStatus_CHAIN_STATUS_UNSPECIFIED  ChainStatus = 0
	ChainStatus_CHAIN_STATUS_DISCONNECTED ChainStatus = 1
	ChainStatus_CHAIN_STATUS_REPLAYING    ChainStatus = 2
	ChainStatus_CHAIN_STATUS_CONNECTED    ChainStatus = 3
)

var ChainStatus_name = map[int32]string{
	0: "CHAIN_STATUS_UNSPECIFIED",
	1: "CHAIN_STATUS_DISCONNECTED",
	2: "CHAIN_STATUS_REPLAYING",
	3: "CHAIN_STATUS_CONNECTED",
}

var ChainStatus_value = map[string]int32{
	"CHAIN_STATUS_UNSPECIFIED":  0,
	"CHAIN_STATUS_DISCONNECTED": 1,
	"CHAIN_STATUS_REPLAYING":    2,
	"CHAIN_STATUS_CONNECTED":    3,
}

func (x ChainStatus) String() string {
	return proto.EnumName(ChainStatus_name, int32(x))
}

func (ChainStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{3}
}

type AccountType int32

const (
	// the default variant for this enum
	AccountType_ACCOUNT_TYPE_UNSPECIFIED AccountType = 0
	// This account is created to hold the insurance pool funds of a market.
	AccountType_ACCOUNT_TYPE_INSURANCE AccountType = 1
	// This account is created to hold fund while settlement or mtm occur.
	AccountType_ACCOUNT_TYPE_SETTLEMENT AccountType = 2
	// A party will have multiple margin accounts, one for each market they have traded in. The balance will shift as margin requirements on positions change
	AccountType_ACCOUNT_TYPE_MARGIN AccountType = 3
	// A party will have multiple general accounts, one for each assets they want
	// to trade with. This is the account where the funds are initially deposited
	// or withdrawn from. It's also the account where funds are taken to fullfill
	// margin requirement or fees
	AccountType_ACCOUNT_TYPE_GENERAL AccountType = 4
	//This account is created to hold fees earned for providing infrastructure
	AccountType_ACCOUNT_TYPE_FEES_INFRASTRUCTURE AccountType = 5
	// This account is created to hold fees earned for providing liquidity
	AccountType_ACCOUNT_TYPE_FEES_LIQUIDITY AccountType = 6
	// This account is created to hold fees earned for placing orders that sit on the book
	AccountType_ACCOUNT_TYPE_FEES_MAKER AccountType = 7
)

var AccountType_name = map[int32]string{
	0: "ACCOUNT_TYPE_UNSPECIFIED",
	1: "ACCOUNT_TYPE_INSURANCE",
	2: "ACCOUNT_TYPE_SETTLEMENT",
	3: "ACCOUNT_TYPE_MARGIN",
	4: "ACCOUNT_TYPE_GENERAL",
	5: "ACCOUNT_TYPE_FEES_INFRASTRUCTURE",
	6: "ACCOUNT_TYPE_FEES_LIQUIDITY",
	7: "ACCOUNT_TYPE_FEES_MAKER",
}

var AccountType_value = map[string]int32{
	"ACCOUNT_TYPE_UNSPECIFIED":         0,
	"ACCOUNT_TYPE_INSURANCE":           1,
	"ACCOUNT_TYPE_SETTLEMENT":          2,
	"ACCOUNT_TYPE_MARGIN":              3,
	"ACCOUNT_TYPE_GENERAL":             4,
	"ACCOUNT_TYPE_FEES_INFRASTRUCTURE": 5,
	"ACCOUNT_TYPE_FEES_LIQUIDITY":      6,
	"ACCOUNT_TYPE_FEES_MAKER":          7,
}

func (x AccountType) String() string {
	return proto.EnumName(AccountType_name, int32(x))
}

func (AccountType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{4}
}

type TransferType int32

const (
	TransferType_TRANSFER_TYPE_UNSPECIFIED            TransferType = 0
	TransferType_TRANSFER_TYPE_LOSS                   TransferType = 1
	TransferType_TRANSFER_TYPE_WIN                    TransferType = 2
	TransferType_TRANSFER_TYPE_CLOSE                  TransferType = 3
	TransferType_TRANSFER_TYPE_MTM_LOSS               TransferType = 4
	TransferType_TRANSFER_TYPE_MTM_WIN                TransferType = 5
	TransferType_TRANSFER_TYPE_MARGIN_LOW             TransferType = 6
	TransferType_TRANSFER_TYPE_MARGIN_HIGH            TransferType = 7
	TransferType_TRANSFER_TYPE_MARGIN_CONFISCATED     TransferType = 8
	TransferType_TRANSFER_TYPE_MAKER_FEE_PAY          TransferType = 9
	TransferType_TRANSFER_TYPE_MAKER_FEE_RECEIVE      TransferType = 10
	TransferType_TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY TransferType = 11
	TransferType_TRANSFER_TYPE_LIQUIDITY_FEE_PAY      TransferType = 12
)

var TransferType_name = map[int32]string{
	0:  "TRANSFER_TYPE_UNSPECIFIED",
	1:  "TRANSFER_TYPE_LOSS",
	2:  "TRANSFER_TYPE_WIN",
	3:  "TRANSFER_TYPE_CLOSE",
	4:  "TRANSFER_TYPE_MTM_LOSS",
	5:  "TRANSFER_TYPE_MTM_WIN",
	6:  "TRANSFER_TYPE_MARGIN_LOW",
	7:  "TRANSFER_TYPE_MARGIN_HIGH",
	8:  "TRANSFER_TYPE_MARGIN_CONFISCATED",
	9:  "TRANSFER_TYPE_MAKER_FEE_PAY",
	10: "TRANSFER_TYPE_MAKER_FEE_RECEIVE",
	11: "TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY",
	12: "TRANSFER_TYPE_LIQUIDITY_FEE_PAY",
}

var TransferType_value = map[string]int32{
	"TRANSFER_TYPE_UNSPECIFIED":            0,
	"TRANSFER_TYPE_LOSS":                   1,
	"TRANSFER_TYPE_WIN":                    2,
	"TRANSFER_TYPE_CLOSE":                  3,
	"TRANSFER_TYPE_MTM_LOSS":               4,
	"TRANSFER_TYPE_MTM_WIN":                5,
	"TRANSFER_TYPE_MARGIN_LOW":             6,
	"TRANSFER_TYPE_MARGIN_HIGH":            7,
	"TRANSFER_TYPE_MARGIN_CONFISCATED":     8,
	"TRANSFER_TYPE_MAKER_FEE_PAY":          9,
	"TRANSFER_TYPE_MAKER_FEE_RECEIVE":      10,
	"TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY": 11,
	"TRANSFER_TYPE_LIQUIDITY_FEE_PAY":      12,
}

func (x TransferType) String() string {
	return proto.EnumName(TransferType_name, int32(x))
}

func (TransferType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{5}
}

// The kind of the signature created by a node
// eg: for a new asset whitelisting, withdrawal
type NodeSignatureKind int32

const (
	// represents a unspecified / missing value from the input
	NodeSignatureKind_NODE_SIGNATURE_KIND_UNSPECIFIED NodeSignatureKind = 0
	// represents a signature for a new asset whitelisting
	NodeSignatureKind_NODE_SIGNATURE_KIND_ASSET_NEW NodeSignatureKind = 1
	// represents a signature for a asset withdrawal
	NodeSignatureKind_NODE_SIGNATURE_KIND_ASSET_WITHDRAWAL NodeSignatureKind = 2
)

var NodeSignatureKind_name = map[int32]string{
	0: "NODE_SIGNATURE_KIND_UNSPECIFIED",
	1: "NODE_SIGNATURE_KIND_ASSET_NEW",
	2: "NODE_SIGNATURE_KIND_ASSET_WITHDRAWAL",
}

var NodeSignatureKind_value = map[string]int32{
	"NODE_SIGNATURE_KIND_UNSPECIFIED":      0,
	"NODE_SIGNATURE_KIND_ASSET_NEW":        1,
	"NODE_SIGNATURE_KIND_ASSET_WITHDRAWAL": 2,
}

func (x NodeSignatureKind) String() string {
	return proto.EnumName(NodeSignatureKind_name, int32(x))
}

func (NodeSignatureKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{6}
}

// Order Time in Force
//
// See [What order types are available to trade on Vega?](https://docs.vega.xyz/docs/50-trading-questions/#what-order-types-are-available-to-trade-on-vega) for details.
type Order_TimeInForce int32

const (
	// Default value, can be valid for an amend
	Order_TIF_UNSPECIFIED Order_TimeInForce = 0
	// good til cancelled
	Order_TIF_GTC Order_TimeInForce = 1
	// good til time
	Order_TIF_GTT Order_TimeInForce = 2
	// immediate or cancel
	Order_TIF_IOC Order_TimeInForce = 3
	// fill or kill
	Order_TIF_FOK Order_TimeInForce = 4
)

var Order_TimeInForce_name = map[int32]string{
	0: "TIF_UNSPECIFIED",
	1: "TIF_GTC",
	2: "TIF_GTT",
	3: "TIF_IOC",
	4: "TIF_FOK",
}

var Order_TimeInForce_value = map[string]int32{
	"TIF_UNSPECIFIED": 0,
	"TIF_GTC":         1,
	"TIF_GTT":         2,
	"TIF_IOC":         3,
	"TIF_FOK":         4,
}

func (x Order_TimeInForce) String() string {
	return proto.EnumName(Order_TimeInForce_name, int32(x))
}

func (Order_TimeInForce) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{5, 0}
}

// Order Type
type Order_Type int32

const (
	// Default value, always invalid
	Order_TYPE_UNSPECIFIED Order_Type = 0
	// used for Limit orders
	Order_TYPE_LIMIT Order_Type = 1
	// used for Market orders
	Order_TYPE_MARKET Order_Type = 2
	// used for orders where the initiating party is the network (used for distressed traders)
	Order_TYPE_NETWORK Order_Type = 3
)

var Order_Type_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "TYPE_LIMIT",
	2: "TYPE_MARKET",
	3: "TYPE_NETWORK",
}

var Order_Type_value = map[string]int32{
	"TYPE_UNSPECIFIED": 0,
	"TYPE_LIMIT":       1,
	"TYPE_MARKET":      2,
	"TYPE_NETWORK":     3,
}

func (x Order_Type) String() string {
	return proto.EnumName(Order_Type_name, int32(x))
}

func (Order_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{5, 1}
}

// Order Status
//
// See [What order types are available to trade on Vega?](https://docs.vega.xyz/docs/50-trading-questions/#what-order-types-are-available-to-trade-on-vega) for details.
type Order_Status int32

const (
	// Default value, always invalid
	Order_STATUS_INVALID Order_Status = 0
	// used for active unfilled or partially filled orders
	Order_STATUS_ACTIVE Order_Status = 1
	// used for expired GTT orders
	Order_STATUS_EXPIRED Order_Status = 2
	// used for orders cancelled by the party that created the order
	Order_STATUS_CANCELLED Order_Status = 3
	// used for unfilled FOK or IOC orders, and for orders that were stopped by the network
	Order_STATUS_STOPPED Order_Status = 4
	// used for closed fully filled orders
	Order_STATUS_FILLED Order_Status = 5
	// used for orders when not enough collateral was available to fill the margin requirements
	Order_STATUS_REJECTED Order_Status = 6
	// used for closed partially filled IOC orders
	Order_STATUS_PARTIALLY_FILLED Order_Status = 7
)

var Order_Status_name = map[int32]string{
	0: "STATUS_INVALID",
	1: "STATUS_ACTIVE",
	2: "STATUS_EXPIRED",
	3: "STATUS_CANCELLED",
	4: "STATUS_STOPPED",
	5: "STATUS_FILLED",
	6: "STATUS_REJECTED",
	7: "STATUS_PARTIALLY_FILLED",
}

var Order_Status_value = map[string]int32{
	"STATUS_INVALID":          0,
	"STATUS_ACTIVE":           1,
	"STATUS_EXPIRED":          2,
	"STATUS_CANCELLED":        3,
	"STATUS_STOPPED":          4,
	"STATUS_FILLED":           5,
	"STATUS_REJECTED":         6,
	"STATUS_PARTIALLY_FILLED": 7,
}

func (x Order_Status) String() string {
	return proto.EnumName(Order_Status_name, int32(x))
}

func (Order_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{5, 2}
}

type Trade_Type int32

const (
	// Default value, always invalid
	Trade_TYPE_UNSPECIFIED            Trade_Type = 0
	Trade_TYPE_DEFAULT                Trade_Type = 1
	Trade_TYPE_NETWORK_CLOSE_OUT_GOOD Trade_Type = 2
	Trade_TYPE_NETWORK_CLOSE_OUT_BAD  Trade_Type = 3
)

var Trade_Type_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "TYPE_DEFAULT",
	2: "TYPE_NETWORK_CLOSE_OUT_GOOD",
	3: "TYPE_NETWORK_CLOSE_OUT_BAD",
}

var Trade_Type_value = map[string]int32{
	"TYPE_UNSPECIFIED":            0,
	"TYPE_DEFAULT":                1,
	"TYPE_NETWORK_CLOSE_OUT_GOOD": 2,
	"TYPE_NETWORK_CLOSE_OUT_BAD":  3,
}

func (x Trade_Type) String() string {
	return proto.EnumName(Trade_Type_name, int32(x))
}

func (Trade_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{9, 0}
}

type Price struct {
	Value                uint64   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Price) Reset()         { *m = Price{} }
func (m *Price) String() string { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()    {}
func (*Price) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{0}
}

func (m *Price) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Price.Unmarshal(m, b)
}
func (m *Price) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Price.Marshal(b, m, deterministic)
}
func (m *Price) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Price.Merge(m, src)
}
func (m *Price) XXX_Size() int {
	return xxx_messageInfo_Price.Size(m)
}
func (m *Price) XXX_DiscardUnknown() {
	xxx_messageInfo_Price.DiscardUnknown(m)
}

var xxx_messageInfo_Price proto.InternalMessageInfo

func (m *Price) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Timestamp struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{1}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Party struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Party) Reset()         { *m = Party{} }
func (m *Party) String() string { return proto.CompactTextString(m) }
func (*Party) ProtoMessage()    {}
func (*Party) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{2}
}

func (m *Party) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Party.Unmarshal(m, b)
}
func (m *Party) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Party.Marshal(b, m, deterministic)
}
func (m *Party) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Party.Merge(m, src)
}
func (m *Party) XXX_Size() int {
	return xxx_messageInfo_Party.Size(m)
}
func (m *Party) XXX_DiscardUnknown() {
	xxx_messageInfo_Party.DiscardUnknown(m)
}

var xxx_messageInfo_Party proto.InternalMessageInfo

func (m *Party) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RiskFactor struct {
	Market               string   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Short                float64  `protobuf:"fixed64,2,opt,name=short,proto3" json:"short,omitempty"`
	Long                 float64  `protobuf:"fixed64,3,opt,name=long,proto3" json:"long,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RiskFactor) Reset()         { *m = RiskFactor{} }
func (m *RiskFactor) String() string { return proto.CompactTextString(m) }
func (*RiskFactor) ProtoMessage()    {}
func (*RiskFactor) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{3}
}

func (m *RiskFactor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskFactor.Unmarshal(m, b)
}
func (m *RiskFactor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskFactor.Marshal(b, m, deterministic)
}
func (m *RiskFactor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskFactor.Merge(m, src)
}
func (m *RiskFactor) XXX_Size() int {
	return xxx_messageInfo_RiskFactor.Size(m)
}
func (m *RiskFactor) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskFactor.DiscardUnknown(m)
}

var xxx_messageInfo_RiskFactor proto.InternalMessageInfo

func (m *RiskFactor) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *RiskFactor) GetShort() float64 {
	if m != nil {
		return m.Short
	}
	return 0
}

func (m *RiskFactor) GetLong() float64 {
	if m != nil {
		return m.Long
	}
	return 0
}

type RiskResult struct {
	// timestamp when these risk factors were generated
	UpdatedTimestamp int64 `protobuf:"varint,1,opt,name=updatedTimestamp,proto3" json:"updatedTimestamp,omitempty"`
	// risk factors (long and short) for each marginable asset/currency (usually == settlement assets) in the market
	RiskFactors map[string]*RiskFactor `protobuf:"bytes,2,rep,name=riskFactors,proto3" json:"riskFactors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// time when risk factors are expected to change (or empty if risk factors are continually updated)
	NextUpdateTimestamp int64 `protobuf:"varint,3,opt,name=nextUpdateTimestamp,proto3" json:"nextUpdateTimestamp,omitempty"`
	// predicted risk factors at next change (what they'd be if the change occurred now)
	PredictedNextRiskFactors map[string]*RiskFactor `protobuf:"bytes,4,rep,name=predictedNextRiskFactors,proto3" json:"predictedNextRiskFactors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral     struct{}               `json:"-"`
	XXX_unrecognized         []byte                 `json:"-"`
	XXX_sizecache            int32                  `json:"-"`
}

func (m *RiskResult) Reset()         { *m = RiskResult{} }
func (m *RiskResult) String() string { return proto.CompactTextString(m) }
func (*RiskResult) ProtoMessage()    {}
func (*RiskResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{4}
}

func (m *RiskResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiskResult.Unmarshal(m, b)
}
func (m *RiskResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiskResult.Marshal(b, m, deterministic)
}
func (m *RiskResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiskResult.Merge(m, src)
}
func (m *RiskResult) XXX_Size() int {
	return xxx_messageInfo_RiskResult.Size(m)
}
func (m *RiskResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RiskResult.DiscardUnknown(m)
}

var xxx_messageInfo_RiskResult proto.InternalMessageInfo

func (m *RiskResult) GetUpdatedTimestamp() int64 {
	if m != nil {
		return m.UpdatedTimestamp
	}
	return 0
}

func (m *RiskResult) GetRiskFactors() map[string]*RiskFactor {
	if m != nil {
		return m.RiskFactors
	}
	return nil
}

func (m *RiskResult) GetNextUpdateTimestamp() int64 {
	if m != nil {
		return m.NextUpdateTimestamp
	}
	return 0
}

func (m *RiskResult) GetPredictedNextRiskFactors() map[string]*RiskFactor {
	if m != nil {
		return m.PredictedNextRiskFactors
	}
	return nil
}

type Order struct {
	Id          string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarketID    string            `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID     string            `protobuf:"bytes,3,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Side        Side              `protobuf:"varint,4,opt,name=side,proto3,enum=vega.Side" json:"side,omitempty"`
	Price       uint64            `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Size        uint64            `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Remaining   uint64            `protobuf:"varint,7,opt,name=remaining,proto3" json:"remaining,omitempty"`
	TimeInForce Order_TimeInForce `protobuf:"varint,8,opt,name=timeInForce,proto3,enum=vega.Order_TimeInForce" json:"timeInForce,omitempty"`
	Type        Order_Type        `protobuf:"varint,9,opt,name=type,proto3,enum=vega.Order_Type" json:"type,omitempty"`
	// nanoseconds since the epoch. See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`.
	CreatedAt int64 `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// If `status` is `STATUS_REJECTED`, check `reason`.
	Status    Order_Status `protobuf:"varint,11,opt,name=status,proto3,enum=vega.Order_Status" json:"status,omitempty"`
	ExpiresAt int64        `protobuf:"varint,12,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Reference string       `protobuf:"bytes,13,opt,name=reference,proto3" json:"reference,omitempty"`
	Reason    OrderError   `protobuf:"varint,14,opt,name=reason,proto3,enum=vega.OrderError" json:"reason,omitempty"`
	UpdatedAt int64        `protobuf:"varint,15,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// Versioning support for amends, orders start at version 1 and increment
	// after each successful amend
	Version uint64 `protobuf:"varint,16,opt,name=version,proto3" json:"version,omitempty"`
	// used internally, for orders submitted during auctions
	// to keep track which auction batch this order falls under (required for fees calculation)
	BatchID              uint64   `protobuf:"varint,17,opt,name=batchID,proto3" json:"batchID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{5}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *Order) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *Order) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_SIDE_UNSPECIFIED
}

func (m *Order) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Order) GetRemaining() uint64 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *Order) GetTimeInForce() Order_TimeInForce {
	if m != nil {
		return m.TimeInForce
	}
	return Order_TIF_UNSPECIFIED
}

func (m *Order) GetType() Order_Type {
	if m != nil {
		return m.Type
	}
	return Order_TYPE_UNSPECIFIED
}

func (m *Order) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Order) GetStatus() Order_Status {
	if m != nil {
		return m.Status
	}
	return Order_STATUS_INVALID
}

func (m *Order) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *Order) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *Order) GetReason() OrderError {
	if m != nil {
		return m.Reason
	}
	return OrderError_ORDER_ERROR_NONE
}

func (m *Order) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *Order) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Order) GetBatchID() uint64 {
	if m != nil {
		return m.BatchID
	}
	return 0
}

type OrderCancellationConfirmation struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancellationConfirmation) Reset()         { *m = OrderCancellationConfirmation{} }
func (m *OrderCancellationConfirmation) String() string { return proto.CompactTextString(m) }
func (*OrderCancellationConfirmation) ProtoMessage()    {}
func (*OrderCancellationConfirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{6}
}

func (m *OrderCancellationConfirmation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancellationConfirmation.Unmarshal(m, b)
}
func (m *OrderCancellationConfirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancellationConfirmation.Marshal(b, m, deterministic)
}
func (m *OrderCancellationConfirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancellationConfirmation.Merge(m, src)
}
func (m *OrderCancellationConfirmation) XXX_Size() int {
	return xxx_messageInfo_OrderCancellationConfirmation.Size(m)
}
func (m *OrderCancellationConfirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancellationConfirmation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancellationConfirmation proto.InternalMessageInfo

func (m *OrderCancellationConfirmation) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type OrderConfirmation struct {
	Order                 *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Trades                []*Trade `protobuf:"bytes,2,rep,name=trades,proto3" json:"trades,omitempty"`
	PassiveOrdersAffected []*Order `protobuf:"bytes,3,rep,name=passiveOrdersAffected,proto3" json:"passiveOrdersAffected,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *OrderConfirmation) Reset()         { *m = OrderConfirmation{} }
func (m *OrderConfirmation) String() string { return proto.CompactTextString(m) }
func (*OrderConfirmation) ProtoMessage()    {}
func (*OrderConfirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{7}
}

func (m *OrderConfirmation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderConfirmation.Unmarshal(m, b)
}
func (m *OrderConfirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderConfirmation.Marshal(b, m, deterministic)
}
func (m *OrderConfirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderConfirmation.Merge(m, src)
}
func (m *OrderConfirmation) XXX_Size() int {
	return xxx_messageInfo_OrderConfirmation.Size(m)
}
func (m *OrderConfirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderConfirmation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderConfirmation proto.InternalMessageInfo

func (m *OrderConfirmation) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *OrderConfirmation) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

func (m *OrderConfirmation) GetPassiveOrdersAffected() []*Order {
	if m != nil {
		return m.PassiveOrdersAffected
	}
	return nil
}

// Whenever a change to the book occurs during an auction, this message will be used
// to emit an event with the indicative price/volume per market
type AuctionIndicativeState struct {
	// The market this state is related to
	MarketID string `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	// The Indicative Uncrossing Price is the price at which all trades would occur if we uncrossed the auction now.
	IndicativePrice uint64 `protobuf:"varint,2,opt,name=indicativePrice,proto3" json:"indicativePrice,omitempty"`
	// The Indicative Uncrossing Volume is the volume available at the Indicative crossing price if we uncrossed the auction now.
	IndicativeVolume uint64 `protobuf:"varint,3,opt,name=indicativeVolume,proto3" json:"indicativeVolume,omitempty"`
	// The timestamp at which the auction started
	AuctionStart int64 `protobuf:"varint,4,opt,name=auctionStart,proto3" json:"auctionStart,omitempty"`
	// The timestamp at which the auction is meant to stop.
	AuctionEnd           int64    `protobuf:"varint,5,opt,name=auctionEnd,proto3" json:"auctionEnd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuctionIndicativeState) Reset()         { *m = AuctionIndicativeState{} }
func (m *AuctionIndicativeState) String() string { return proto.CompactTextString(m) }
func (*AuctionIndicativeState) ProtoMessage()    {}
func (*AuctionIndicativeState) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{8}
}

func (m *AuctionIndicativeState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuctionIndicativeState.Unmarshal(m, b)
}
func (m *AuctionIndicativeState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuctionIndicativeState.Marshal(b, m, deterministic)
}
func (m *AuctionIndicativeState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuctionIndicativeState.Merge(m, src)
}
func (m *AuctionIndicativeState) XXX_Size() int {
	return xxx_messageInfo_AuctionIndicativeState.Size(m)
}
func (m *AuctionIndicativeState) XXX_DiscardUnknown() {
	xxx_messageInfo_AuctionIndicativeState.DiscardUnknown(m)
}

var xxx_messageInfo_AuctionIndicativeState proto.InternalMessageInfo

func (m *AuctionIndicativeState) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *AuctionIndicativeState) GetIndicativePrice() uint64 {
	if m != nil {
		return m.IndicativePrice
	}
	return 0
}

func (m *AuctionIndicativeState) GetIndicativeVolume() uint64 {
	if m != nil {
		return m.IndicativeVolume
	}
	return 0
}

func (m *AuctionIndicativeState) GetAuctionStart() int64 {
	if m != nil {
		return m.AuctionStart
	}
	return 0
}

func (m *AuctionIndicativeState) GetAuctionEnd() int64 {
	if m != nil {
		return m.AuctionEnd
	}
	return 0
}

type Trade struct {
	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarketID  string `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Price     uint64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Size      uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Buyer     string `protobuf:"bytes,5,opt,name=buyer,proto3" json:"buyer,omitempty"`
	Seller    string `protobuf:"bytes,6,opt,name=seller,proto3" json:"seller,omitempty"`
	Aggressor Side   `protobuf:"varint,7,opt,name=aggressor,proto3,enum=vega.Side" json:"aggressor,omitempty"`
	BuyOrder  string `protobuf:"bytes,8,opt,name=buyOrder,proto3" json:"buyOrder,omitempty"`
	SellOrder string `protobuf:"bytes,9,opt,name=sellOrder,proto3" json:"sellOrder,omitempty"`
	// nanoseconds since the epoch. See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`.
	Timestamp            int64      `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type                 Trade_Type `protobuf:"varint,11,opt,name=type,proto3,enum=vega.Trade_Type" json:"type,omitempty"`
	BuyerFee             *Fee       `protobuf:"bytes,12,opt,name=buyerFee,proto3" json:"buyerFee,omitempty"`
	SellerFee            *Fee       `protobuf:"bytes,13,opt,name=sellerFee,proto3" json:"sellerFee,omitempty"`
	BuyerAuctionBatch    uint64     `protobuf:"varint,14,opt,name=buyerAuctionBatch,proto3" json:"buyerAuctionBatch,omitempty"`
	SellerAuctionBatch   uint64     `protobuf:"varint,15,opt,name=sellerAuctionBatch,proto3" json:"sellerAuctionBatch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{9}
}

func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (m *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(m, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Trade) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *Trade) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Trade) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Trade) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

func (m *Trade) GetSeller() string {
	if m != nil {
		return m.Seller
	}
	return ""
}

func (m *Trade) GetAggressor() Side {
	if m != nil {
		return m.Aggressor
	}
	return Side_SIDE_UNSPECIFIED
}

func (m *Trade) GetBuyOrder() string {
	if m != nil {
		return m.BuyOrder
	}
	return ""
}

func (m *Trade) GetSellOrder() string {
	if m != nil {
		return m.SellOrder
	}
	return ""
}

func (m *Trade) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Trade) GetType() Trade_Type {
	if m != nil {
		return m.Type
	}
	return Trade_TYPE_UNSPECIFIED
}

func (m *Trade) GetBuyerFee() *Fee {
	if m != nil {
		return m.BuyerFee
	}
	return nil
}

func (m *Trade) GetSellerFee() *Fee {
	if m != nil {
		return m.SellerFee
	}
	return nil
}

func (m *Trade) GetBuyerAuctionBatch() uint64 {
	if m != nil {
		return m.BuyerAuctionBatch
	}
	return 0
}

func (m *Trade) GetSellerAuctionBatch() uint64 {
	if m != nil {
		return m.SellerAuctionBatch
	}
	return 0
}

// The fees being paid by a party, resulting from a trade
type Fee struct {
	// A fee being paid to the non-aggressor party of the trade
	MakerFee uint64 `protobuf:"varint,1,opt,name=makerFee,proto3" json:"makerFee,omitempty"`
	// A fee being paid to maintaining the vega infrastructure
	InfrastructureFee uint64 `protobuf:"varint,2,opt,name=infrastructureFee,proto3" json:"infrastructureFee,omitempty"`
	// A fee being paid to the market makers
	LiquidityFee         uint64   `protobuf:"varint,3,opt,name=liquidityFee,proto3" json:"liquidityFee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fee) Reset()         { *m = Fee{} }
func (m *Fee) String() string { return proto.CompactTextString(m) }
func (*Fee) ProtoMessage()    {}
func (*Fee) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{10}
}

func (m *Fee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fee.Unmarshal(m, b)
}
func (m *Fee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fee.Marshal(b, m, deterministic)
}
func (m *Fee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fee.Merge(m, src)
}
func (m *Fee) XXX_Size() int {
	return xxx_messageInfo_Fee.Size(m)
}
func (m *Fee) XXX_DiscardUnknown() {
	xxx_messageInfo_Fee.DiscardUnknown(m)
}

var xxx_messageInfo_Fee proto.InternalMessageInfo

func (m *Fee) GetMakerFee() uint64 {
	if m != nil {
		return m.MakerFee
	}
	return 0
}

func (m *Fee) GetInfrastructureFee() uint64 {
	if m != nil {
		return m.InfrastructureFee
	}
	return 0
}

func (m *Fee) GetLiquidityFee() uint64 {
	if m != nil {
		return m.LiquidityFee
	}
	return 0
}

type TradeSet struct {
	Trades               []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeSet) Reset()         { *m = TradeSet{} }
func (m *TradeSet) String() string { return proto.CompactTextString(m) }
func (*TradeSet) ProtoMessage()    {}
func (*TradeSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{11}
}

func (m *TradeSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeSet.Unmarshal(m, b)
}
func (m *TradeSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeSet.Marshal(b, m, deterministic)
}
func (m *TradeSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeSet.Merge(m, src)
}
func (m *TradeSet) XXX_Size() int {
	return xxx_messageInfo_TradeSet.Size(m)
}
func (m *TradeSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeSet.DiscardUnknown(m)
}

var xxx_messageInfo_TradeSet proto.InternalMessageInfo

func (m *TradeSet) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type Candle struct {
	// nanoseconds since the epoch. See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// ISO 8601 datetime
	Datetime             string   `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	High                 uint64   `protobuf:"varint,3,opt,name=high,proto3" json:"high,omitempty"`
	Low                  uint64   `protobuf:"varint,4,opt,name=low,proto3" json:"low,omitempty"`
	Open                 uint64   `protobuf:"varint,5,opt,name=open,proto3" json:"open,omitempty"`
	Close                uint64   `protobuf:"varint,6,opt,name=close,proto3" json:"close,omitempty"`
	Volume               uint64   `protobuf:"varint,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Interval             Interval `protobuf:"varint,8,opt,name=interval,proto3,enum=vega.Interval" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{12}
}

func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (m *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(m, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Candle) GetDatetime() string {
	if m != nil {
		return m.Datetime
	}
	return ""
}

func (m *Candle) GetHigh() uint64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Candle) GetLow() uint64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Candle) GetOpen() uint64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Candle) GetClose() uint64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Candle) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candle) GetInterval() Interval {
	if m != nil {
		return m.Interval
	}
	return Interval_INTERVAL_UNSPECIFIED
}

type PriceLevel struct {
	Price                uint64   `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	NumberOfOrders       uint64   `protobuf:"varint,2,opt,name=numberOfOrders,proto3" json:"numberOfOrders,omitempty"`
	Volume               uint64   `protobuf:"varint,3,opt,name=volume,proto3" json:"volume,omitempty"`
	CumulativeVolume     uint64   `protobuf:"varint,4,opt,name=cumulativeVolume,proto3" json:"cumulativeVolume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceLevel) Reset()         { *m = PriceLevel{} }
func (m *PriceLevel) String() string { return proto.CompactTextString(m) }
func (*PriceLevel) ProtoMessage()    {}
func (*PriceLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{13}
}

func (m *PriceLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceLevel.Unmarshal(m, b)
}
func (m *PriceLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceLevel.Marshal(b, m, deterministic)
}
func (m *PriceLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceLevel.Merge(m, src)
}
func (m *PriceLevel) XXX_Size() int {
	return xxx_messageInfo_PriceLevel.Size(m)
}
func (m *PriceLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceLevel.DiscardUnknown(m)
}

var xxx_messageInfo_PriceLevel proto.InternalMessageInfo

func (m *PriceLevel) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PriceLevel) GetNumberOfOrders() uint64 {
	if m != nil {
		return m.NumberOfOrders
	}
	return 0
}

func (m *PriceLevel) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *PriceLevel) GetCumulativeVolume() uint64 {
	if m != nil {
		return m.CumulativeVolume
	}
	return 0
}

type MarketDepth struct {
	MarketID             string        `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Buy                  []*PriceLevel `protobuf:"bytes,2,rep,name=buy,proto3" json:"buy,omitempty"`
	Sell                 []*PriceLevel `protobuf:"bytes,3,rep,name=sell,proto3" json:"sell,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MarketDepth) Reset()         { *m = MarketDepth{} }
func (m *MarketDepth) String() string { return proto.CompactTextString(m) }
func (*MarketDepth) ProtoMessage()    {}
func (*MarketDepth) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{14}
}

func (m *MarketDepth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepth.Unmarshal(m, b)
}
func (m *MarketDepth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepth.Marshal(b, m, deterministic)
}
func (m *MarketDepth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepth.Merge(m, src)
}
func (m *MarketDepth) XXX_Size() int {
	return xxx_messageInfo_MarketDepth.Size(m)
}
func (m *MarketDepth) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepth.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepth proto.InternalMessageInfo

func (m *MarketDepth) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *MarketDepth) GetBuy() []*PriceLevel {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *MarketDepth) GetSell() []*PriceLevel {
	if m != nil {
		return m.Sell
	}
	return nil
}

type Position struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	OpenVolume           int64    `protobuf:"varint,3,opt,name=openVolume,proto3" json:"openVolume,omitempty"`
	RealisedPNL          int64    `protobuf:"varint,4,opt,name=realisedPNL,proto3" json:"realisedPNL,omitempty"`
	UnrealisedPNL        int64    `protobuf:"varint,5,opt,name=unrealisedPNL,proto3" json:"unrealisedPNL,omitempty"`
	AverageEntryPrice    uint64   `protobuf:"varint,6,opt,name=averageEntryPrice,proto3" json:"averageEntryPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{15}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *Position) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *Position) GetOpenVolume() int64 {
	if m != nil {
		return m.OpenVolume
	}
	return 0
}

func (m *Position) GetRealisedPNL() int64 {
	if m != nil {
		return m.RealisedPNL
	}
	return 0
}

func (m *Position) GetUnrealisedPNL() int64 {
	if m != nil {
		return m.UnrealisedPNL
	}
	return 0
}

func (m *Position) GetAverageEntryPrice() uint64 {
	if m != nil {
		return m.AverageEntryPrice
	}
	return 0
}

type PositionTrade struct {
	Volume               int64    `protobuf:"varint,1,opt,name=volume,proto3" json:"volume,omitempty"`
	Price                uint64   `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionTrade) Reset()         { *m = PositionTrade{} }
func (m *PositionTrade) String() string { return proto.CompactTextString(m) }
func (*PositionTrade) ProtoMessage()    {}
func (*PositionTrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{16}
}

func (m *PositionTrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionTrade.Unmarshal(m, b)
}
func (m *PositionTrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionTrade.Marshal(b, m, deterministic)
}
func (m *PositionTrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionTrade.Merge(m, src)
}
func (m *PositionTrade) XXX_Size() int {
	return xxx_messageInfo_PositionTrade.Size(m)
}
func (m *PositionTrade) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionTrade.DiscardUnknown(m)
}

var xxx_messageInfo_PositionTrade proto.InternalMessageInfo

func (m *PositionTrade) GetVolume() int64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *PositionTrade) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type Statistics struct {
	BlockHeight   uint64 `protobuf:"varint,1,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	BacklogLength uint64 `protobuf:"varint,2,opt,name=backlogLength,proto3" json:"backlogLength,omitempty"`
	TotalPeers    uint64 `protobuf:"varint,3,opt,name=totalPeers,proto3" json:"totalPeers,omitempty"`
	// ISO 8601 datetime, nanosecond precision
	GenesisTime string `protobuf:"bytes,4,opt,name=genesisTime,proto3" json:"genesisTime,omitempty"`
	// ISO 8601 datetime, nanosecond precision
	CurrentTime string `protobuf:"bytes,5,opt,name=currentTime,proto3" json:"currentTime,omitempty"`
	// ISO 8601 datetime, nanosecond precision
	VegaTime                 string      `protobuf:"bytes,6,opt,name=vegaTime,proto3" json:"vegaTime,omitempty"`
	Status                   ChainStatus `protobuf:"varint,7,opt,name=status,proto3,enum=vega.ChainStatus" json:"status,omitempty"`
	TxPerBlock               uint64      `protobuf:"varint,8,opt,name=txPerBlock,proto3" json:"txPerBlock,omitempty"`
	AverageTxBytes           uint64      `protobuf:"varint,9,opt,name=averageTxBytes,proto3" json:"averageTxBytes,omitempty"`
	AverageOrdersPerBlock    uint64      `protobuf:"varint,10,opt,name=averageOrdersPerBlock,proto3" json:"averageOrdersPerBlock,omitempty"`
	TradesPerSecond          uint64      `protobuf:"varint,11,opt,name=tradesPerSecond,proto3" json:"tradesPerSecond,omitempty"`
	OrdersPerSecond          uint64      `protobuf:"varint,12,opt,name=ordersPerSecond,proto3" json:"ordersPerSecond,omitempty"`
	TotalMarkets             uint64      `protobuf:"varint,13,opt,name=totalMarkets,proto3" json:"totalMarkets,omitempty"`
	TotalAmendOrder          uint64      `protobuf:"varint,16,opt,name=totalAmendOrder,proto3" json:"totalAmendOrder,omitempty"`
	TotalCancelOrder         uint64      `protobuf:"varint,17,opt,name=totalCancelOrder,proto3" json:"totalCancelOrder,omitempty"`
	TotalCreateOrder         uint64      `protobuf:"varint,18,opt,name=totalCreateOrder,proto3" json:"totalCreateOrder,omitempty"`
	TotalOrders              uint64      `protobuf:"varint,19,opt,name=totalOrders,proto3" json:"totalOrders,omitempty"`
	TotalTrades              uint64      `protobuf:"varint,20,opt,name=totalTrades,proto3" json:"totalTrades,omitempty"`
	OrderSubscriptions       uint32      `protobuf:"varint,21,opt,name=orderSubscriptions,proto3" json:"orderSubscriptions,omitempty"`
	TradeSubscriptions       uint32      `protobuf:"varint,22,opt,name=tradeSubscriptions,proto3" json:"tradeSubscriptions,omitempty"`
	CandleSubscriptions      uint32      `protobuf:"varint,23,opt,name=candleSubscriptions,proto3" json:"candleSubscriptions,omitempty"`
	MarketDepthSubscriptions uint32      `protobuf:"varint,24,opt,name=marketDepthSubscriptions,proto3" json:"marketDepthSubscriptions,omitempty"`
	PositionsSubscriptions   uint32      `protobuf:"varint,25,opt,name=positionsSubscriptions,proto3" json:"positionsSubscriptions,omitempty"`
	AccountSubscriptions     uint32      `protobuf:"varint,26,opt,name=accountSubscriptions,proto3" json:"accountSubscriptions,omitempty"`
	MarketDataSubscriptions  uint32      `protobuf:"varint,27,opt,name=marketDataSubscriptions,proto3" json:"marketDataSubscriptions,omitempty"`
	AppVersionHash           string      `protobuf:"bytes,28,opt,name=appVersionHash,proto3" json:"appVersionHash,omitempty"`
	AppVersion               string      `protobuf:"bytes,29,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	ChainVersion             string      `protobuf:"bytes,30,opt,name=chainVersion,proto3" json:"chainVersion,omitempty"`
	// nanoseconds
	BlockDuration uint64 `protobuf:"varint,31,opt,name=blockDuration,proto3" json:"blockDuration,omitempty"`
	// ISO 8601 datetime, nanosecond precision
	Uptime string `protobuf:"bytes,32,opt,name=uptime,proto3" json:"uptime,omitempty"`
	// Unique ID of the blockchain
	ChainID              string   `protobuf:"bytes,33,opt,name=chainID,proto3" json:"chainID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Statistics) Reset()         { *m = Statistics{} }
func (m *Statistics) String() string { return proto.CompactTextString(m) }
func (*Statistics) ProtoMessage()    {}
func (*Statistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{17}
}

func (m *Statistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Statistics.Unmarshal(m, b)
}
func (m *Statistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Statistics.Marshal(b, m, deterministic)
}
func (m *Statistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Statistics.Merge(m, src)
}
func (m *Statistics) XXX_Size() int {
	return xxx_messageInfo_Statistics.Size(m)
}
func (m *Statistics) XXX_DiscardUnknown() {
	xxx_messageInfo_Statistics.DiscardUnknown(m)
}

var xxx_messageInfo_Statistics proto.InternalMessageInfo

func (m *Statistics) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *Statistics) GetBacklogLength() uint64 {
	if m != nil {
		return m.BacklogLength
	}
	return 0
}

func (m *Statistics) GetTotalPeers() uint64 {
	if m != nil {
		return m.TotalPeers
	}
	return 0
}

func (m *Statistics) GetGenesisTime() string {
	if m != nil {
		return m.GenesisTime
	}
	return ""
}

func (m *Statistics) GetCurrentTime() string {
	if m != nil {
		return m.CurrentTime
	}
	return ""
}

func (m *Statistics) GetVegaTime() string {
	if m != nil {
		return m.VegaTime
	}
	return ""
}

func (m *Statistics) GetStatus() ChainStatus {
	if m != nil {
		return m.Status
	}
	return ChainStatus_CHAIN_STATUS_UNSPECIFIED
}

func (m *Statistics) GetTxPerBlock() uint64 {
	if m != nil {
		return m.TxPerBlock
	}
	return 0
}

func (m *Statistics) GetAverageTxBytes() uint64 {
	if m != nil {
		return m.AverageTxBytes
	}
	return 0
}

func (m *Statistics) GetAverageOrdersPerBlock() uint64 {
	if m != nil {
		return m.AverageOrdersPerBlock
	}
	return 0
}

func (m *Statistics) GetTradesPerSecond() uint64 {
	if m != nil {
		return m.TradesPerSecond
	}
	return 0
}

func (m *Statistics) GetOrdersPerSecond() uint64 {
	if m != nil {
		return m.OrdersPerSecond
	}
	return 0
}

func (m *Statistics) GetTotalMarkets() uint64 {
	if m != nil {
		return m.TotalMarkets
	}
	return 0
}

func (m *Statistics) GetTotalAmendOrder() uint64 {
	if m != nil {
		return m.TotalAmendOrder
	}
	return 0
}

func (m *Statistics) GetTotalCancelOrder() uint64 {
	if m != nil {
		return m.TotalCancelOrder
	}
	return 0
}

func (m *Statistics) GetTotalCreateOrder() uint64 {
	if m != nil {
		return m.TotalCreateOrder
	}
	return 0
}

func (m *Statistics) GetTotalOrders() uint64 {
	if m != nil {
		return m.TotalOrders
	}
	return 0
}

func (m *Statistics) GetTotalTrades() uint64 {
	if m != nil {
		return m.TotalTrades
	}
	return 0
}

func (m *Statistics) GetOrderSubscriptions() uint32 {
	if m != nil {
		return m.OrderSubscriptions
	}
	return 0
}

func (m *Statistics) GetTradeSubscriptions() uint32 {
	if m != nil {
		return m.TradeSubscriptions
	}
	return 0
}

func (m *Statistics) GetCandleSubscriptions() uint32 {
	if m != nil {
		return m.CandleSubscriptions
	}
	return 0
}

func (m *Statistics) GetMarketDepthSubscriptions() uint32 {
	if m != nil {
		return m.MarketDepthSubscriptions
	}
	return 0
}

func (m *Statistics) GetPositionsSubscriptions() uint32 {
	if m != nil {
		return m.PositionsSubscriptions
	}
	return 0
}

func (m *Statistics) GetAccountSubscriptions() uint32 {
	if m != nil {
		return m.AccountSubscriptions
	}
	return 0
}

func (m *Statistics) GetMarketDataSubscriptions() uint32 {
	if m != nil {
		return m.MarketDataSubscriptions
	}
	return 0
}

func (m *Statistics) GetAppVersionHash() string {
	if m != nil {
		return m.AppVersionHash
	}
	return ""
}

func (m *Statistics) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *Statistics) GetChainVersion() string {
	if m != nil {
		return m.ChainVersion
	}
	return ""
}

func (m *Statistics) GetBlockDuration() uint64 {
	if m != nil {
		return m.BlockDuration
	}
	return 0
}

func (m *Statistics) GetUptime() string {
	if m != nil {
		return m.Uptime
	}
	return ""
}

func (m *Statistics) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

type NotifyTraderAccount struct {
	TraderID             string   `protobuf:"bytes,1,opt,name=traderID,proto3" json:"traderID,omitempty"`
	Amount               uint64   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyTraderAccount) Reset()         { *m = NotifyTraderAccount{} }
func (m *NotifyTraderAccount) String() string { return proto.CompactTextString(m) }
func (*NotifyTraderAccount) ProtoMessage()    {}
func (*NotifyTraderAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{18}
}

func (m *NotifyTraderAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyTraderAccount.Unmarshal(m, b)
}
func (m *NotifyTraderAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyTraderAccount.Marshal(b, m, deterministic)
}
func (m *NotifyTraderAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyTraderAccount.Merge(m, src)
}
func (m *NotifyTraderAccount) XXX_Size() int {
	return xxx_messageInfo_NotifyTraderAccount.Size(m)
}
func (m *NotifyTraderAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyTraderAccount.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyTraderAccount proto.InternalMessageInfo

func (m *NotifyTraderAccount) GetTraderID() string {
	if m != nil {
		return m.TraderID
	}
	return ""
}

func (m *NotifyTraderAccount) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Withdraw struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Amount               uint64   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Asset                string   `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Withdraw) Reset()         { *m = Withdraw{} }
func (m *Withdraw) String() string { return proto.CompactTextString(m) }
func (*Withdraw) ProtoMessage()    {}
func (*Withdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{19}
}

func (m *Withdraw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Withdraw.Unmarshal(m, b)
}
func (m *Withdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Withdraw.Marshal(b, m, deterministic)
}
func (m *Withdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Withdraw.Merge(m, src)
}
func (m *Withdraw) XXX_Size() int {
	return xxx_messageInfo_Withdraw.Size(m)
}
func (m *Withdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_Withdraw.DiscardUnknown(m)
}

var xxx_messageInfo_Withdraw proto.InternalMessageInfo

func (m *Withdraw) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *Withdraw) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Withdraw) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type OrderAmendment struct {
	// required to find the order, not being updated
	OrderID  string `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	PartyID  string `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID string `protobuf:"bytes,3,opt,name=marketID,proto3" json:"marketID,omitempty"`
	// these can be amended
	Price                *Price            `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	SizeDelta            int64             `protobuf:"varint,5,opt,name=sizeDelta,proto3" json:"sizeDelta,omitempty"`
	ExpiresAt            *Timestamp        `protobuf:"bytes,6,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	TimeInForce          Order_TimeInForce `protobuf:"varint,7,opt,name=timeInForce,proto3,enum=vega.Order_TimeInForce" json:"timeInForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OrderAmendment) Reset()         { *m = OrderAmendment{} }
func (m *OrderAmendment) String() string { return proto.CompactTextString(m) }
func (*OrderAmendment) ProtoMessage()    {}
func (*OrderAmendment) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{20}
}

func (m *OrderAmendment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderAmendment.Unmarshal(m, b)
}
func (m *OrderAmendment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderAmendment.Marshal(b, m, deterministic)
}
func (m *OrderAmendment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderAmendment.Merge(m, src)
}
func (m *OrderAmendment) XXX_Size() int {
	return xxx_messageInfo_OrderAmendment.Size(m)
}
func (m *OrderAmendment) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderAmendment.DiscardUnknown(m)
}

var xxx_messageInfo_OrderAmendment proto.InternalMessageInfo

func (m *OrderAmendment) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *OrderAmendment) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *OrderAmendment) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrderAmendment) GetPrice() *Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *OrderAmendment) GetSizeDelta() int64 {
	if m != nil {
		return m.SizeDelta
	}
	return 0
}

func (m *OrderAmendment) GetExpiresAt() *Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *OrderAmendment) GetTimeInForce() Order_TimeInForce {
	if m != nil {
		return m.TimeInForce
	}
	return Order_TIF_UNSPECIFIED
}

type OrderSubmission struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarketID             string            `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string            `protobuf:"bytes,3,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Price                uint64            `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64            `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Side                 Side              `protobuf:"varint,6,opt,name=side,proto3,enum=vega.Side" json:"side,omitempty"`
	TimeInForce          Order_TimeInForce `protobuf:"varint,7,opt,name=timeInForce,proto3,enum=vega.Order_TimeInForce" json:"timeInForce,omitempty"`
	ExpiresAt            int64             `protobuf:"varint,8,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Type                 Order_Type        `protobuf:"varint,9,opt,name=type,proto3,enum=vega.Order_Type" json:"type,omitempty"`
	Reference            string            `protobuf:"bytes,10,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OrderSubmission) Reset()         { *m = OrderSubmission{} }
func (m *OrderSubmission) String() string { return proto.CompactTextString(m) }
func (*OrderSubmission) ProtoMessage()    {}
func (*OrderSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{21}
}

func (m *OrderSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderSubmission.Unmarshal(m, b)
}
func (m *OrderSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderSubmission.Marshal(b, m, deterministic)
}
func (m *OrderSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderSubmission.Merge(m, src)
}
func (m *OrderSubmission) XXX_Size() int {
	return xxx_messageInfo_OrderSubmission.Size(m)
}
func (m *OrderSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_OrderSubmission proto.InternalMessageInfo

func (m *OrderSubmission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderSubmission) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrderSubmission) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *OrderSubmission) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderSubmission) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *OrderSubmission) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_SIDE_UNSPECIFIED
}

func (m *OrderSubmission) GetTimeInForce() Order_TimeInForce {
	if m != nil {
		return m.TimeInForce
	}
	return Order_TIF_UNSPECIFIED
}

func (m *OrderSubmission) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *OrderSubmission) GetType() Order_Type {
	if m != nil {
		return m.Type
	}
	return Order_TYPE_UNSPECIFIED
}

func (m *OrderSubmission) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type OrderCancellation struct {
	OrderID              string   `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	MarketID             string   `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,3,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancellation) Reset()         { *m = OrderCancellation{} }
func (m *OrderCancellation) String() string { return proto.CompactTextString(m) }
func (*OrderCancellation) ProtoMessage()    {}
func (*OrderCancellation) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{22}
}

func (m *OrderCancellation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancellation.Unmarshal(m, b)
}
func (m *OrderCancellation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancellation.Marshal(b, m, deterministic)
}
func (m *OrderCancellation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancellation.Merge(m, src)
}
func (m *OrderCancellation) XXX_Size() int {
	return xxx_messageInfo_OrderCancellation.Size(m)
}
func (m *OrderCancellation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancellation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancellation proto.InternalMessageInfo

func (m *OrderCancellation) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *OrderCancellation) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrderCancellation) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type NodeRegistration struct {
	PubKey               []byte   `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	ChainPubKey          []byte   `protobuf:"bytes,2,opt,name=chainPubKey,proto3" json:"chainPubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeRegistration) Reset()         { *m = NodeRegistration{} }
func (m *NodeRegistration) String() string { return proto.CompactTextString(m) }
func (*NodeRegistration) ProtoMessage()    {}
func (*NodeRegistration) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{23}
}

func (m *NodeRegistration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeRegistration.Unmarshal(m, b)
}
func (m *NodeRegistration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeRegistration.Marshal(b, m, deterministic)
}
func (m *NodeRegistration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeRegistration.Merge(m, src)
}
func (m *NodeRegistration) XXX_Size() int {
	return xxx_messageInfo_NodeRegistration.Size(m)
}
func (m *NodeRegistration) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeRegistration.DiscardUnknown(m)
}

var xxx_messageInfo_NodeRegistration proto.InternalMessageInfo

func (m *NodeRegistration) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *NodeRegistration) GetChainPubKey() []byte {
	if m != nil {
		return m.ChainPubKey
	}
	return nil
}

type NodeVote struct {
	PubKey               []byte   `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Reference            string   `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeVote) Reset()         { *m = NodeVote{} }
func (m *NodeVote) String() string { return proto.CompactTextString(m) }
func (*NodeVote) ProtoMessage()    {}
func (*NodeVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{24}
}

func (m *NodeVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeVote.Unmarshal(m, b)
}
func (m *NodeVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeVote.Marshal(b, m, deterministic)
}
func (m *NodeVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeVote.Merge(m, src)
}
func (m *NodeVote) XXX_Size() int {
	return xxx_messageInfo_NodeVote.Size(m)
}
func (m *NodeVote) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeVote.DiscardUnknown(m)
}

var xxx_messageInfo_NodeVote proto.InternalMessageInfo

func (m *NodeVote) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *NodeVote) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Account struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner                string      `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Balance              uint64      `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	Asset                string      `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	MarketID             string      `protobuf:"bytes,5,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Type                 AccountType `protobuf:"varint,6,opt,name=type,proto3,enum=vega.AccountType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{25}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Account) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Account) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *Account) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *Account) GetType() AccountType {
	if m != nil {
		return m.Type
	}
	return AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

type FinancialAmount struct {
	Amount               int64    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Asset                string   `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinancialAmount) Reset()         { *m = FinancialAmount{} }
func (m *FinancialAmount) String() string { return proto.CompactTextString(m) }
func (*FinancialAmount) ProtoMessage()    {}
func (*FinancialAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{26}
}

func (m *FinancialAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinancialAmount.Unmarshal(m, b)
}
func (m *FinancialAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinancialAmount.Marshal(b, m, deterministic)
}
func (m *FinancialAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinancialAmount.Merge(m, src)
}
func (m *FinancialAmount) XXX_Size() int {
	return xxx_messageInfo_FinancialAmount.Size(m)
}
func (m *FinancialAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_FinancialAmount.DiscardUnknown(m)
}

var xxx_messageInfo_FinancialAmount proto.InternalMessageInfo

func (m *FinancialAmount) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *FinancialAmount) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type Transfer struct {
	Owner                string           `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Amount               *FinancialAmount `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Type                 TransferType     `protobuf:"varint,3,opt,name=type,proto3,enum=vega.TransferType" json:"type,omitempty"`
	MinAmount            int64            `protobuf:"varint,4,opt,name=minAmount,proto3" json:"minAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Transfer) Reset()         { *m = Transfer{} }
func (m *Transfer) String() string { return proto.CompactTextString(m) }
func (*Transfer) ProtoMessage()    {}
func (*Transfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{27}
}

func (m *Transfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transfer.Unmarshal(m, b)
}
func (m *Transfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transfer.Marshal(b, m, deterministic)
}
func (m *Transfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transfer.Merge(m, src)
}
func (m *Transfer) XXX_Size() int {
	return xxx_messageInfo_Transfer.Size(m)
}
func (m *Transfer) XXX_DiscardUnknown() {
	xxx_messageInfo_Transfer.DiscardUnknown(m)
}

var xxx_messageInfo_Transfer proto.InternalMessageInfo

func (m *Transfer) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Transfer) GetAmount() *FinancialAmount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *Transfer) GetType() TransferType {
	if m != nil {
		return m.Type
	}
	return TransferType_TRANSFER_TYPE_UNSPECIFIED
}

func (m *Transfer) GetMinAmount() int64 {
	if m != nil {
		return m.MinAmount
	}
	return 0
}

type TransferRequest struct {
	FromAccount          []*Account `protobuf:"bytes,1,rep,name=fromAccount,proto3" json:"fromAccount,omitempty"`
	ToAccount            []*Account `protobuf:"bytes,2,rep,name=toAccount,proto3" json:"toAccount,omitempty"`
	Amount               uint64     `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	MinAmount            uint64     `protobuf:"varint,4,opt,name=minAmount,proto3" json:"minAmount,omitempty"`
	Asset                string     `protobuf:"bytes,5,opt,name=asset,proto3" json:"asset,omitempty"`
	Reference            string     `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TransferRequest) Reset()         { *m = TransferRequest{} }
func (m *TransferRequest) String() string { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()    {}
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{28}
}

func (m *TransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferRequest.Unmarshal(m, b)
}
func (m *TransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferRequest.Marshal(b, m, deterministic)
}
func (m *TransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferRequest.Merge(m, src)
}
func (m *TransferRequest) XXX_Size() int {
	return xxx_messageInfo_TransferRequest.Size(m)
}
func (m *TransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferRequest proto.InternalMessageInfo

func (m *TransferRequest) GetFromAccount() []*Account {
	if m != nil {
		return m.FromAccount
	}
	return nil
}

func (m *TransferRequest) GetToAccount() []*Account {
	if m != nil {
		return m.ToAccount
	}
	return nil
}

func (m *TransferRequest) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransferRequest) GetMinAmount() uint64 {
	if m != nil {
		return m.MinAmount
	}
	return 0
}

func (m *TransferRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *TransferRequest) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type LedgerEntry struct {
	FromAccount          string   `protobuf:"bytes,1,opt,name=fromAccount,proto3" json:"fromAccount,omitempty"`
	ToAccount            string   `protobuf:"bytes,2,opt,name=toAccount,proto3" json:"toAccount,omitempty"`
	Amount               uint64   `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Reference            string   `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`
	Type                 string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LedgerEntry) Reset()         { *m = LedgerEntry{} }
func (m *LedgerEntry) String() string { return proto.CompactTextString(m) }
func (*LedgerEntry) ProtoMessage()    {}
func (*LedgerEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{29}
}

func (m *LedgerEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LedgerEntry.Unmarshal(m, b)
}
func (m *LedgerEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LedgerEntry.Marshal(b, m, deterministic)
}
func (m *LedgerEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LedgerEntry.Merge(m, src)
}
func (m *LedgerEntry) XXX_Size() int {
	return xxx_messageInfo_LedgerEntry.Size(m)
}
func (m *LedgerEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LedgerEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LedgerEntry proto.InternalMessageInfo

func (m *LedgerEntry) GetFromAccount() string {
	if m != nil {
		return m.FromAccount
	}
	return ""
}

func (m *LedgerEntry) GetToAccount() string {
	if m != nil {
		return m.ToAccount
	}
	return ""
}

func (m *LedgerEntry) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *LedgerEntry) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *LedgerEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LedgerEntry) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TransferBalance struct {
	Account              *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Balance              uint64   `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferBalance) Reset()         { *m = TransferBalance{} }
func (m *TransferBalance) String() string { return proto.CompactTextString(m) }
func (*TransferBalance) ProtoMessage()    {}
func (*TransferBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{30}
}

func (m *TransferBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferBalance.Unmarshal(m, b)
}
func (m *TransferBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferBalance.Marshal(b, m, deterministic)
}
func (m *TransferBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferBalance.Merge(m, src)
}
func (m *TransferBalance) XXX_Size() int {
	return xxx_messageInfo_TransferBalance.Size(m)
}
func (m *TransferBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferBalance.DiscardUnknown(m)
}

var xxx_messageInfo_TransferBalance proto.InternalMessageInfo

func (m *TransferBalance) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *TransferBalance) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type TransferResponse struct {
	Transfers            []*LedgerEntry     `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
	Balances             []*TransferBalance `protobuf:"bytes,2,rep,name=balances,proto3" json:"balances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TransferResponse) Reset()         { *m = TransferResponse{} }
func (m *TransferResponse) String() string { return proto.CompactTextString(m) }
func (*TransferResponse) ProtoMessage()    {}
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{31}
}

func (m *TransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferResponse.Unmarshal(m, b)
}
func (m *TransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferResponse.Marshal(b, m, deterministic)
}
func (m *TransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferResponse.Merge(m, src)
}
func (m *TransferResponse) XXX_Size() int {
	return xxx_messageInfo_TransferResponse.Size(m)
}
func (m *TransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransferResponse proto.InternalMessageInfo

func (m *TransferResponse) GetTransfers() []*LedgerEntry {
	if m != nil {
		return m.Transfers
	}
	return nil
}

func (m *TransferResponse) GetBalances() []*TransferBalance {
	if m != nil {
		return m.Balances
	}
	return nil
}

type MarginLevels struct {
	MaintenanceMargin      uint64   `protobuf:"varint,1,opt,name=maintenanceMargin,proto3" json:"maintenanceMargin,omitempty"`
	SearchLevel            uint64   `protobuf:"varint,2,opt,name=searchLevel,proto3" json:"searchLevel,omitempty"`
	InitialMargin          uint64   `protobuf:"varint,3,opt,name=initialMargin,proto3" json:"initialMargin,omitempty"`
	CollateralReleaseLevel uint64   `protobuf:"varint,4,opt,name=collateralReleaseLevel,proto3" json:"collateralReleaseLevel,omitempty"`
	PartyID                string   `protobuf:"bytes,5,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID               string   `protobuf:"bytes,6,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Asset                  string   `protobuf:"bytes,7,opt,name=asset,proto3" json:"asset,omitempty"`
	Timestamp              int64    `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MarginLevels) Reset()         { *m = MarginLevels{} }
func (m *MarginLevels) String() string { return proto.CompactTextString(m) }
func (*MarginLevels) ProtoMessage()    {}
func (*MarginLevels) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{32}
}

func (m *MarginLevels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarginLevels.Unmarshal(m, b)
}
func (m *MarginLevels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarginLevels.Marshal(b, m, deterministic)
}
func (m *MarginLevels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarginLevels.Merge(m, src)
}
func (m *MarginLevels) XXX_Size() int {
	return xxx_messageInfo_MarginLevels.Size(m)
}
func (m *MarginLevels) XXX_DiscardUnknown() {
	xxx_messageInfo_MarginLevels.DiscardUnknown(m)
}

var xxx_messageInfo_MarginLevels proto.InternalMessageInfo

func (m *MarginLevels) GetMaintenanceMargin() uint64 {
	if m != nil {
		return m.MaintenanceMargin
	}
	return 0
}

func (m *MarginLevels) GetSearchLevel() uint64 {
	if m != nil {
		return m.SearchLevel
	}
	return 0
}

func (m *MarginLevels) GetInitialMargin() uint64 {
	if m != nil {
		return m.InitialMargin
	}
	return 0
}

func (m *MarginLevels) GetCollateralReleaseLevel() uint64 {
	if m != nil {
		return m.CollateralReleaseLevel
	}
	return 0
}

func (m *MarginLevels) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *MarginLevels) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *MarginLevels) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *MarginLevels) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type MarketData struct {
	// the mark price (actually an unsgined int)
	MarkPrice uint64 `protobuf:"varint,1,opt,name=markPrice,proto3" json:"markPrice,omitempty"`
	// the highest price level on an order book for buy orders.
	BestBidPrice uint64 `protobuf:"varint,2,opt,name=bestBidPrice,proto3" json:"bestBidPrice,omitempty"`
	// the aggregated volume being bid at the best bid price.
	BestBidVolume uint64 `protobuf:"varint,3,opt,name=bestBidVolume,proto3" json:"bestBidVolume,omitempty"`
	// the lowest price level on an order book for offer orders.
	BestOfferPrice uint64 `protobuf:"varint,4,opt,name=bestOfferPrice,proto3" json:"bestOfferPrice,omitempty"`
	// the aggregated volume being offered at the best offer price.
	BestOfferVolume uint64 `protobuf:"varint,5,opt,name=bestOfferVolume,proto3" json:"bestOfferVolume,omitempty"`
	// the arithmetic average of the best bid price and best offer price.
	MidPrice uint64 `protobuf:"varint,6,opt,name=midPrice,proto3" json:"midPrice,omitempty"`
	// market id of the associated mark price
	Market string `protobuf:"bytes,7,opt,name=market,proto3" json:"market,omitempty"`
	// time at which this mark price was relevant
	Timestamp int64 `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// the sum of the size of all positions greater than 0.
	OpenInterest uint64 `protobuf:"varint,9,opt,name=openInterest,proto3" json:"openInterest,omitempty"`
	// time in seconds until the end of the auction (0 if currently not in auction period)
	AuctionEnd int64 `protobuf:"varint,10,opt,name=auctionEnd,proto3" json:"auctionEnd,omitempty"`
	// time until next auction (used in FBA's) - currently always 0
	AuctionStart         int64    `protobuf:"varint,11,opt,name=auctionStart,proto3" json:"auctionStart,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketData) Reset()         { *m = MarketData{} }
func (m *MarketData) String() string { return proto.CompactTextString(m) }
func (*MarketData) ProtoMessage()    {}
func (*MarketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{33}
}

func (m *MarketData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketData.Unmarshal(m, b)
}
func (m *MarketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketData.Marshal(b, m, deterministic)
}
func (m *MarketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketData.Merge(m, src)
}
func (m *MarketData) XXX_Size() int {
	return xxx_messageInfo_MarketData.Size(m)
}
func (m *MarketData) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketData.DiscardUnknown(m)
}

var xxx_messageInfo_MarketData proto.InternalMessageInfo

func (m *MarketData) GetMarkPrice() uint64 {
	if m != nil {
		return m.MarkPrice
	}
	return 0
}

func (m *MarketData) GetBestBidPrice() uint64 {
	if m != nil {
		return m.BestBidPrice
	}
	return 0
}

func (m *MarketData) GetBestBidVolume() uint64 {
	if m != nil {
		return m.BestBidVolume
	}
	return 0
}

func (m *MarketData) GetBestOfferPrice() uint64 {
	if m != nil {
		return m.BestOfferPrice
	}
	return 0
}

func (m *MarketData) GetBestOfferVolume() uint64 {
	if m != nil {
		return m.BestOfferVolume
	}
	return 0
}

func (m *MarketData) GetMidPrice() uint64 {
	if m != nil {
		return m.MidPrice
	}
	return 0
}

func (m *MarketData) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *MarketData) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MarketData) GetOpenInterest() uint64 {
	if m != nil {
		return m.OpenInterest
	}
	return 0
}

func (m *MarketData) GetAuctionEnd() int64 {
	if m != nil {
		return m.AuctionEnd
	}
	return 0
}

func (m *MarketData) GetAuctionStart() int64 {
	if m != nil {
		return m.AuctionStart
	}
	return 0
}

type ErrorDetail struct {
	// a Vega API domain specific unique error code, useful for client side mappings. e.g. 10004
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// a message that describes the error in more detail, should describe the problem encountered.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// any inner error information that could add more context, or be helpful for error reporting.
	Inner                string   `protobuf:"bytes,3,opt,name=inner,proto3" json:"inner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorDetail) Reset()         { *m = ErrorDetail{} }
func (m *ErrorDetail) String() string { return proto.CompactTextString(m) }
func (*ErrorDetail) ProtoMessage()    {}
func (*ErrorDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{34}
}

func (m *ErrorDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorDetail.Unmarshal(m, b)
}
func (m *ErrorDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorDetail.Marshal(b, m, deterministic)
}
func (m *ErrorDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorDetail.Merge(m, src)
}
func (m *ErrorDetail) XXX_Size() int {
	return xxx_messageInfo_ErrorDetail.Size(m)
}
func (m *ErrorDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorDetail proto.InternalMessageInfo

func (m *ErrorDetail) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ErrorDetail) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ErrorDetail) GetInner() string {
	if m != nil {
		return m.Inner
	}
	return ""
}

type SignedBundle struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Sig  []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	// Types that are valid to be assigned to Auth:
	//	*SignedBundle_Address
	//	*SignedBundle_PubKey
	Auth                 isSignedBundle_Auth `protobuf_oneof:"auth"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SignedBundle) Reset()         { *m = SignedBundle{} }
func (m *SignedBundle) String() string { return proto.CompactTextString(m) }
func (*SignedBundle) ProtoMessage()    {}
func (*SignedBundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{35}
}

func (m *SignedBundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedBundle.Unmarshal(m, b)
}
func (m *SignedBundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedBundle.Marshal(b, m, deterministic)
}
func (m *SignedBundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedBundle.Merge(m, src)
}
func (m *SignedBundle) XXX_Size() int {
	return xxx_messageInfo_SignedBundle.Size(m)
}
func (m *SignedBundle) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedBundle.DiscardUnknown(m)
}

var xxx_messageInfo_SignedBundle proto.InternalMessageInfo

func (m *SignedBundle) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SignedBundle) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type isSignedBundle_Auth interface {
	isSignedBundle_Auth()
}

type SignedBundle_Address struct {
	Address []byte `protobuf:"bytes,101,opt,name=address,proto3,oneof"`
}

type SignedBundle_PubKey struct {
	PubKey []byte `protobuf:"bytes,102,opt,name=pubKey,proto3,oneof"`
}

func (*SignedBundle_Address) isSignedBundle_Auth() {}

func (*SignedBundle_PubKey) isSignedBundle_Auth() {}

func (m *SignedBundle) GetAuth() isSignedBundle_Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *SignedBundle) GetAddress() []byte {
	if x, ok := m.GetAuth().(*SignedBundle_Address); ok {
		return x.Address
	}
	return nil
}

func (m *SignedBundle) GetPubKey() []byte {
	if x, ok := m.GetAuth().(*SignedBundle_PubKey); ok {
		return x.PubKey
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SignedBundle) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SignedBundle_Address)(nil),
		(*SignedBundle_PubKey)(nil),
	}
}

// A message reprensenting a signature from a validator
// meant to be used by foreign chain in order to recognise
// a decision taken by the vega network.
type NodeSignature struct {
	// The ID of the resource being signed
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// The signature
	Sig []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	// The kind of resource being signed
	Kind                 NodeSignatureKind `protobuf:"varint,3,opt,name=kind,proto3,enum=vega.NodeSignatureKind" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NodeSignature) Reset()         { *m = NodeSignature{} }
func (m *NodeSignature) String() string { return proto.CompactTextString(m) }
func (*NodeSignature) ProtoMessage()    {}
func (*NodeSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb6b8173ee11af27, []int{36}
}

func (m *NodeSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeSignature.Unmarshal(m, b)
}
func (m *NodeSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeSignature.Marshal(b, m, deterministic)
}
func (m *NodeSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeSignature.Merge(m, src)
}
func (m *NodeSignature) XXX_Size() int {
	return xxx_messageInfo_NodeSignature.Size(m)
}
func (m *NodeSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeSignature.DiscardUnknown(m)
}

var xxx_messageInfo_NodeSignature proto.InternalMessageInfo

func (m *NodeSignature) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *NodeSignature) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *NodeSignature) GetKind() NodeSignatureKind {
	if m != nil {
		return m.Kind
	}
	return NodeSignatureKind_NODE_SIGNATURE_KIND_UNSPECIFIED
}

func init() {
	proto.RegisterEnum("vega.Side", Side_name, Side_value)
	proto.RegisterEnum("vega.Interval", Interval_name, Interval_value)
	proto.RegisterEnum("vega.OrderError", OrderError_name, OrderError_value)
	proto.RegisterEnum("vega.ChainStatus", ChainStatus_name, ChainStatus_value)
	proto.RegisterEnum("vega.AccountType", AccountType_name, AccountType_value)
	proto.RegisterEnum("vega.TransferType", TransferType_name, TransferType_value)
	proto.RegisterEnum("vega.NodeSignatureKind", NodeSignatureKind_name, NodeSignatureKind_value)
	proto.RegisterEnum("vega.Order_TimeInForce", Order_TimeInForce_name, Order_TimeInForce_value)
	proto.RegisterEnum("vega.Order_Type", Order_Type_name, Order_Type_value)
	proto.RegisterEnum("vega.Order_Status", Order_Status_name, Order_Status_value)
	proto.RegisterEnum("vega.Trade_Type", Trade_Type_name, Trade_Type_value)
	proto.RegisterType((*Price)(nil), "vega.Price")
	proto.RegisterType((*Timestamp)(nil), "vega.Timestamp")
	proto.RegisterType((*Party)(nil), "vega.Party")
	proto.RegisterType((*RiskFactor)(nil), "vega.RiskFactor")
	proto.RegisterType((*RiskResult)(nil), "vega.RiskResult")
	proto.RegisterMapType((map[string]*RiskFactor)(nil), "vega.RiskResult.PredictedNextRiskFactorsEntry")
	proto.RegisterMapType((map[string]*RiskFactor)(nil), "vega.RiskResult.RiskFactorsEntry")
	proto.RegisterType((*Order)(nil), "vega.Order")
	proto.RegisterType((*OrderCancellationConfirmation)(nil), "vega.OrderCancellationConfirmation")
	proto.RegisterType((*OrderConfirmation)(nil), "vega.OrderConfirmation")
	proto.RegisterType((*AuctionIndicativeState)(nil), "vega.AuctionIndicativeState")
	proto.RegisterType((*Trade)(nil), "vega.Trade")
	proto.RegisterType((*Fee)(nil), "vega.Fee")
	proto.RegisterType((*TradeSet)(nil), "vega.TradeSet")
	proto.RegisterType((*Candle)(nil), "vega.Candle")
	proto.RegisterType((*PriceLevel)(nil), "vega.PriceLevel")
	proto.RegisterType((*MarketDepth)(nil), "vega.MarketDepth")
	proto.RegisterType((*Position)(nil), "vega.Position")
	proto.RegisterType((*PositionTrade)(nil), "vega.PositionTrade")
	proto.RegisterType((*Statistics)(nil), "vega.Statistics")
	proto.RegisterType((*NotifyTraderAccount)(nil), "vega.NotifyTraderAccount")
	proto.RegisterType((*Withdraw)(nil), "vega.Withdraw")
	proto.RegisterType((*OrderAmendment)(nil), "vega.OrderAmendment")
	proto.RegisterType((*OrderSubmission)(nil), "vega.OrderSubmission")
	proto.RegisterType((*OrderCancellation)(nil), "vega.OrderCancellation")
	proto.RegisterType((*NodeRegistration)(nil), "vega.NodeRegistration")
	proto.RegisterType((*NodeVote)(nil), "vega.NodeVote")
	proto.RegisterType((*Account)(nil), "vega.Account")
	proto.RegisterType((*FinancialAmount)(nil), "vega.FinancialAmount")
	proto.RegisterType((*Transfer)(nil), "vega.Transfer")
	proto.RegisterType((*TransferRequest)(nil), "vega.TransferRequest")
	proto.RegisterType((*LedgerEntry)(nil), "vega.LedgerEntry")
	proto.RegisterType((*TransferBalance)(nil), "vega.TransferBalance")
	proto.RegisterType((*TransferResponse)(nil), "vega.TransferResponse")
	proto.RegisterType((*MarginLevels)(nil), "vega.MarginLevels")
	proto.RegisterType((*MarketData)(nil), "vega.MarketData")
	proto.RegisterType((*ErrorDetail)(nil), "vega.ErrorDetail")
	proto.RegisterType((*SignedBundle)(nil), "vega.SignedBundle")
	proto.RegisterType((*NodeSignature)(nil), "vega.NodeSignature")
}

func init() { proto.RegisterFile("proto/vega.proto", fileDescriptor_bb6b8173ee11af27) }

var fileDescriptor_bb6b8173ee11af27 = []byte{
	// 3727 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x5a, 0xcd, 0x6f, 0xe4, 0xca,
	0x56, 0x1f, 0xf7, 0x57, 0xd2, 0xa7, 0x93, 0x89, 0x53, 0x93, 0x99, 0xe9, 0x9b, 0xf9, 0xca, 0xf8,
	0xce, 0xbb, 0x13, 0x72, 0x99, 0x0c, 0x77, 0xe0, 0x5d, 0xbd, 0xf7, 0x04, 0x42, 0x4e, 0xdb, 0x3d,
	0x31, 0xe9, 0xb8, 0xfb, 0x96, 0x9d, 0x99, 0x3b, 0x4f, 0x40, 0xcb, 0xe9, 0xae, 0x74, 0x4c, 0xba,
	0xed, 0x7e, 0xb6, 0x3b, 0x33, 0x79, 0x6c, 0x9e, 0x10, 0x48, 0xac, 0x10, 0x1b, 0x24, 0x24, 0x24,
	0x16, 0x80, 0x10, 0x0b, 0x56, 0x48, 0xfc, 0x17, 0x88, 0x05, 0x0b, 0x24, 0x56, 0x0f, 0xdd, 0x7f,
	0x01, 0x09, 0x09, 0xb1, 0x00, 0xd5, 0x87, 0xed, 0xb2, 0x3b, 0x19, 0xee, 0x15, 0x6f, 0x95, 0xae,
	0xdf, 0x39, 0x75, 0xea, 0xd4, 0xa9, 0x73, 0x4e, 0x9d, 0x3a, 0x0e, 0xa8, 0xf3, 0x28, 0x4c, 0xc2,
	0x97, 0x97, 0x64, 0xe2, 0xed, 0xb3, 0x9f, 0xa8, 0x46, 0x7f, 0x6f, 0x7f, 0x39, 0xf1, 0x93, 0xf3,
	0xc5, 0xe9, 0xfe, 0x28, 0x9c, 0xbd, 0x9c, 0xbd, 0xf7, 0x93, 0x8b, 0xf0, 0xfd, 0xcb, 0x49, 0xf8,
	0x82, 0xb1, 0xbc, 0xb8, 0xf4, 0xa6, 0xfe, 0xd8, 0x4b, 0xc2, 0x28, 0x7e, 0x99, 0xfd, 0xe4, 0xb3,
	0xb5, 0x47, 0x50, 0x1f, 0x44, 0xfe, 0x88, 0xa0, 0x2d, 0xa8, 0x5f, 0x7a, 0xd3, 0x05, 0x69, 0x2b,
	0x3b, 0xca, 0x6e, 0x0d, 0xf3, 0x81, 0xf6, 0x14, 0x9a, 0xae, 0x3f, 0x23, 0x71, 0xe2, 0xcd, 0xe6,
	0x45, 0x96, 0x6a, 0xca, 0xf2, 0x04, 0xea, 0x03, 0x2f, 0x4a, 0xae, 0xd0, 0x3d, 0xa8, 0xf8, 0x63,
	0x46, 0x6b, 0x1e, 0x34, 0xbe, 0xf9, 0xf9, 0x93, 0xca, 0x8e, 0x82, 0x2b, 0xfe, 0x58, 0xb3, 0x01,
	0xb0, 0x1f, 0x5f, 0x74, 0xbd, 0x51, 0x12, 0x46, 0xe8, 0x1e, 0x34, 0x66, 0x5e, 0x74, 0x41, 0x12,
	0xce, 0x89, 0xc5, 0x88, 0x0a, 0x8f, 0xcf, 0xc3, 0x28, 0x69, 0x57, 0x76, 0x94, 0x5d, 0x05, 0xf3,
	0x01, 0x42, 0x50, 0x9b, 0x86, 0xc1, 0xa4, 0x5d, 0x65, 0x20, 0xfb, 0xad, 0xfd, 0x53, 0x95, 0x0b,
	0xc4, 0x24, 0x5e, 0x4c, 0x13, 0xb4, 0x07, 0xea, 0x62, 0x3e, 0xf6, 0x12, 0x32, 0xce, 0x34, 0x15,
	0x0a, 0x2e, 0xe1, 0xa8, 0x03, 0xad, 0x28, 0x53, 0x25, 0x6e, 0x57, 0x76, 0xaa, 0xbb, 0xad, 0x57,
	0x4f, 0xf7, 0x99, 0x35, 0x73, 0x91, 0xfb, 0xb9, 0xba, 0xb1, 0x19, 0x24, 0xd1, 0x15, 0x96, 0x67,
	0xa1, 0x5f, 0x81, 0x3b, 0x01, 0xf9, 0x90, 0x9c, 0x30, 0xe1, 0xf9, 0x9a, 0x55, 0xb6, 0xe6, 0x75,
	0x24, 0xf4, 0x7b, 0xd0, 0x9e, 0x47, 0x64, 0xec, 0x8f, 0x12, 0x32, 0xb6, 0xc9, 0x87, 0x44, 0x92,
	0xdf, 0xae, 0x31, 0x1d, 0xf6, 0x97, 0x74, 0x18, 0xdc, 0x30, 0x81, 0x2b, 0x74, 0xa3, 0xbc, 0xed,
	0x01, 0xa8, 0x65, 0x6e, 0xa4, 0x42, 0xf5, 0x82, 0x5c, 0x09, 0x83, 0xd3, 0x9f, 0xe8, 0xb3, 0xf4,
	0x28, 0xa9, 0xb5, 0x5b, 0xaf, 0xd4, 0x7c, 0x79, 0x3e, 0x51, 0x1c, 0xee, 0x8f, 0x2a, 0x3f, 0x50,
	0xb6, 0x7f, 0x07, 0x1e, 0x7d, 0x54, 0x99, 0xff, 0x9f, 0x78, 0xed, 0x3f, 0x1b, 0x50, 0xef, 0x47,
	0x63, 0x12, 0xa1, 0xdb, 0xb9, 0x03, 0x51, 0xc7, 0x41, 0xdb, 0xb0, 0xca, 0x9d, 0xc3, 0x32, 0x98,
	0xa0, 0x26, 0xce, 0xc6, 0xa8, 0x0d, 0x2b, 0x73, 0xea, 0x75, 0x96, 0xc1, 0x0c, 0xdf, 0xc4, 0xe9,
	0x10, 0x3d, 0x86, 0x5a, 0xec, 0x8f, 0x49, 0xbb, 0xb6, 0xa3, 0xec, 0xde, 0x7e, 0x05, 0x7c, 0x69,
	0xc7, 0x1f, 0x13, 0xcc, 0x70, 0xea, 0x68, 0x73, 0xea, 0xf1, 0xed, 0x3a, 0x77, 0x74, 0x36, 0xa0,
	0x8e, 0x16, 0xfb, 0x3f, 0x25, 0xed, 0x06, 0x03, 0xd9, 0x6f, 0xf4, 0x10, 0x9a, 0x11, 0x99, 0x79,
	0x7e, 0xe0, 0x07, 0x93, 0xf6, 0x0a, 0x23, 0xe4, 0x00, 0xfa, 0x21, 0xb4, 0x12, 0x7f, 0x46, 0xac,
	0xa0, 0x1b, 0x46, 0x23, 0xd2, 0x5e, 0x65, 0xcb, 0xdd, 0xe7, 0xcb, 0xb1, 0xfd, 0xec, 0xbb, 0x39,
	0x19, 0xcb, 0xbc, 0xe8, 0x19, 0xd4, 0x92, 0xab, 0x39, 0x69, 0x37, 0xd9, 0x1c, 0xb5, 0x30, 0xe7,
	0x6a, 0x4e, 0x30, 0xa3, 0xd2, 0xe5, 0x47, 0x11, 0xa1, 0x0e, 0xac, 0x27, 0x6d, 0x60, 0xde, 0x95,
	0x03, 0x68, 0x0f, 0x1a, 0x71, 0xe2, 0x25, 0x8b, 0xb8, 0xdd, 0x62, 0x52, 0x90, 0x2c, 0xc5, 0x61,
	0x14, 0x2c, 0x38, 0xa8, 0x24, 0xf2, 0x61, 0xee, 0x47, 0x24, 0xd6, 0x93, 0xf6, 0x1a, 0x97, 0x94,
	0x01, 0x7c, 0x9b, 0x67, 0x24, 0x22, 0xc1, 0x88, 0xb4, 0xd7, 0x99, 0x31, 0x73, 0x00, 0xed, 0x42,
	0x23, 0x22, 0x5e, 0x1c, 0x06, 0xed, 0xdb, 0x4b, 0xda, 0x9a, 0x51, 0x14, 0x46, 0x58, 0xd0, 0xa9,
	0x1c, 0x11, 0x70, 0x7a, 0xd2, 0xde, 0xe0, 0xab, 0x64, 0x00, 0x3d, 0xb0, 0x4b, 0x12, 0xc5, 0x7e,
	0x18, 0xb4, 0x55, 0x66, 0xca, 0x74, 0x48, 0x29, 0xa7, 0x5e, 0x32, 0x3a, 0xb7, 0x8c, 0xf6, 0x26,
	0xa7, 0x88, 0xa1, 0xf6, 0x06, 0x5a, 0x92, 0x0d, 0xd1, 0x1d, 0xd8, 0x70, 0xad, 0xee, 0xf0, 0xc4,
	0x76, 0x06, 0x66, 0xc7, 0xea, 0x5a, 0xa6, 0xa1, 0xde, 0x42, 0x2d, 0x58, 0xa1, 0xe0, 0x6b, 0xb7,
	0xa3, 0x2a, 0xf9, 0xc0, 0x55, 0x2b, 0xe9, 0xc0, 0xea, 0x77, 0xd4, 0x6a, 0x3a, 0xe8, 0xf6, 0x8f,
	0xd4, 0x9a, 0xd6, 0x87, 0x1a, 0xb5, 0x33, 0xda, 0x02, 0xd5, 0x7d, 0x37, 0x30, 0x4b, 0x12, 0x6f,
	0x03, 0x30, 0xb4, 0x67, 0x1d, 0x5b, 0xae, 0xaa, 0xa0, 0x0d, 0x68, 0xb1, 0xf1, 0xb1, 0x8e, 0x8f,
	0x4c, 0x2a, 0x58, 0x85, 0x35, 0x06, 0xd8, 0xa6, 0xfb, 0xb6, 0x8f, 0x8f, 0xd4, 0xaa, 0xf6, 0x0f,
	0x0a, 0x34, 0xb8, 0xcd, 0x11, 0x82, 0xdb, 0x8e, 0xab, 0xbb, 0x27, 0xce, 0xd0, 0xb2, 0xdf, 0xe8,
	0x3d, 0x8b, 0x4a, 0xdc, 0x84, 0x75, 0x81, 0xe9, 0x1d, 0xd7, 0x7a, 0x63, 0xaa, 0x8a, 0xc4, 0x66,
	0x7e, 0x3d, 0xb0, 0xb0, 0x69, 0xa8, 0x15, 0xaa, 0x8e, 0xc0, 0x3a, 0xba, 0xdd, 0x31, 0x7b, 0x3d,
	0xd3, 0x50, 0xab, 0x12, 0xa7, 0xe3, 0xf6, 0x07, 0x03, 0xd3, 0x50, 0x6b, 0x92, 0xc0, 0xae, 0xc5,
	0xd8, 0xea, 0xd4, 0x38, 0x02, 0xc2, 0xe6, 0x6f, 0x99, 0x1d, 0xd7, 0x34, 0xd4, 0x06, 0x7a, 0x00,
	0xf7, 0x05, 0x38, 0xd0, 0xb1, 0x6b, 0xe9, 0xbd, 0xde, 0xbb, 0x74, 0xc6, 0x8a, 0x76, 0x00, 0x8f,
	0xd8, 0x29, 0x76, 0xbc, 0x60, 0x44, 0xa6, 0x53, 0x2f, 0xf1, 0xc3, 0xa0, 0x13, 0x06, 0x67, 0x7e,
	0x34, 0x63, 0xbf, 0xd1, 0x53, 0xa8, 0x87, 0x94, 0x81, 0x85, 0x64, 0xeb, 0x55, 0x4b, 0x3a, 0x79,
	0xcc, 0x29, 0xda, 0x5f, 0x2a, 0xb0, 0xc9, 0x85, 0x7c, 0xb7, 0x89, 0xe8, 0x53, 0x68, 0x24, 0x91,
	0x37, 0x26, 0x69, 0x12, 0x16, 0x3c, 0x2e, 0xc5, 0xb0, 0x20, 0x21, 0x1d, 0xee, 0xce, 0xbd, 0x38,
	0xf6, 0x2f, 0x09, 0x9b, 0x1b, 0xeb, 0x67, 0x67, 0x84, 0x66, 0xa1, 0x76, 0x55, 0x9e, 0xc3, 0xe5,
	0x5e, 0xcf, 0xa9, 0xfd, 0xb3, 0x02, 0xf7, 0xf4, 0xc5, 0x88, 0xaa, 0x65, 0x05, 0x63, 0x7f, 0xe4,
	0x25, 0xfe, 0x25, 0xa1, 0x47, 0x45, 0x0a, 0xe9, 0x45, 0x29, 0xa5, 0x97, 0x5d, 0xd8, 0xf0, 0x33,
	0x76, 0x76, 0x41, 0xb2, 0x0c, 0x54, 0xc3, 0x65, 0x98, 0x5e, 0x3f, 0x39, 0xf4, 0x26, 0x9c, 0x2e,
	0x66, 0x84, 0x65, 0xa4, 0x1a, 0x5e, 0xc2, 0x91, 0x06, 0x6b, 0x1e, 0xd7, 0xc5, 0x49, 0xbc, 0x28,
	0x61, 0x29, 0xaa, 0x8a, 0x0b, 0x18, 0x7a, 0x0c, 0x20, 0xc6, 0x66, 0x30, 0x66, 0x39, 0xaa, 0x8a,
	0x25, 0x44, 0xfb, 0x97, 0x1a, 0xd4, 0x99, 0x95, 0xbe, 0x53, 0xba, 0xcc, 0x92, 0x5e, 0xf5, 0xba,
	0xa4, 0x57, 0x93, 0x92, 0xde, 0x16, 0xd4, 0x4f, 0x17, 0x57, 0x24, 0x62, 0x4b, 0x37, 0x31, 0x1f,
	0xd0, 0x5b, 0x3b, 0x26, 0xd3, 0x29, 0x89, 0x58, 0x82, 0x6c, 0x62, 0x31, 0x42, 0xbb, 0xd0, 0xf4,
	0x26, 0x93, 0x88, 0xc4, 0x71, 0x18, 0xb1, 0x14, 0x59, 0xcc, 0xb8, 0x39, 0x91, 0x6a, 0x77, 0xba,
	0xb8, 0x62, 0xa7, 0xc3, 0x72, 0x65, 0x13, 0x67, 0x63, 0x9a, 0x39, 0xa8, 0x3c, 0x4e, 0x6c, 0xf2,
	0x0c, 0x94, 0x01, 0x94, 0x9a, 0x64, 0xb7, 0xac, 0xc8, 0x83, 0x19, 0x90, 0xe5, 0xd2, 0x96, 0x9c,
	0x9d, 0x98, 0x81, 0xe4, 0x5c, 0xfa, 0x3d, 0xb6, 0x3a, 0x89, 0xba, 0x84, 0xb0, 0x04, 0xd8, 0x7a,
	0xd5, 0xe4, 0x9c, 0x5d, 0x42, 0x70, 0x46, 0x42, 0xcf, 0xb9, 0x22, 0x9c, 0x6f, 0xbd, 0xcc, 0x97,
	0xd3, 0xd0, 0x2f, 0xc3, 0x26, 0x9b, 0x24, 0x5c, 0xeb, 0x80, 0x26, 0x2c, 0x96, 0x20, 0x6b, 0x78,
	0x99, 0x80, 0xf6, 0x01, 0xf1, 0xa9, 0x05, 0xf6, 0x0d, 0xc6, 0x7e, 0x0d, 0x45, 0x0b, 0x3f, 0x9a,
	0x9f, 0xd2, 0xf4, 0x63, 0x98, 0x5d, 0xfd, 0xa4, 0x47, 0x33, 0xd4, 0x13, 0x78, 0x20, 0x27, 0xa4,
	0x61, 0xa7, 0xd7, 0x77, 0xcc, 0x61, 0xff, 0xc4, 0x1d, 0xbe, 0xee, 0xf7, 0x69, 0x66, 0x79, 0x0c,
	0xdb, 0x37, 0x30, 0x1c, 0xe8, 0x86, 0x5a, 0xd5, 0x62, 0xa8, 0xd2, 0x5d, 0x31, 0x0f, 0xba, 0xe0,
	0xbb, 0xe7, 0x65, 0x60, 0x36, 0xa6, 0x3b, 0xf6, 0x83, 0xb3, 0xc8, 0x8b, 0x93, 0x68, 0x31, 0x4a,
	0x16, 0x11, 0xa1, 0x4c, 0x3c, 0x26, 0x96, 0x09, 0xd4, 0xd3, 0xa7, 0xfe, 0x4f, 0x16, 0xfe, 0xd8,
	0x4f, 0xae, 0x28, 0x23, 0x77, 0xbb, 0x02, 0xa6, 0xbd, 0x84, 0x55, 0x76, 0x4e, 0x0e, 0x49, 0xa4,
	0x74, 0xa0, 0xdc, 0x98, 0x0e, 0xb4, 0x7f, 0x55, 0xa0, 0xd1, 0xf1, 0x82, 0xf1, 0x94, 0x14, 0x7d,
	0x42, 0x29, 0xfb, 0xc4, 0x36, 0xac, 0xd2, 0x6b, 0x87, 0x02, 0x69, 0x24, 0xa4, 0x63, 0xea, 0xf3,
	0xe7, 0xfe, 0xe4, 0x5c, 0x68, 0xc4, 0x7e, 0xd3, 0x02, 0x66, 0x1a, 0xbe, 0x17, 0x61, 0x40, 0x7f,
	0x52, 0xae, 0x70, 0x4e, 0x02, 0x51, 0x23, 0xb0, 0xdf, 0x34, 0x32, 0x46, 0xd3, 0x30, 0x4e, 0x6b,
	0x04, 0x3e, 0xa0, 0x91, 0x71, 0xc9, 0xa3, 0x9e, 0x57, 0x08, 0x62, 0x84, 0xf6, 0x60, 0xd5, 0x0f,
	0x12, 0x12, 0x5d, 0x7a, 0x53, 0x51, 0x1b, 0xdc, 0xe6, 0x7b, 0xb2, 0x04, 0x8a, 0x33, 0xba, 0xf6,
	0x27, 0x0a, 0x00, 0xcb, 0x26, 0x3d, 0x72, 0x49, 0xa6, 0x79, 0xb0, 0x2a, 0x72, 0xb0, 0x7e, 0x06,
	0xb7, 0x83, 0xc5, 0xec, 0x94, 0x44, 0xfd, 0x33, 0x9e, 0xe3, 0x84, 0xf5, 0x4b, 0xa8, 0xa4, 0x50,
	0xb5, 0xa4, 0x90, 0x3a, 0x5a, 0xcc, 0x16, 0x53, 0x39, 0x51, 0xf1, 0x1d, 0x2f, 0xe1, 0x5a, 0x0c,
	0xad, 0x63, 0x96, 0x3a, 0x0c, 0x32, 0x4f, 0xce, 0x3f, 0x9a, 0x29, 0x35, 0xa8, 0x9e, 0x2e, 0xae,
	0x44, 0x16, 0x17, 0xe1, 0x97, 0xef, 0x05, 0x53, 0x22, 0x8d, 0x51, 0xea, 0xe5, 0x22, 0x6d, 0x2f,
	0x33, 0x31, 0x2a, 0x3d, 0xde, 0xd5, 0x41, 0x18, 0xfb, 0xec, 0x0a, 0xf9, 0xd8, 0x92, 0x52, 0xed,
	0x57, 0x29, 0xd7, 0x7e, 0x40, 0x8f, 0x4a, 0x4a, 0xc3, 0x55, 0x2c, 0x21, 0x68, 0x07, 0x5a, 0x11,
	0xf1, 0xa6, 0x7e, 0x4c, 0xc6, 0x03, 0xbb, 0x27, 0xf2, 0xaf, 0x0c, 0xa1, 0x67, 0xb0, 0xbe, 0x08,
	0x64, 0x1e, 0x9e, 0x81, 0x8b, 0x20, 0x0d, 0x06, 0xef, 0x92, 0x44, 0xde, 0x84, 0xb0, 0x0a, 0x98,
	0x5f, 0x10, 0xdc, 0x2d, 0x96, 0x09, 0xda, 0x6f, 0xc0, 0x7a, 0xba, 0x2f, 0x9e, 0xb9, 0xf3, 0x23,
	0xe2, 0xae, 0x9b, 0x1e, 0x51, 0x76, 0xf0, 0x15, 0xe9, 0xe0, 0xb5, 0xff, 0x68, 0x02, 0xd0, 0x1b,
	0xcb, 0x8f, 0x13, 0x7f, 0x14, 0xd3, 0x3d, 0x9c, 0x4e, 0xc3, 0xd1, 0xc5, 0x21, 0xf1, 0x27, 0xe7,
	0x89, 0xf0, 0x11, 0x19, 0xa2, 0x7b, 0x38, 0xf5, 0x46, 0x17, 0xd3, 0x70, 0xd2, 0x23, 0xc1, 0x24,
	0x39, 0x17, 0xe2, 0x8a, 0x20, 0xb5, 0x55, 0x12, 0x26, 0xde, 0x74, 0x40, 0xa8, 0x2f, 0x71, 0x5f,
	0x91, 0x10, 0xba, 0xce, 0x84, 0x04, 0x24, 0xf6, 0x63, 0x5a, 0x83, 0x31, 0x5b, 0x35, 0xb1, 0x0c,
	0x51, 0x8e, 0xd1, 0x22, 0x8a, 0x48, 0x90, 0x30, 0x0e, 0x7e, 0x61, 0xc8, 0x10, 0x3d, 0x45, 0x7a,
	0xd6, 0x8c, 0xcc, 0x2f, 0x8e, 0x6c, 0x8c, 0x7e, 0x29, 0x2b, 0x60, 0xf9, 0xbd, 0xb1, 0xc9, 0xdd,
	0xa2, 0x73, 0xee, 0xf9, 0x41, 0xa9, 0x7e, 0xa5, 0xaa, 0x7e, 0x18, 0x90, 0xe8, 0x80, 0x6e, 0x92,
	0x45, 0x13, 0x55, 0x35, 0x43, 0x68, 0x68, 0x08, 0xab, 0xbb, 0x1f, 0x0e, 0xae, 0x12, 0x12, 0xb3,
	0x4b, 0xa4, 0x86, 0x4b, 0x28, 0xfa, 0x35, 0xb8, 0x2b, 0x10, 0x1e, 0x2b, 0x99, 0x48, 0x60, 0xec,
	0xd7, 0x13, 0x69, 0x2d, 0xc0, 0x13, 0xd0, 0x80, 0x44, 0x0e, 0x19, 0x85, 0xc1, 0x98, 0x5d, 0x36,
	0x35, 0x5c, 0x86, 0x29, 0x67, 0x98, 0xce, 0x15, 0x9c, 0x6b, 0x9c, 0xb3, 0x04, 0xd3, 0xfc, 0xc8,
	0x4c, 0xcd, 0xa3, 0x2c, 0x66, 0x77, 0x4d, 0x0d, 0x17, 0x30, 0xb6, 0x2e, 0x1d, 0xeb, 0x33, 0x12,
	0x8c, 0xf9, 0xdd, 0xa8, 0x8a, 0x75, 0x8b, 0x30, 0x0d, 0x6d, 0x06, 0xf1, 0x4a, 0x8e, 0xb3, 0xf2,
	0x52, 0x7a, 0x09, 0xcf, 0x79, 0xd9, 0x4b, 0x82, 0xf3, 0x22, 0x99, 0x37, 0xc7, 0xe9, 0x01, 0x33,
	0x4c, 0xe4, 0x9b, 0x3b, 0xdc, 0xd5, 0x24, 0x28, 0xe3, 0x70, 0x79, 0xf2, 0xde, 0x92, 0x38, 0x38,
	0x44, 0xef, 0x3e, 0xb6, 0x79, 0x67, 0x71, 0x1a, 0x8f, 0x22, 0x7f, 0x4e, 0xa3, 0x20, 0x6e, 0xdf,
	0xdd, 0x51, 0x76, 0xd7, 0xf1, 0x35, 0x14, 0xca, 0xcf, 0xcc, 0x5a, 0xe4, 0xbf, 0xc7, 0xf9, 0x97,
	0x29, 0xf4, 0x35, 0x3e, 0x62, 0x77, 0x42, 0x71, 0xc2, 0x7d, 0x36, 0xe1, 0x3a, 0x12, 0xfa, 0x11,
	0xb4, 0x67, 0x79, 0x72, 0x2b, 0x4e, 0x6b, 0xb3, 0x69, 0x37, 0xd2, 0xd1, 0x97, 0x70, 0x6f, 0x2e,
	0x42, 0x39, 0x2e, 0xce, 0xfc, 0x84, 0xcd, 0xbc, 0x81, 0x8a, 0x5e, 0xc1, 0x96, 0x37, 0x1a, 0x85,
	0x8b, 0x20, 0x29, 0xce, 0xda, 0x66, 0xb3, 0xae, 0xa5, 0xa1, 0x1f, 0xc0, 0x7d, 0xa1, 0x87, 0x97,
	0x78, 0xc5, 0x69, 0x0f, 0xd8, 0xb4, 0x9b, 0xc8, 0x2c, 0x1e, 0xe6, 0xf3, 0x37, 0xfc, 0x7d, 0x75,
	0xe8, 0xc5, 0xe7, 0xed, 0x87, 0x2c, 0xf8, 0x4a, 0x28, 0xab, 0x35, 0x33, 0xa4, 0xfd, 0x88, 0xf1,
	0x48, 0x08, 0xf5, 0xd2, 0x11, 0x0d, 0xc7, 0x94, 0xe3, 0x31, 0xe3, 0x28, 0x60, 0x2c, 0xd9, 0xd0,
	0x30, 0x31, 0x16, 0x11, 0x2b, 0xfe, 0xdb, 0x4f, 0x44, 0xb2, 0x91, 0x41, 0x9a, 0xf1, 0x16, 0x73,
	0x76, 0x1f, 0xef, 0xf0, 0xfa, 0x91, 0x8f, 0x68, 0x2a, 0x67, 0xd2, 0x2c, 0xa3, 0xfd, 0x94, 0xa7,
	0x72, 0x31, 0xd4, 0x2c, 0xb8, 0x63, 0x87, 0x89, 0x7f, 0x76, 0xc5, 0xfc, 0x28, 0xd2, 0xb9, 0x85,
	0x68, 0x46, 0x61, 0x4e, 0x10, 0xe5, 0xf7, 0x42, 0x3a, 0xa6, 0x8b, 0x78, 0x33, 0xca, 0x25, 0x12,
	0x9e, 0x18, 0x69, 0x18, 0x56, 0xdf, 0xfa, 0xc9, 0xf9, 0x38, 0xf2, 0xde, 0xcb, 0x77, 0x87, 0x52,
	0xbc, 0x3b, 0x6e, 0x98, 0x4d, 0x93, 0xb2, 0x17, 0xc7, 0x24, 0x11, 0x7d, 0x06, 0x3e, 0xd0, 0xfe,
	0xa2, 0x02, 0xb7, 0x59, 0x0c, 0xb0, 0x30, 0x9c, 0x91, 0x20, 0x41, 0x3b, 0xb0, 0xc2, 0xfc, 0x39,
	0x15, 0xcd, 0x9b, 0x60, 0x5f, 0x2b, 0x38, 0x85, 0x29, 0x47, 0xe1, 0xe2, 0xca, 0x39, 0x52, 0x25,
	0xe4, 0x6b, 0xaf, 0x5a, 0xba, 0xf6, 0x9e, 0xa6, 0xb7, 0x43, 0x4d, 0x7e, 0x55, 0xb1, 0x2b, 0x26,
	0xad, 0x11, 0x68, 0x21, 0xed, 0xff, 0x94, 0x18, 0x64, 0x9a, 0x78, 0xe2, 0xe6, 0xca, 0x01, 0xf4,
	0x42, 0x6e, 0x03, 0x34, 0x98, 0x90, 0x0d, 0x51, 0x67, 0xa5, 0xa5, 0x93, 0xdc, 0x17, 0x28, 0x35,
	0x38, 0x56, 0xbe, 0x7d, 0x83, 0x43, 0xfb, 0xaf, 0x0a, 0x6c, 0xf4, 0x45, 0x6c, 0xcf, 0xfc, 0x38,
	0xe6, 0x2e, 0x50, 0x6a, 0x0f, 0x7e, 0x7d, 0x8b, 0x3d, 0x5b, 0xb4, 0xf2, 0xb3, 0x25, 0xb3, 0x4a,
	0xbe, 0xf5, 0x9d, 0x52, 0xb7, 0x67, 0xd9, 0x70, 0x5b, 0xb2, 0x71, 0xb2, 0x9a, 0x69, 0x5b, 0x3c,
	0x70, 0x58, 0x19, 0xc7, 0x27, 0xa9, 0xb7, 0xc4, 0x43, 0xe7, 0xb9, 0xe8, 0x13, 0x35, 0xca, 0xaf,
	0x96, 0x83, 0x95, 0x6f, 0x7e, 0xfe, 0xa4, 0xfa, 0xc7, 0x8a, 0x22, 0x1a, 0x46, 0x07, 0xdf, 0xc5,
	0x0e, 0xf9, 0xe4, 0x42, 0xc7, 0xa7, 0xd0, 0x81, 0x59, 0x2d, 0x77, 0x60, 0x5e, 0x7c, 0xbc, 0x1f,
	0x24, 0x29, 0x94, 0x36, 0x86, 0xf2, 0x86, 0x0d, 0x94, 0x1a, 0x36, 0xda, 0xef, 0xa7, 0x2f, 0x72,
	0xe9, 0x59, 0xff, 0x2d, 0x7c, 0xf3, 0x17, 0x72, 0x0c, 0xda, 0x6f, 0x83, 0x6a, 0x87, 0x63, 0x82,
	0xc9, 0xc4, 0x8f, 0x13, 0x11, 0xfb, 0x8f, 0xa1, 0x31, 0x5f, 0x9c, 0x1e, 0x89, 0x0e, 0xe1, 0x5a,
	0x36, 0x49, 0xa0, 0x68, 0x17, 0x5a, 0x2c, 0xe8, 0x07, 0x9c, 0xa9, 0x52, 0x60, 0x92, 0x49, 0xda,
	0x00, 0x56, 0xa9, 0xf4, 0x37, 0x61, 0x42, 0xfe, 0x4f, 0xa9, 0xcf, 0x64, 0x23, 0x15, 0x37, 0x24,
	0x19, 0xeb, 0xaf, 0x14, 0x58, 0x49, 0x53, 0x4b, 0xf9, 0x3d, 0xbd, 0x05, 0xf5, 0xf0, 0x7d, 0x40,
	0x22, 0x51, 0x64, 0xf2, 0x01, 0xef, 0x56, 0x4d, 0xa9, 0x6d, 0x45, 0xcd, 0x94, 0x0e, 0xf3, 0x44,
	0x51, 0x93, 0x12, 0x45, 0x21, 0xa2, 0xeb, 0xa5, 0x88, 0xfe, 0x9e, 0x38, 0xf7, 0x86, 0x5c, 0x00,
	0x09, 0x75, 0xf2, 0xc7, 0xab, 0xf6, 0x9b, 0xb0, 0xd1, 0xf5, 0x03, 0x2f, 0x18, 0xf9, 0xf4, 0xd6,
	0x67, 0xba, 0xe6, 0xc9, 0x4a, 0x54, 0x90, 0xe5, 0x64, 0x55, 0x91, 0x93, 0xd5, 0x9f, 0x29, 0xec,
	0xa9, 0x15, 0xc4, 0x67, 0x24, 0xca, 0xb7, 0xa5, 0xc8, 0xdb, 0x7a, 0x51, 0xc8, 0x7e, 0xad, 0x57,
	0x77, 0xc5, 0xb3, 0xb7, 0xb8, 0x6e, 0xb6, 0xce, 0x67, 0x42, 0xf3, 0xaa, 0xdc, 0x7b, 0x4c, 0x97,
	0x28, 0xf6, 0x30, 0x67, 0x7e, 0xc0, 0x27, 0x8b, 0x72, 0x3b, 0x07, 0xb4, 0x7f, 0x53, 0x60, 0x23,
	0x9d, 0x84, 0xc9, 0x4f, 0x16, 0x24, 0x4e, 0xd0, 0x4b, 0x68, 0x9d, 0x45, 0xe1, 0x4c, 0x58, 0x41,
	0x3c, 0x07, 0xd7, 0x0b, 0xa6, 0xc1, 0x32, 0x07, 0xfa, 0x1c, 0x9a, 0x49, 0x98, 0xb2, 0x57, 0xae,
	0x63, 0xcf, 0xe9, 0x92, 0xdd, 0xaa, 0x85, 0x24, 0xbf, 0xa4, 0x67, 0x4d, 0xd2, 0x33, 0xb7, 0x6a,
	0x5d, 0x3e, 0xd9, 0x42, 0x18, 0x36, 0xca, 0x61, 0xf8, 0x8f, 0x0a, 0xb4, 0x7a, 0x64, 0x3c, 0x21,
	0x11, 0x6f, 0x92, 0xef, 0x94, 0xf7, 0xc5, 0x8a, 0x65, 0x79, 0x23, 0x0f, 0x8b, 0x1b, 0x61, 0xf2,
	0xbe, 0x95, 0xe6, 0xb9, 0x16, 0xb5, 0x72, 0xf7, 0x16, 0x89, 0x73, 0xe2, 0x8a, 0x67, 0x67, 0x92,
	0xbf, 0x9d, 0x1b, 0xa5, 0xb7, 0xb3, 0xe6, 0xe6, 0x47, 0x72, 0x20, 0x1c, 0xfb, 0x39, 0xac, 0x78,
	0x92, 0xda, 0x4b, 0xf6, 0x4d, 0xa9, 0x72, 0x6c, 0x54, 0x0a, 0xb1, 0xa1, 0x5d, 0x82, 0x9a, 0x1f,
	0x74, 0x3c, 0x0f, 0x83, 0x98, 0xa0, 0x97, 0xd0, 0x4c, 0x04, 0x96, 0x3e, 0xfb, 0x45, 0x08, 0x48,
	0x76, 0xc3, 0x39, 0x0f, 0xfa, 0x02, 0x56, 0x85, 0xbc, 0xb4, 0x6b, 0x78, 0xb7, 0xe8, 0x78, 0x42,
	0x61, 0x9c, 0xb1, 0x69, 0x7f, 0x5b, 0x81, 0xb5, 0x63, 0x2f, 0x9a, 0xf8, 0x01, 0x7b, 0x69, 0xc6,
	0xf4, 0xe5, 0x36, 0xf3, 0xe8, 0xc3, 0x9b, 0xfa, 0x35, 0xe1, 0x24, 0xf1, 0x86, 0x5a, 0x26, 0xd0,
	0x43, 0x8b, 0x89, 0x17, 0x8d, 0xce, 0xd9, 0x6c, 0xb1, 0x29, 0x19, 0xa2, 0xe5, 0x8f, 0x1f, 0xf8,
	0x89, 0xcf, 0xca, 0x76, 0x2a, 0x8b, 0x9f, 0x4e, 0x11, 0xa4, 0x65, 0xe3, 0x28, 0xa4, 0xb9, 0x98,
	0x44, 0xde, 0x14, 0x93, 0x29, 0xf1, 0x62, 0xfe, 0xf4, 0x15, 0xbe, 0x76, 0x03, 0x55, 0xae, 0x56,
	0xea, 0xc5, 0x6a, 0x45, 0x4e, 0x2b, 0x8d, 0xe5, 0x66, 0x1f, 0x77, 0xd7, 0x95, 0x92, 0xbb, 0xe6,
	0xc7, 0xbe, 0x5a, 0x3e, 0xf6, 0x9f, 0x55, 0x01, 0x8e, 0xb3, 0x72, 0x92, 0xc5, 0x83, 0x17, 0x5d,
	0x0c, 0xa4, 0x36, 0x44, 0x0e, 0xd0, 0xba, 0xf0, 0x94, 0xc4, 0xc9, 0x81, 0x3f, 0x96, 0x5b, 0xa3,
	0x05, 0x8c, 0xd5, 0x85, 0x7c, 0x5c, 0x68, 0x8a, 0x16, 0x41, 0x5a, 0xa9, 0x52, 0xa0, 0x7f, 0x76,
	0x46, 0xa2, 0x81, 0x74, 0x7f, 0x97, 0x50, 0xfa, 0x16, 0xca, 0x10, 0x21, 0x8f, 0xb7, 0x66, 0xca,
	0x30, 0x33, 0x4c, 0xaa, 0x57, 0x43, 0xf4, 0xb0, 0x52, 0x9d, 0xf2, 0x6f, 0x8f, 0x2b, 0x85, 0x6f,
	0x8f, 0x1f, 0x35, 0x0d, 0xdd, 0x6d, 0x38, 0x27, 0x01, 0xeb, 0xdb, 0x90, 0x38, 0x11, 0x6f, 0xcb,
	0x02, 0x56, 0xea, 0xda, 0x42, 0xb9, 0x6b, 0xbb, 0xd4, 0xf9, 0x6d, 0x2d, 0x77, 0x7e, 0xb5, 0xaf,
	0xa0, 0xc5, 0x3e, 0xa8, 0x18, 0x24, 0xf1, 0xfc, 0x29, 0x0d, 0xdd, 0x51, 0x38, 0xe6, 0xd6, 0xaf,
	0x63, 0xf6, 0x9b, 0xfa, 0xc3, 0x8c, 0xc4, 0xb1, 0x37, 0x49, 0xfb, 0x5a, 0xe9, 0x90, 0x9e, 0xb9,
	0x1f, 0xd0, 0xac, 0x2e, 0xaa, 0x54, 0x36, 0xd0, 0x22, 0x58, 0x73, 0xfc, 0x49, 0x40, 0xc6, 0x07,
	0x0b, 0xd6, 0x36, 0x43, 0x50, 0x1b, 0x7b, 0x89, 0xc7, 0xaf, 0x4c, 0xcc, 0x7e, 0x23, 0x15, 0xaa,
	0xb1, 0x3f, 0xe1, 0xd7, 0x2e, 0xa6, 0x3f, 0xd1, 0x36, 0xac, 0x78, 0xe3, 0x71, 0x44, 0xe2, 0xb8,
	0x4d, 0x28, 0x7a, 0x78, 0x0b, 0xa7, 0x00, 0x6a, 0x67, 0xd7, 0xee, 0x99, 0x20, 0x89, 0xf1, 0x41,
	0x03, 0x6a, 0xde, 0x22, 0x39, 0xd7, 0x7e, 0x17, 0xd6, 0xe9, 0x25, 0x4d, 0xd7, 0xf5, 0x92, 0x45,
	0xc4, 0xfa, 0xd4, 0x59, 0xb5, 0x5d, 0xb1, 0x8c, 0x6b, 0x16, 0xfc, 0x1c, 0x6a, 0x17, 0x7e, 0x30,
	0x16, 0xb7, 0x89, 0x28, 0xad, 0x0a, 0x42, 0x8e, 0xfc, 0x60, 0x8c, 0x19, 0xd3, 0xde, 0x0f, 0xa1,
	0xe6, 0xf0, 0xef, 0x78, 0xaa, 0x63, 0x19, 0xe5, 0xe6, 0xe8, 0x1a, 0xac, 0x32, 0xf4, 0xe0, 0xe4,
	0x9d, 0xaa, 0xa0, 0x75, 0x68, 0xb2, 0x91, 0x63, 0xf6, 0x7a, 0x6a, 0x65, 0xef, 0xcf, 0x15, 0x58,
	0x4d, 0xdb, 0x6f, 0xa8, 0x0d, 0x5b, 0x96, 0xed, 0x9a, 0xf8, 0x8d, 0xde, 0x5b, 0x6e, 0xb0, 0x66,
	0x14, 0xeb, 0x8b, 0x63, 0xf5, 0xd7, 0xd1, 0xa6, 0x8c, 0x7c, 0xff, 0x58, 0xfd, 0xfb, 0x0a, 0x42,
	0xb0, 0x2e, 0x31, 0x7d, 0xff, 0x58, 0xfd, 0xc3, 0x95, 0x22, 0xdb, 0x17, 0x87, 0xea, 0x9f, 0x3e,
	0x44, 0x48, 0x86, 0xbe, 0x3c, 0x54, 0xff, 0xfd, 0xef, 0x94, 0x22, 0xf6, 0x85, 0xa1, 0xfe, 0xec,
	0xaf, 0xeb, 0x7b, 0xff, 0x53, 0x07, 0xc8, 0xbf, 0xa9, 0xd1, 0xcd, 0xf5, 0xb1, 0x61, 0xe2, 0xa1,
	0x89, 0x71, 0x1f, 0x0f, 0xed, 0xbe, 0x6d, 0xaa, 0xb7, 0xd0, 0x53, 0x78, 0x24, 0xa3, 0xe2, 0x03,
	0x93, 0xf8, 0x30, 0x35, 0xb4, 0x0c, 0x55, 0x41, 0x3b, 0xf0, 0xf0, 0x3a, 0x16, 0x8e, 0x59, 0x86,
	0x5a, 0x41, 0x4f, 0xe0, 0x81, 0xcc, 0xd1, 0x3f, 0x71, 0x87, 0xfd, 0xee, 0xd0, 0x31, 0xbf, 0x3a,
	0x31, 0xed, 0x8e, 0xa9, 0x56, 0xd1, 0x67, 0xa0, 0x5d, 0x27, 0x02, 0x9b, 0xc7, 0xba, 0x65, 0x5b,
	0xf6, 0xeb, 0xa1, 0x63, 0xfd, 0xd8, 0x54, 0x6b, 0xe8, 0x21, 0xb4, 0x65, 0x3e, 0xd7, 0x3a, 0x36,
	0x87, 0x5d, 0xdd, 0xea, 0x9d, 0x60, 0x53, 0xad, 0x97, 0x97, 0xc1, 0xe6, 0x71, 0x9f, 0xee, 0x37,
	0x65, 0x68, 0xa0, 0xcf, 0xe1, 0xf9, 0x75, 0xcb, 0xb0, 0xcf, 0x61, 0xba, 0x6b, 0xf5, 0xed, 0xa1,
	0xa1, 0xbb, 0x26, 0x95, 0xaa, 0xae, 0xa0, 0xe7, 0xf0, 0xe9, 0xcd, 0xdb, 0xc2, 0x66, 0xd7, 0xc4,
	0x4c, 0xf9, 0xd5, 0xf2, 0xfe, 0x4d, 0xc3, 0x72, 0x87, 0x76, 0xdf, 0x1d, 0xea, 0xbd, 0x5e, 0xff,
	0xad, 0x69, 0xa8, 0x4d, 0xf4, 0x08, 0x3e, 0x91, 0x39, 0xf4, 0x63, 0xd3, 0x36, 0x32, 0xb5, 0x00,
	0x7d, 0x02, 0x77, 0x8b, 0x96, 0x77, 0x87, 0xdd, 0xfe, 0x89, 0x6d, 0xa8, 0xad, 0x9b, 0x6c, 0x3b,
	0xd0, 0xb1, 0xfb, 0x8e, 0xda, 0x76, 0xad, 0x2c, 0x5b, 0x1c, 0x0c, 0xeb, 0xb6, 0x1b, 0xea, 0x3a,
	0xfa, 0x14, 0x9e, 0x94, 0xc8, 0xaf, 0x2d, 0x7b, 0xd8, 0x39, 0x34, 0x3b, 0x47, 0x4c, 0x03, 0xd3,
	0x50, 0x6f, 0x97, 0xb7, 0x7a, 0x6c, 0x39, 0x0e, 0x35, 0xfa, 0x6b, 0xd3, 0x36, 0xb1, 0xde, 0x1b,
	0xea, 0x9d, 0x4e, 0xff, 0xc4, 0x76, 0xd5, 0x0d, 0xf4, 0x18, 0xb6, 0x8b, 0xea, 0xb8, 0x26, 0xb6,
	0xf5, 0x1e, 0x1f, 0xaa, 0x6a, 0xf9, 0x7c, 0x52, 0x75, 0xd9, 0xe9, 0x6d, 0x96, 0x75, 0xc9, 0x36,
	0x63, 0x62, 0xc7, 0x72, 0x5c, 0x66, 0x4d, 0x74, 0x93, 0x08, 0xf7, 0xdd, 0xc0, 0x54, 0xef, 0x94,
	0xa9, 0x8e, 0xd9, 0xeb, 0x0e, 0x5d, 0xac, 0x1b, 0x96, 0xfd, 0x5a, 0xdd, 0x42, 0xfb, 0xb0, 0x57,
	0x9c, 0xeb, 0x9c, 0x74, 0xbb, 0x56, 0xc7, 0x32, 0x6d, 0x77, 0xd8, 0x3d, 0xb1, 0x0d, 0x67, 0xe8,
	0xf6, 0x87, 0x03, 0xfd, 0xdd, 0xb0, 0x6b, 0x9a, 0x8e, 0x7a, 0x77, 0xef, 0x0f, 0x14, 0x68, 0x49,
	0xcd, 0x3f, 0x2a, 0xbd, 0x73, 0xa8, 0x5b, 0xf6, 0x50, 0x7c, 0xc1, 0x2c, 0xc6, 0xe8, 0x23, 0xf8,
	0xa4, 0x40, 0x35, 0x2c, 0xa7, 0xd3, 0xb7, 0x6d, 0xfe, 0xe1, 0x53, 0x41, 0xdb, 0x70, 0xaf, 0x40,
	0xc6, 0xe6, 0xa0, 0xa7, 0xbf, 0xa3, 0x8a, 0x55, 0x96, 0x68, 0xf9, 0xbc, 0xea, 0xde, 0x7f, 0x2b,
	0xd0, 0x92, 0x0a, 0x70, 0xaa, 0x84, 0x30, 0xf8, 0xf0, 0x9a, 0x2f, 0x31, 0xdb, 0x70, 0xaf, 0x40,
	0xa5, 0x7b, 0xc4, 0x3a, 0x35, 0x9d, 0x82, 0x1e, 0xc0, 0xfd, 0x02, 0xcd, 0x31, 0x5d, 0xb7, 0x67,
	0x1e, 0x9b, 0xb6, 0xab, 0x56, 0xd0, 0x7d, 0xb8, 0x53, 0x20, 0x72, 0x4f, 0x50, 0xab, 0x34, 0x29,
	0x15, 0x08, 0xe2, 0xd4, 0xd5, 0x1a, 0x7a, 0x06, 0x3b, 0x05, 0x0a, 0xb5, 0xda, 0xd0, 0xb2, 0xbb,
	0x58, 0x77, 0x5c, 0x7c, 0xd2, 0x71, 0xb3, 0xa8, 0x5b, 0xe6, 0xea, 0x59, 0x5f, 0x9d, 0x58, 0x86,
	0xe5, 0xbe, 0xe3, 0x5f, 0x84, 0x97, 0x19, 0x8e, 0xf5, 0x23, 0x13, 0xab, 0x2b, 0x7b, 0x7f, 0x53,
	0x85, 0x35, 0xb9, 0x88, 0xa7, 0x56, 0x76, 0xb1, 0x6e, 0x3b, 0x5d, 0x13, 0x5f, 0xb7, 0xff, 0x7b,
	0x80, 0x8a, 0xe4, 0x5e, 0xdf, 0x71, 0x54, 0x05, 0xdd, 0x85, 0xcd, 0x22, 0xfe, 0xd6, 0xb2, 0xf9,
	0xae, 0x8b, 0x30, 0x0b, 0x0c, 0xb5, 0x4a, 0xed, 0x58, 0x24, 0x1c, 0xbb, 0xc7, 0x5c, 0x56, 0x8d,
	0xc6, 0xe3, 0x32, 0x8d, 0xca, 0xab, 0xd3, 0xc3, 0x29, 0x91, 0x78, 0x40, 0xf5, 0xfa, 0x6f, 0xd5,
	0xc6, 0xb2, 0xee, 0x82, 0x7a, 0x68, 0xbd, 0x3e, 0x54, 0x57, 0xa8, 0x3d, 0xaf, 0x25, 0x77, 0xfa,
	0x76, 0xd7, 0x72, 0x3a, 0x3a, 0xf5, 0x87, 0x55, 0xf6, 0x65, 0xad, 0xc4, 0x75, 0x64, 0x62, 0x6a,
	0x35, 0xea, 0xba, 0x6a, 0x93, 0x86, 0xd1, 0x4d, 0x0c, 0xd8, 0xec, 0x98, 0xd6, 0x1b, 0x9a, 0x53,
	0x76, 0xe1, 0x59, 0x91, 0xa9, 0x78, 0x6e, 0x99, 0xb8, 0xd6, 0xb2, 0xb8, 0xec, 0xec, 0x32, 0xa6,
	0xb5, 0xbd, 0x3f, 0x52, 0x60, 0x73, 0xe9, 0x76, 0xa4, 0x53, 0xed, 0x3e, 0xbd, 0xeb, 0xac, 0xd7,
	0xb6, 0xce, 0xc4, 0x1e, 0x59, 0xb6, 0x51, 0x3a, 0xb1, 0xa7, 0xf0, 0xe8, 0x3a, 0x26, 0xdd, 0x71,
	0x4c, 0x77, 0x68, 0x9b, 0x6f, 0x55, 0x85, 0x2a, 0x7b, 0x33, 0xcb, 0x5b, 0xcb, 0x3d, 0x34, 0xb0,
	0xfe, 0x56, 0xef, 0xa9, 0x95, 0x83, 0xa7, 0x3f, 0x7e, 0x42, 0xab, 0x12, 0x76, 0x5d, 0xb3, 0xff,
	0x26, 0x1b, 0x85, 0xd3, 0x7d, 0x9f, 0xff, 0x73, 0xda, 0x4b, 0x06, 0x9c, 0x36, 0xd8, 0x9f, 0x5f,
	0xfd, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x5c, 0x67, 0x8c, 0xb7, 0x26, 0x00, 0x00,
}
