// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/markets.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ContinuousTrading struct {
	TickSize             uint64   `protobuf:"varint,1,opt,name=tickSize,proto3" json:"tickSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContinuousTrading) Reset()         { *m = ContinuousTrading{} }
func (m *ContinuousTrading) String() string { return proto.CompactTextString(m) }
func (*ContinuousTrading) ProtoMessage()    {}
func (*ContinuousTrading) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef38c4b9a7594dbd, []int{0}
}

func (m *ContinuousTrading) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContinuousTrading.Unmarshal(m, b)
}
func (m *ContinuousTrading) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContinuousTrading.Marshal(b, m, deterministic)
}
func (m *ContinuousTrading) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContinuousTrading.Merge(m, src)
}
func (m *ContinuousTrading) XXX_Size() int {
	return xxx_messageInfo_ContinuousTrading.Size(m)
}
func (m *ContinuousTrading) XXX_DiscardUnknown() {
	xxx_messageInfo_ContinuousTrading.DiscardUnknown(m)
}

var xxx_messageInfo_ContinuousTrading proto.InternalMessageInfo

func (m *ContinuousTrading) GetTickSize() uint64 {
	if m != nil {
		return m.TickSize
	}
	return 0
}

type DiscreteTrading struct {
	Duration             int64    `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscreteTrading) Reset()         { *m = DiscreteTrading{} }
func (m *DiscreteTrading) String() string { return proto.CompactTextString(m) }
func (*DiscreteTrading) ProtoMessage()    {}
func (*DiscreteTrading) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef38c4b9a7594dbd, []int{1}
}

func (m *DiscreteTrading) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscreteTrading.Unmarshal(m, b)
}
func (m *DiscreteTrading) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscreteTrading.Marshal(b, m, deterministic)
}
func (m *DiscreteTrading) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscreteTrading.Merge(m, src)
}
func (m *DiscreteTrading) XXX_Size() int {
	return xxx_messageInfo_DiscreteTrading.Size(m)
}
func (m *DiscreteTrading) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscreteTrading.DiscardUnknown(m)
}

var xxx_messageInfo_DiscreteTrading proto.InternalMessageInfo

func (m *DiscreteTrading) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type Future struct {
	Maturity string `protobuf:"bytes,1,opt,name=maturity,proto3" json:"maturity,omitempty"`
	Asset    string `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	// Types that are valid to be assigned to Oracle:
	//	*Future_EthereumEvent
	Oracle               isFuture_Oracle `protobuf_oneof:"oracle"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Future) Reset()         { *m = Future{} }
func (m *Future) String() string { return proto.CompactTextString(m) }
func (*Future) ProtoMessage()    {}
func (*Future) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef38c4b9a7594dbd, []int{2}
}

func (m *Future) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Future.Unmarshal(m, b)
}
func (m *Future) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Future.Marshal(b, m, deterministic)
}
func (m *Future) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Future.Merge(m, src)
}
func (m *Future) XXX_Size() int {
	return xxx_messageInfo_Future.Size(m)
}
func (m *Future) XXX_DiscardUnknown() {
	xxx_messageInfo_Future.DiscardUnknown(m)
}

var xxx_messageInfo_Future proto.InternalMessageInfo

func (m *Future) GetMaturity() string {
	if m != nil {
		return m.Maturity
	}
	return ""
}

func (m *Future) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type isFuture_Oracle interface {
	isFuture_Oracle()
}

type Future_EthereumEvent struct {
	EthereumEvent *EthereumEvent `protobuf:"bytes,100,opt,name=ethereumEvent,proto3,oneof"`
}

func (*Future_EthereumEvent) isFuture_Oracle() {}

func (m *Future) GetOracle() isFuture_Oracle {
	if m != nil {
		return m.Oracle
	}
	return nil
}

func (m *Future) GetEthereumEvent() *EthereumEvent {
	if x, ok := m.GetOracle().(*Future_EthereumEvent); ok {
		return x.EthereumEvent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Future) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Future_EthereumEvent)(nil),
	}
}

type EthereumEvent struct {
	ContractID           string   `protobuf:"bytes,1,opt,name=contractID,proto3" json:"contractID,omitempty"`
	Event                string   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumEvent) Reset()         { *m = EthereumEvent{} }
func (m *EthereumEvent) String() string { return proto.CompactTextString(m) }
func (*EthereumEvent) ProtoMessage()    {}
func (*EthereumEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef38c4b9a7594dbd, []int{3}
}

func (m *EthereumEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumEvent.Unmarshal(m, b)
}
func (m *EthereumEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumEvent.Marshal(b, m, deterministic)
}
func (m *EthereumEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumEvent.Merge(m, src)
}
func (m *EthereumEvent) XXX_Size() int {
	return xxx_messageInfo_EthereumEvent.Size(m)
}
func (m *EthereumEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumEvent.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumEvent proto.InternalMessageInfo

func (m *EthereumEvent) GetContractID() string {
	if m != nil {
		return m.ContractID
	}
	return ""
}

func (m *EthereumEvent) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

type InstrumentMetadata struct {
	Tags                 []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstrumentMetadata) Reset()         { *m = InstrumentMetadata{} }
func (m *InstrumentMetadata) String() string { return proto.CompactTextString(m) }
func (*InstrumentMetadata) ProtoMessage()    {}
func (*InstrumentMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef38c4b9a7594dbd, []int{4}
}

func (m *InstrumentMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstrumentMetadata.Unmarshal(m, b)
}
func (m *InstrumentMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstrumentMetadata.Marshal(b, m, deterministic)
}
func (m *InstrumentMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstrumentMetadata.Merge(m, src)
}
func (m *InstrumentMetadata) XXX_Size() int {
	return xxx_messageInfo_InstrumentMetadata.Size(m)
}
func (m *InstrumentMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_InstrumentMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_InstrumentMetadata proto.InternalMessageInfo

func (m *InstrumentMetadata) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Instrument struct {
	Id       string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code     string              `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name     string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Metadata *InstrumentMetadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Types that are valid to be assigned to Product:
	//	*Instrument_Future
	Product              isInstrument_Product `protobuf_oneof:"product"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Instrument) Reset()         { *m = Instrument{} }
func (m *Instrument) String() string { return proto.CompactTextString(m) }
func (*Instrument) ProtoMessage()    {}
func (*Instrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef38c4b9a7594dbd, []int{5}
}

func (m *Instrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instrument.Unmarshal(m, b)
}
func (m *Instrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instrument.Marshal(b, m, deterministic)
}
func (m *Instrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instrument.Merge(m, src)
}
func (m *Instrument) XXX_Size() int {
	return xxx_messageInfo_Instrument.Size(m)
}
func (m *Instrument) XXX_DiscardUnknown() {
	xxx_messageInfo_Instrument.DiscardUnknown(m)
}

var xxx_messageInfo_Instrument proto.InternalMessageInfo

func (m *Instrument) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instrument) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Instrument) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instrument) GetMetadata() *InstrumentMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type isInstrument_Product interface {
	isInstrument_Product()
}

type Instrument_Future struct {
	Future *Future `protobuf:"bytes,100,opt,name=future,proto3,oneof"`
}

func (*Instrument_Future) isInstrument_Product() {}

func (m *Instrument) GetProduct() isInstrument_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *Instrument) GetFuture() *Future {
	if x, ok := m.GetProduct().(*Instrument_Future); ok {
		return x.Future
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Instrument) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Instrument_Future)(nil),
	}
}

type BuiltinFutures struct {
	HistoricVolatility   float64  `protobuf:"fixed64,1,opt,name=historicVolatility,proto3" json:"historicVolatility,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuiltinFutures) Reset()         { *m = BuiltinFutures{} }
func (m *BuiltinFutures) String() string { return proto.CompactTextString(m) }
func (*BuiltinFutures) ProtoMessage()    {}
func (*BuiltinFutures) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef38c4b9a7594dbd, []int{6}
}

func (m *BuiltinFutures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuiltinFutures.Unmarshal(m, b)
}
func (m *BuiltinFutures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuiltinFutures.Marshal(b, m, deterministic)
}
func (m *BuiltinFutures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuiltinFutures.Merge(m, src)
}
func (m *BuiltinFutures) XXX_Size() int {
	return xxx_messageInfo_BuiltinFutures.Size(m)
}
func (m *BuiltinFutures) XXX_DiscardUnknown() {
	xxx_messageInfo_BuiltinFutures.DiscardUnknown(m)
}

var xxx_messageInfo_BuiltinFutures proto.InternalMessageInfo

func (m *BuiltinFutures) GetHistoricVolatility() float64 {
	if m != nil {
		return m.HistoricVolatility
	}
	return 0
}

type TradableInstrument struct {
	Instrument *Instrument `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	// Types that are valid to be assigned to RiskModel:
	//	*TradableInstrument_BuiltinFutures
	RiskModel            isTradableInstrument_RiskModel `protobuf_oneof:"riskModel"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TradableInstrument) Reset()         { *m = TradableInstrument{} }
func (m *TradableInstrument) String() string { return proto.CompactTextString(m) }
func (*TradableInstrument) ProtoMessage()    {}
func (*TradableInstrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef38c4b9a7594dbd, []int{7}
}

func (m *TradableInstrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradableInstrument.Unmarshal(m, b)
}
func (m *TradableInstrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradableInstrument.Marshal(b, m, deterministic)
}
func (m *TradableInstrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradableInstrument.Merge(m, src)
}
func (m *TradableInstrument) XXX_Size() int {
	return xxx_messageInfo_TradableInstrument.Size(m)
}
func (m *TradableInstrument) XXX_DiscardUnknown() {
	xxx_messageInfo_TradableInstrument.DiscardUnknown(m)
}

var xxx_messageInfo_TradableInstrument proto.InternalMessageInfo

func (m *TradableInstrument) GetInstrument() *Instrument {
	if m != nil {
		return m.Instrument
	}
	return nil
}

type isTradableInstrument_RiskModel interface {
	isTradableInstrument_RiskModel()
}

type TradableInstrument_BuiltinFutures struct {
	BuiltinFutures *BuiltinFutures `protobuf:"bytes,100,opt,name=builtinFutures,proto3,oneof"`
}

func (*TradableInstrument_BuiltinFutures) isTradableInstrument_RiskModel() {}

func (m *TradableInstrument) GetRiskModel() isTradableInstrument_RiskModel {
	if m != nil {
		return m.RiskModel
	}
	return nil
}

func (m *TradableInstrument) GetBuiltinFutures() *BuiltinFutures {
	if x, ok := m.GetRiskModel().(*TradableInstrument_BuiltinFutures); ok {
		return x.BuiltinFutures
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TradableInstrument) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TradableInstrument_BuiltinFutures)(nil),
	}
}

type Market struct {
	Id                 string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TradableInstrument *TradableInstrument `protobuf:"bytes,2,opt,name=tradableInstrument,proto3" json:"tradableInstrument,omitempty"`
	DecimalPlaces      uint64              `protobuf:"varint,3,opt,name=decimalPlaces,proto3" json:"decimalPlaces,omitempty"`
	// Types that are valid to be assigned to TradingMode:
	//	*Market_Continuous
	//	*Market_Discrete
	TradingMode          isMarket_TradingMode `protobuf_oneof:"tradingMode"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Market) Reset()         { *m = Market{} }
func (m *Market) String() string { return proto.CompactTextString(m) }
func (*Market) ProtoMessage()    {}
func (*Market) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef38c4b9a7594dbd, []int{8}
}

func (m *Market) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Market.Unmarshal(m, b)
}
func (m *Market) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Market.Marshal(b, m, deterministic)
}
func (m *Market) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Market.Merge(m, src)
}
func (m *Market) XXX_Size() int {
	return xxx_messageInfo_Market.Size(m)
}
func (m *Market) XXX_DiscardUnknown() {
	xxx_messageInfo_Market.DiscardUnknown(m)
}

var xxx_messageInfo_Market proto.InternalMessageInfo

func (m *Market) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Market) GetTradableInstrument() *TradableInstrument {
	if m != nil {
		return m.TradableInstrument
	}
	return nil
}

func (m *Market) GetDecimalPlaces() uint64 {
	if m != nil {
		return m.DecimalPlaces
	}
	return 0
}

type isMarket_TradingMode interface {
	isMarket_TradingMode()
}

type Market_Continuous struct {
	Continuous *ContinuousTrading `protobuf:"bytes,100,opt,name=continuous,proto3,oneof"`
}

type Market_Discrete struct {
	Discrete *DiscreteTrading `protobuf:"bytes,101,opt,name=discrete,proto3,oneof"`
}

func (*Market_Continuous) isMarket_TradingMode() {}

func (*Market_Discrete) isMarket_TradingMode() {}

func (m *Market) GetTradingMode() isMarket_TradingMode {
	if m != nil {
		return m.TradingMode
	}
	return nil
}

func (m *Market) GetContinuous() *ContinuousTrading {
	if x, ok := m.GetTradingMode().(*Market_Continuous); ok {
		return x.Continuous
	}
	return nil
}

func (m *Market) GetDiscrete() *DiscreteTrading {
	if x, ok := m.GetTradingMode().(*Market_Discrete); ok {
		return x.Discrete
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Market) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Market_Continuous)(nil),
		(*Market_Discrete)(nil),
	}
}

func init() {
	proto.RegisterType((*ContinuousTrading)(nil), "vega.ContinuousTrading")
	proto.RegisterType((*DiscreteTrading)(nil), "vega.DiscreteTrading")
	proto.RegisterType((*Future)(nil), "vega.Future")
	proto.RegisterType((*EthereumEvent)(nil), "vega.EthereumEvent")
	proto.RegisterType((*InstrumentMetadata)(nil), "vega.InstrumentMetadata")
	proto.RegisterType((*Instrument)(nil), "vega.Instrument")
	proto.RegisterType((*BuiltinFutures)(nil), "vega.BuiltinFutures")
	proto.RegisterType((*TradableInstrument)(nil), "vega.TradableInstrument")
	proto.RegisterType((*Market)(nil), "vega.Market")
}

func init() { proto.RegisterFile("proto/markets.proto", fileDescriptor_ef38c4b9a7594dbd) }

var fileDescriptor_ef38c4b9a7594dbd = []byte{
	// 537 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x6d, 0xba, 0xa5, 0xb4, 0x53, 0x5a, 0xc0, 0xbb, 0x88, 0x88, 0x03, 0x94, 0x08, 0xa1, 0x5e,
	0x68, 0xd1, 0x2e, 0x17, 0x84, 0x84, 0x50, 0xd8, 0xa2, 0xec, 0xa1, 0x12, 0x32, 0x88, 0x03, 0x37,
	0x37, 0x1e, 0xba, 0x56, 0x93, 0x78, 0x65, 0x4f, 0x56, 0x82, 0x1b, 0x27, 0x7e, 0x00, 0xbf, 0x83,
	0xff, 0x88, 0x62, 0x87, 0x90, 0xb6, 0x7b, 0x8a, 0xdf, 0xf8, 0xbd, 0xf8, 0xcd, 0x17, 0x1c, 0x5f,
	0x19, 0x4d, 0x7a, 0x91, 0x0b, 0xb3, 0x45, 0xb2, 0x73, 0x87, 0x58, 0xef, 0x1a, 0x37, 0x22, 0x5a,
	0xc0, 0xfd, 0xf7, 0xba, 0x20, 0x55, 0x94, 0xba, 0xb4, 0x9f, 0x8d, 0x90, 0xaa, 0xd8, 0xb0, 0x47,
	0x30, 0x20, 0x95, 0x6e, 0x3f, 0xa9, 0x1f, 0x18, 0x06, 0xd3, 0x60, 0xd6, 0xe3, 0x0d, 0x8e, 0x5e,
	0xc0, 0xdd, 0x73, 0x65, 0x53, 0x83, 0x84, 0x2d, 0xba, 0x2c, 0x8d, 0x20, 0xa5, 0x0b, 0x47, 0x3f,
	0xe2, 0x0d, 0x8e, 0x7e, 0x06, 0xd0, 0xff, 0x50, 0x52, 0x69, 0xb0, 0xa2, 0xe5, 0x82, 0x4a, 0xa3,
	0xe8, 0xbb, 0xa3, 0x0d, 0x79, 0x83, 0xd9, 0x09, 0xdc, 0x12, 0xd6, 0x22, 0x85, 0x5d, 0x77, 0xe1,
	0x01, 0x7b, 0x03, 0x63, 0xa4, 0x4b, 0x34, 0x58, 0xe6, 0xcb, 0x6b, 0x2c, 0x28, 0x94, 0xd3, 0x60,
	0x36, 0x3a, 0x3d, 0x9e, 0x57, 0xd6, 0xe7, 0xcb, 0xf6, 0x55, 0xd2, 0xe1, 0xbb, 0xdc, 0x78, 0x00,
	0x7d, 0x6d, 0x44, 0x9a, 0x61, 0xb4, 0x84, 0xf1, 0x0e, 0x97, 0x3d, 0x06, 0x48, 0x75, 0x41, 0x46,
	0xa4, 0x74, 0x71, 0x5e, 0x7b, 0x69, 0x45, 0x2a, 0x37, 0xe8, 0xde, 0xab, 0xdd, 0x38, 0x10, 0xcd,
	0x80, 0x5d, 0x14, 0x96, 0x4c, 0x99, 0x63, 0x41, 0x2b, 0x24, 0x21, 0x05, 0x09, 0xc6, 0xa0, 0x47,
	0x62, 0x63, 0xc3, 0x60, 0x7a, 0x34, 0x1b, 0x72, 0x77, 0x8e, 0xfe, 0x04, 0x00, 0xff, 0xa9, 0x6c,
	0x02, 0x5d, 0x25, 0xeb, 0x67, 0xba, 0x4a, 0x56, 0x92, 0x54, 0x4b, 0xac, 0xff, 0xee, 0xce, 0x55,
	0xac, 0x10, 0x39, 0x86, 0x47, 0x3e, 0x56, 0x9d, 0xd9, 0x2b, 0x18, 0xe4, 0xf5, 0x33, 0x61, 0xcf,
	0x65, 0x1e, 0xfa, 0xcc, 0x0f, 0x6d, 0xf0, 0x86, 0xc9, 0x9e, 0x43, 0xff, 0x9b, 0x2b, 0x78, 0x5d,
	0xad, 0x3b, 0x5e, 0xe3, 0x9b, 0x90, 0x74, 0x78, 0x7d, 0x1b, 0x0f, 0xe1, 0xf6, 0x95, 0xd1, 0xb2,
	0x4c, 0x29, 0x7a, 0x07, 0x93, 0xb8, 0x54, 0x19, 0xa9, 0xc2, 0xb3, 0x2c, 0x9b, 0x03, 0xbb, 0x54,
	0x96, 0xb4, 0x51, 0xe9, 0x17, 0x9d, 0x09, 0x52, 0xd9, 0xbf, 0xae, 0x05, 0xfc, 0x86, 0x9b, 0xe8,
	0x77, 0x00, 0xac, 0x1a, 0x07, 0xb1, 0xce, 0xb0, 0x95, 0xf9, 0x4b, 0x00, 0xd5, 0x20, 0x27, 0x1f,
	0x9d, 0xde, 0xdb, 0xcf, 0x81, 0xb7, 0x38, 0xec, 0x2d, 0x4c, 0xd6, 0x3b, 0x56, 0xea, 0x2c, 0x4e,
	0xbc, 0x6a, 0xd7, 0x66, 0xd2, 0xe1, 0x7b, 0xec, 0x78, 0x04, 0x43, 0xa3, 0xec, 0x76, 0xa5, 0x25,
	0x66, 0xd1, 0xaf, 0x2e, 0xf4, 0x57, 0x6e, 0xe8, 0x0f, 0x7a, 0x90, 0x00, 0xa3, 0x03, 0xbf, 0xae,
	0x23, 0x4d, 0x95, 0x0f, 0xf3, 0xe1, 0x37, 0x68, 0xd8, 0x33, 0x18, 0x4b, 0x4c, 0x55, 0x2e, 0xb2,
	0x8f, 0x99, 0x48, 0xd1, 0xba, 0x16, 0xf6, 0xf8, 0x6e, 0x90, 0xbd, 0xf6, 0x23, 0xe7, 0xf7, 0xac,
	0xce, 0xe9, 0xa1, 0x7f, 0xe7, 0x60, 0xff, 0x92, 0x0e, 0x6f, 0x91, 0xd9, 0x19, 0x0c, 0x64, 0xbd,
	0x71, 0x21, 0x3a, 0xe1, 0x03, 0x2f, 0xdc, 0xdb, 0xc3, 0xa4, 0xc3, 0x1b, 0x62, 0x3c, 0x86, 0x11,
	0xf9, 0x70, 0x55, 0x8a, 0xf8, 0xe9, 0xd7, 0x27, 0xd5, 0x98, 0x39, 0x9d, 0x5b, 0xff, 0x54, 0x67,
	0x73, 0xa5, 0x17, 0x15, 0x5e, 0xb8, 0xc0, 0xba, 0xef, 0x3e, 0x67, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xca, 0x4f, 0xac, 0xe0, 0x2d, 0x04, 0x00, 0x00,
}
