syntax = "proto3";

package vega;
option go_package = "code.vegaprotocol.io/vega/proto";

// The vega representation of an external asset
message Asset {
  // The vega internal ID of the asset
  string ID = 1;
  // The name of the asset (e.g: Great British Pound)
  string name = 2;
  // The symbol of the asset (e.g: GBP)
  string symbol = 3;
  // The total circulating supply for the asset
  string totalSupply = 4;
  // The number of decimal / precision handled by this asset
  uint64 decimals = 5;
  // The definition of the external source for this asset
  AssetSource source = 7;
}

message AssetSource {
  oneof source {
    BuiltinAsset builtinAsset = 1;
    ERC20 erc20 = 2;
  }
}

// A vega internal asset
message BuiltinAsset {
  // The name of the asset (e.g: Great British Pound)
  string name = 1;
  // The symbol of the asset (e.g: GBP)
  string symbol = 2;
  // The total circulating supply for the asset
  string totalSupply = 3;
  // The number of decimal / precision handled by this asset
  uint64 decimals = 4;
  // This is the maximum amount that can be requested by a party through the builtin asset faucet at a time
  string maxFaucetAmountMint = 5;
}

// An ERC20 token based asset, living on the ethereum network
message ERC20 {
  // The address of the contract for the token, on the ethereum network
  string contractAddress = 1;
}

message DevAssets {
  repeated AssetSource sources = 1;
}