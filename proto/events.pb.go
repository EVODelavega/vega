// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/events.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BusEvent_Type int32

const (
	BusEvent_TYPE_UNSPECIFIED    BusEvent_Type = 0
	BusEvent_TYPE_ALL            BusEvent_Type = 1
	BusEvent_TIME_UPDATE         BusEvent_Type = 2
	BusEvent_TRANSFER_RESPONSES  BusEvent_Type = 3
	BusEvent_POSITION_RESOLUTION BusEvent_Type = 4
	BusEvent_ORDER               BusEvent_Type = 5
	BusEvent_ACCOUNT             BusEvent_Type = 6
	BusEvent_PARTY               BusEvent_Type = 7
	BusEvent_TRADE               BusEvent_Type = 8
	BusEvent_MARGIN_LEVELS       BusEvent_Type = 9
	BusEvent_PROPOSAL            BusEvent_Type = 10
	BusEvent_VOTE                BusEvent_Type = 11
	BusEvent_MARKET_DATA         BusEvent_Type = 12
	BusEvent_NODE_SIGNATURE      BusEvent_Type = 13
	BusEvent_LOSS_SOCIALIZATION  BusEvent_Type = 14
	BusEvent_SETTLE_POSITION     BusEvent_Type = 15
	BusEvent_SETTLE_DISTRESSED   BusEvent_Type = 16
	BusEvent_MARKET_CREATED      BusEvent_Type = 17
	BusEvent_ASSET               BusEvent_Type = 18
	BusEvent_MARKET_TICK         BusEvent_Type = 19
	BusEvent_MARKET              BusEvent_Type = 101
)

var BusEvent_Type_name = map[int32]string{
	0:   "TYPE_UNSPECIFIED",
	1:   "TYPE_ALL",
	2:   "TIME_UPDATE",
	3:   "TRANSFER_RESPONSES",
	4:   "POSITION_RESOLUTION",
	5:   "ORDER",
	6:   "ACCOUNT",
	7:   "PARTY",
	8:   "TRADE",
	9:   "MARGIN_LEVELS",
	10:  "PROPOSAL",
	11:  "VOTE",
	12:  "MARKET_DATA",
	13:  "NODE_SIGNATURE",
	14:  "LOSS_SOCIALIZATION",
	15:  "SETTLE_POSITION",
	16:  "SETTLE_DISTRESSED",
	17:  "MARKET_CREATED",
	18:  "ASSET",
	19:  "MARKET_TICK",
	101: "MARKET",
}

var BusEvent_Type_value = map[string]int32{
	"TYPE_UNSPECIFIED":    0,
	"TYPE_ALL":            1,
	"TIME_UPDATE":         2,
	"TRANSFER_RESPONSES":  3,
	"POSITION_RESOLUTION": 4,
	"ORDER":               5,
	"ACCOUNT":             6,
	"PARTY":               7,
	"TRADE":               8,
	"MARGIN_LEVELS":       9,
	"PROPOSAL":            10,
	"VOTE":                11,
	"MARKET_DATA":         12,
	"NODE_SIGNATURE":      13,
	"LOSS_SOCIALIZATION":  14,
	"SETTLE_POSITION":     15,
	"SETTLE_DISTRESSED":   16,
	"MARKET_CREATED":      17,
	"ASSET":               18,
	"MARKET_TICK":         19,
	"MARKET":              101,
}

func (x BusEvent_Type) String() string {
	return proto.EnumName(BusEvent_Type_name, int32(x))
}

func (BusEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{9, 0}
}

// MarketEvent - the common denominator for all market events
// interface has a method to return a string for logging
type MarketEvent struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Payload              string   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketEvent) Reset()         { *m = MarketEvent{} }
func (m *MarketEvent) String() string { return proto.CompactTextString(m) }
func (*MarketEvent) ProtoMessage()    {}
func (*MarketEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{0}
}

func (m *MarketEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketEvent.Unmarshal(m, b)
}
func (m *MarketEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketEvent.Marshal(b, m, deterministic)
}
func (m *MarketEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketEvent.Merge(m, src)
}
func (m *MarketEvent) XXX_Size() int {
	return xxx_messageInfo_MarketEvent.Size(m)
}
func (m *MarketEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MarketEvent proto.InternalMessageInfo

func (m *MarketEvent) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *MarketEvent) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// TimeUpdate - event containing the latest block time
type TimeUpdate struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeUpdate) Reset()         { *m = TimeUpdate{} }
func (m *TimeUpdate) String() string { return proto.CompactTextString(m) }
func (*TimeUpdate) ProtoMessage()    {}
func (*TimeUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{1}
}

func (m *TimeUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeUpdate.Unmarshal(m, b)
}
func (m *TimeUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeUpdate.Marshal(b, m, deterministic)
}
func (m *TimeUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeUpdate.Merge(m, src)
}
func (m *TimeUpdate) XXX_Size() int {
	return xxx_messageInfo_TimeUpdate.Size(m)
}
func (m *TimeUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_TimeUpdate proto.InternalMessageInfo

func (m *TimeUpdate) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// TransferResponses - a slice of transfer response objects
type TransferResponses struct {
	Responses            []*TransferResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TransferResponses) Reset()         { *m = TransferResponses{} }
func (m *TransferResponses) String() string { return proto.CompactTextString(m) }
func (*TransferResponses) ProtoMessage()    {}
func (*TransferResponses) Descriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{2}
}

func (m *TransferResponses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferResponses.Unmarshal(m, b)
}
func (m *TransferResponses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferResponses.Marshal(b, m, deterministic)
}
func (m *TransferResponses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferResponses.Merge(m, src)
}
func (m *TransferResponses) XXX_Size() int {
	return xxx_messageInfo_TransferResponses.Size(m)
}
func (m *TransferResponses) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferResponses.DiscardUnknown(m)
}

var xxx_messageInfo_TransferResponses proto.InternalMessageInfo

func (m *TransferResponses) GetResponses() []*TransferResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

type PositionResolution struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Distressed           int64    `protobuf:"varint,2,opt,name=distressed,proto3" json:"distressed,omitempty"`
	Closed               int64    `protobuf:"varint,3,opt,name=closed,proto3" json:"closed,omitempty"`
	MarkPrice            uint64   `protobuf:"varint,4,opt,name=markPrice,proto3" json:"markPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionResolution) Reset()         { *m = PositionResolution{} }
func (m *PositionResolution) String() string { return proto.CompactTextString(m) }
func (*PositionResolution) ProtoMessage()    {}
func (*PositionResolution) Descriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{3}
}

func (m *PositionResolution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionResolution.Unmarshal(m, b)
}
func (m *PositionResolution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionResolution.Marshal(b, m, deterministic)
}
func (m *PositionResolution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionResolution.Merge(m, src)
}
func (m *PositionResolution) XXX_Size() int {
	return xxx_messageInfo_PositionResolution.Size(m)
}
func (m *PositionResolution) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionResolution.DiscardUnknown(m)
}

var xxx_messageInfo_PositionResolution proto.InternalMessageInfo

func (m *PositionResolution) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *PositionResolution) GetDistressed() int64 {
	if m != nil {
		return m.Distressed
	}
	return 0
}

func (m *PositionResolution) GetClosed() int64 {
	if m != nil {
		return m.Closed
	}
	return 0
}

func (m *PositionResolution) GetMarkPrice() uint64 {
	if m != nil {
		return m.MarkPrice
	}
	return 0
}

// LossSocialization event
type LossSocialization struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LossSocialization) Reset()         { *m = LossSocialization{} }
func (m *LossSocialization) String() string { return proto.CompactTextString(m) }
func (*LossSocialization) ProtoMessage()    {}
func (*LossSocialization) Descriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{4}
}

func (m *LossSocialization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LossSocialization.Unmarshal(m, b)
}
func (m *LossSocialization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LossSocialization.Marshal(b, m, deterministic)
}
func (m *LossSocialization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LossSocialization.Merge(m, src)
}
func (m *LossSocialization) XXX_Size() int {
	return xxx_messageInfo_LossSocialization.Size(m)
}
func (m *LossSocialization) XXX_DiscardUnknown() {
	xxx_messageInfo_LossSocialization.DiscardUnknown(m)
}

var xxx_messageInfo_LossSocialization proto.InternalMessageInfo

func (m *LossSocialization) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *LossSocialization) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *LossSocialization) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type TradeSettlement struct {
	Size                 int64    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Price                uint64   `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeSettlement) Reset()         { *m = TradeSettlement{} }
func (m *TradeSettlement) String() string { return proto.CompactTextString(m) }
func (*TradeSettlement) ProtoMessage()    {}
func (*TradeSettlement) Descriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{5}
}

func (m *TradeSettlement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeSettlement.Unmarshal(m, b)
}
func (m *TradeSettlement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeSettlement.Marshal(b, m, deterministic)
}
func (m *TradeSettlement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeSettlement.Merge(m, src)
}
func (m *TradeSettlement) XXX_Size() int {
	return xxx_messageInfo_TradeSettlement.Size(m)
}
func (m *TradeSettlement) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeSettlement.DiscardUnknown(m)
}

var xxx_messageInfo_TradeSettlement proto.InternalMessageInfo

func (m *TradeSettlement) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *TradeSettlement) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type SettlePosition struct {
	MarketID             string             `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string             `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Price                uint64             `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	TradeSettlements     []*TradeSettlement `protobuf:"bytes,4,rep,name=tradeSettlements,proto3" json:"tradeSettlements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SettlePosition) Reset()         { *m = SettlePosition{} }
func (m *SettlePosition) String() string { return proto.CompactTextString(m) }
func (*SettlePosition) ProtoMessage()    {}
func (*SettlePosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{6}
}

func (m *SettlePosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettlePosition.Unmarshal(m, b)
}
func (m *SettlePosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettlePosition.Marshal(b, m, deterministic)
}
func (m *SettlePosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettlePosition.Merge(m, src)
}
func (m *SettlePosition) XXX_Size() int {
	return xxx_messageInfo_SettlePosition.Size(m)
}
func (m *SettlePosition) XXX_DiscardUnknown() {
	xxx_messageInfo_SettlePosition.DiscardUnknown(m)
}

var xxx_messageInfo_SettlePosition proto.InternalMessageInfo

func (m *SettlePosition) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *SettlePosition) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *SettlePosition) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *SettlePosition) GetTradeSettlements() []*TradeSettlement {
	if m != nil {
		return m.TradeSettlements
	}
	return nil
}

type SettleDistressed struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Margin               uint64   `protobuf:"varint,3,opt,name=margin,proto3" json:"margin,omitempty"`
	Price                uint64   `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleDistressed) Reset()         { *m = SettleDistressed{} }
func (m *SettleDistressed) String() string { return proto.CompactTextString(m) }
func (*SettleDistressed) ProtoMessage()    {}
func (*SettleDistressed) Descriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{7}
}

func (m *SettleDistressed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleDistressed.Unmarshal(m, b)
}
func (m *SettleDistressed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleDistressed.Marshal(b, m, deterministic)
}
func (m *SettleDistressed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleDistressed.Merge(m, src)
}
func (m *SettleDistressed) XXX_Size() int {
	return xxx_messageInfo_SettleDistressed.Size(m)
}
func (m *SettleDistressed) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleDistressed.DiscardUnknown(m)
}

var xxx_messageInfo_SettleDistressed proto.InternalMessageInfo

func (m *SettleDistressed) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *SettleDistressed) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *SettleDistressed) GetMargin() uint64 {
	if m != nil {
		return m.Margin
	}
	return 0
}

func (m *SettleDistressed) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type MarketTick struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketTick) Reset()         { *m = MarketTick{} }
func (m *MarketTick) String() string { return proto.CompactTextString(m) }
func (*MarketTick) ProtoMessage()    {}
func (*MarketTick) Descriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{8}
}

func (m *MarketTick) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketTick.Unmarshal(m, b)
}
func (m *MarketTick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketTick.Marshal(b, m, deterministic)
}
func (m *MarketTick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketTick.Merge(m, src)
}
func (m *MarketTick) XXX_Size() int {
	return xxx_messageInfo_MarketTick.Size(m)
}
func (m *MarketTick) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketTick.DiscardUnknown(m)
}

var xxx_messageInfo_MarketTick proto.InternalMessageInfo

func (m *MarketTick) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *MarketTick) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type BusEvent struct {
	ID   string        `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type BusEvent_Type `protobuf:"varint,2,opt,name=type,proto3,enum=vega.BusEvent_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*BusEvent_TimeUpdate
	//	*BusEvent_TransferResponses
	//	*BusEvent_PositionResolution
	//	*BusEvent_Order
	//	*BusEvent_Account
	//	*BusEvent_Party
	//	*BusEvent_Trade
	//	*BusEvent_MarginLevels
	//	*BusEvent_Proposal
	//	*BusEvent_Vote
	//	*BusEvent_MarketData
	//	*BusEvent_NodeSignature
	//	*BusEvent_LossSocialization
	//	*BusEvent_SettlePosition
	//	*BusEvent_SettleDistressed
	//	*BusEvent_MarketCreated
	//	*BusEvent_Asset
	//	*BusEvent_MarketTick
	//	*BusEvent_Market
	Event                isBusEvent_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BusEvent) Reset()         { *m = BusEvent{} }
func (m *BusEvent) String() string { return proto.CompactTextString(m) }
func (*BusEvent) ProtoMessage()    {}
func (*BusEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_499cf8c2dd86f7dd, []int{9}
}

func (m *BusEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BusEvent.Unmarshal(m, b)
}
func (m *BusEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BusEvent.Marshal(b, m, deterministic)
}
func (m *BusEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BusEvent.Merge(m, src)
}
func (m *BusEvent) XXX_Size() int {
	return xxx_messageInfo_BusEvent.Size(m)
}
func (m *BusEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_BusEvent.DiscardUnknown(m)
}

var xxx_messageInfo_BusEvent proto.InternalMessageInfo

func (m *BusEvent) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *BusEvent) GetType() BusEvent_Type {
	if m != nil {
		return m.Type
	}
	return BusEvent_TYPE_UNSPECIFIED
}

type isBusEvent_Event interface {
	isBusEvent_Event()
}

type BusEvent_TimeUpdate struct {
	TimeUpdate *TimeUpdate `protobuf:"bytes,101,opt,name=timeUpdate,proto3,oneof"`
}

type BusEvent_TransferResponses struct {
	TransferResponses *TransferResponses `protobuf:"bytes,102,opt,name=transferResponses,proto3,oneof"`
}

type BusEvent_PositionResolution struct {
	PositionResolution *PositionResolution `protobuf:"bytes,103,opt,name=positionResolution,proto3,oneof"`
}

type BusEvent_Order struct {
	Order *Order `protobuf:"bytes,104,opt,name=order,proto3,oneof"`
}

type BusEvent_Account struct {
	Account *Account `protobuf:"bytes,105,opt,name=account,proto3,oneof"`
}

type BusEvent_Party struct {
	Party *Party `protobuf:"bytes,106,opt,name=party,proto3,oneof"`
}

type BusEvent_Trade struct {
	Trade *Trade `protobuf:"bytes,107,opt,name=trade,proto3,oneof"`
}

type BusEvent_MarginLevels struct {
	MarginLevels *MarginLevels `protobuf:"bytes,108,opt,name=marginLevels,proto3,oneof"`
}

type BusEvent_Proposal struct {
	Proposal *Proposal `protobuf:"bytes,109,opt,name=proposal,proto3,oneof"`
}

type BusEvent_Vote struct {
	Vote *Vote `protobuf:"bytes,110,opt,name=vote,proto3,oneof"`
}

type BusEvent_MarketData struct {
	MarketData *MarketData `protobuf:"bytes,111,opt,name=marketData,proto3,oneof"`
}

type BusEvent_NodeSignature struct {
	NodeSignature *NodeSignature `protobuf:"bytes,112,opt,name=nodeSignature,proto3,oneof"`
}

type BusEvent_LossSocialization struct {
	LossSocialization *LossSocialization `protobuf:"bytes,113,opt,name=lossSocialization,proto3,oneof"`
}

type BusEvent_SettlePosition struct {
	SettlePosition *SettlePosition `protobuf:"bytes,114,opt,name=settlePosition,proto3,oneof"`
}

type BusEvent_SettleDistressed struct {
	SettleDistressed *SettleDistressed `protobuf:"bytes,115,opt,name=settleDistressed,proto3,oneof"`
}

type BusEvent_MarketCreated struct {
	MarketCreated *Market `protobuf:"bytes,116,opt,name=marketCreated,proto3,oneof"`
}

type BusEvent_Asset struct {
	Asset *Asset `protobuf:"bytes,117,opt,name=asset,proto3,oneof"`
}

type BusEvent_MarketTick struct {
	MarketTick *MarketTick `protobuf:"bytes,118,opt,name=marketTick,proto3,oneof"`
}

type BusEvent_Market struct {
	Market *MarketEvent `protobuf:"bytes,201,opt,name=market,proto3,oneof"`
}

func (*BusEvent_TimeUpdate) isBusEvent_Event() {}

func (*BusEvent_TransferResponses) isBusEvent_Event() {}

func (*BusEvent_PositionResolution) isBusEvent_Event() {}

func (*BusEvent_Order) isBusEvent_Event() {}

func (*BusEvent_Account) isBusEvent_Event() {}

func (*BusEvent_Party) isBusEvent_Event() {}

func (*BusEvent_Trade) isBusEvent_Event() {}

func (*BusEvent_MarginLevels) isBusEvent_Event() {}

func (*BusEvent_Proposal) isBusEvent_Event() {}

func (*BusEvent_Vote) isBusEvent_Event() {}

func (*BusEvent_MarketData) isBusEvent_Event() {}

func (*BusEvent_NodeSignature) isBusEvent_Event() {}

func (*BusEvent_LossSocialization) isBusEvent_Event() {}

func (*BusEvent_SettlePosition) isBusEvent_Event() {}

func (*BusEvent_SettleDistressed) isBusEvent_Event() {}

func (*BusEvent_MarketCreated) isBusEvent_Event() {}

func (*BusEvent_Asset) isBusEvent_Event() {}

func (*BusEvent_MarketTick) isBusEvent_Event() {}

func (*BusEvent_Market) isBusEvent_Event() {}

func (m *BusEvent) GetEvent() isBusEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *BusEvent) GetTimeUpdate() *TimeUpdate {
	if x, ok := m.GetEvent().(*BusEvent_TimeUpdate); ok {
		return x.TimeUpdate
	}
	return nil
}

func (m *BusEvent) GetTransferResponses() *TransferResponses {
	if x, ok := m.GetEvent().(*BusEvent_TransferResponses); ok {
		return x.TransferResponses
	}
	return nil
}

func (m *BusEvent) GetPositionResolution() *PositionResolution {
	if x, ok := m.GetEvent().(*BusEvent_PositionResolution); ok {
		return x.PositionResolution
	}
	return nil
}

func (m *BusEvent) GetOrder() *Order {
	if x, ok := m.GetEvent().(*BusEvent_Order); ok {
		return x.Order
	}
	return nil
}

func (m *BusEvent) GetAccount() *Account {
	if x, ok := m.GetEvent().(*BusEvent_Account); ok {
		return x.Account
	}
	return nil
}

func (m *BusEvent) GetParty() *Party {
	if x, ok := m.GetEvent().(*BusEvent_Party); ok {
		return x.Party
	}
	return nil
}

func (m *BusEvent) GetTrade() *Trade {
	if x, ok := m.GetEvent().(*BusEvent_Trade); ok {
		return x.Trade
	}
	return nil
}

func (m *BusEvent) GetMarginLevels() *MarginLevels {
	if x, ok := m.GetEvent().(*BusEvent_MarginLevels); ok {
		return x.MarginLevels
	}
	return nil
}

func (m *BusEvent) GetProposal() *Proposal {
	if x, ok := m.GetEvent().(*BusEvent_Proposal); ok {
		return x.Proposal
	}
	return nil
}

func (m *BusEvent) GetVote() *Vote {
	if x, ok := m.GetEvent().(*BusEvent_Vote); ok {
		return x.Vote
	}
	return nil
}

func (m *BusEvent) GetMarketData() *MarketData {
	if x, ok := m.GetEvent().(*BusEvent_MarketData); ok {
		return x.MarketData
	}
	return nil
}

func (m *BusEvent) GetNodeSignature() *NodeSignature {
	if x, ok := m.GetEvent().(*BusEvent_NodeSignature); ok {
		return x.NodeSignature
	}
	return nil
}

func (m *BusEvent) GetLossSocialization() *LossSocialization {
	if x, ok := m.GetEvent().(*BusEvent_LossSocialization); ok {
		return x.LossSocialization
	}
	return nil
}

func (m *BusEvent) GetSettlePosition() *SettlePosition {
	if x, ok := m.GetEvent().(*BusEvent_SettlePosition); ok {
		return x.SettlePosition
	}
	return nil
}

func (m *BusEvent) GetSettleDistressed() *SettleDistressed {
	if x, ok := m.GetEvent().(*BusEvent_SettleDistressed); ok {
		return x.SettleDistressed
	}
	return nil
}

func (m *BusEvent) GetMarketCreated() *Market {
	if x, ok := m.GetEvent().(*BusEvent_MarketCreated); ok {
		return x.MarketCreated
	}
	return nil
}

func (m *BusEvent) GetAsset() *Asset {
	if x, ok := m.GetEvent().(*BusEvent_Asset); ok {
		return x.Asset
	}
	return nil
}

func (m *BusEvent) GetMarketTick() *MarketTick {
	if x, ok := m.GetEvent().(*BusEvent_MarketTick); ok {
		return x.MarketTick
	}
	return nil
}

func (m *BusEvent) GetMarket() *MarketEvent {
	if x, ok := m.GetEvent().(*BusEvent_Market); ok {
		return x.Market
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BusEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BusEvent_TimeUpdate)(nil),
		(*BusEvent_TransferResponses)(nil),
		(*BusEvent_PositionResolution)(nil),
		(*BusEvent_Order)(nil),
		(*BusEvent_Account)(nil),
		(*BusEvent_Party)(nil),
		(*BusEvent_Trade)(nil),
		(*BusEvent_MarginLevels)(nil),
		(*BusEvent_Proposal)(nil),
		(*BusEvent_Vote)(nil),
		(*BusEvent_MarketData)(nil),
		(*BusEvent_NodeSignature)(nil),
		(*BusEvent_LossSocialization)(nil),
		(*BusEvent_SettlePosition)(nil),
		(*BusEvent_SettleDistressed)(nil),
		(*BusEvent_MarketCreated)(nil),
		(*BusEvent_Asset)(nil),
		(*BusEvent_MarketTick)(nil),
		(*BusEvent_Market)(nil),
	}
}

func init() {
	proto.RegisterEnum("vega.BusEvent_Type", BusEvent_Type_name, BusEvent_Type_value)
	proto.RegisterType((*MarketEvent)(nil), "vega.MarketEvent")
	proto.RegisterType((*TimeUpdate)(nil), "vega.TimeUpdate")
	proto.RegisterType((*TransferResponses)(nil), "vega.TransferResponses")
	proto.RegisterType((*PositionResolution)(nil), "vega.PositionResolution")
	proto.RegisterType((*LossSocialization)(nil), "vega.LossSocialization")
	proto.RegisterType((*TradeSettlement)(nil), "vega.TradeSettlement")
	proto.RegisterType((*SettlePosition)(nil), "vega.SettlePosition")
	proto.RegisterType((*SettleDistressed)(nil), "vega.SettleDistressed")
	proto.RegisterType((*MarketTick)(nil), "vega.MarketTick")
	proto.RegisterType((*BusEvent)(nil), "vega.BusEvent")
}

func init() { proto.RegisterFile("proto/events.proto", fileDescriptor_499cf8c2dd86f7dd) }

var fileDescriptor_499cf8c2dd86f7dd = []byte{
	// 1104 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0xdb, 0x46,
	0x13, 0xa5, 0x7e, 0x6c, 0xcb, 0x23, 0x5b, 0x5e, 0xad, 0x13, 0x67, 0x11, 0x7c, 0xf8, 0xea, 0xaa,
	0x17, 0x75, 0x8b, 0xc0, 0x29, 0xdc, 0x5c, 0x14, 0x08, 0x50, 0x80, 0x16, 0x37, 0x16, 0x1b, 0x49,
	0x14, 0x96, 0x94, 0x81, 0xe4, 0x46, 0x60, 0xa5, 0x8d, 0xcb, 0x5a, 0x12, 0x59, 0x2e, 0x2d, 0xc0,
	0x79, 0x80, 0xbe, 0x46, 0x2f, 0xfa, 0x34, 0x7d, 0x95, 0x3e, 0x45, 0xb1, 0xb3, 0x94, 0x44, 0x49,
	0x41, 0x0b, 0xe4, 0x4a, 0x3b, 0x67, 0xce, 0x0c, 0x0f, 0xe7, 0x67, 0x45, 0xa0, 0x49, 0x1a, 0x67,
	0xf1, 0x4b, 0xb9, 0x90, 0xf3, 0x4c, 0x5d, 0xa2, 0x41, 0xab, 0x0b, 0x79, 0x17, 0x3e, 0x3f, 0x35,
	0x9e, 0x59, 0x98, 0xde, 0xcb, 0xa5, 0xeb, 0x79, 0x4e, 0x0f, 0x95, 0x5a, 0x63, 0x67, 0x06, 0xbb,
	0x8b, 0x17, 0x32, 0x9d, 0x87, 0xf3, 0xb1, 0xcc, 0x71, 0x62, 0x70, 0x9d, 0xcc, 0x20, 0xad, 0x36,
	0xd4, 0x7b, 0x98, 0x8e, 0xeb, 0xc7, 0xd1, 0xe7, 0x50, 0x33, 0xd9, 0x5d, 0x87, 0x95, 0xce, 0x4b,
	0x17, 0x87, 0x62, 0x65, 0x53, 0x06, 0x07, 0x49, 0xf8, 0x38, 0x8d, 0xc3, 0x09, 0x2b, 0xa3, 0x6b,
	0x69, 0xb6, 0xbe, 0x05, 0x08, 0xa2, 0x99, 0x1c, 0x26, 0x93, 0x30, 0x93, 0xf4, 0x7f, 0x70, 0x98,
	0x45, 0x33, 0xa9, 0xb2, 0x70, 0x96, 0x60, 0x92, 0x8a, 0x58, 0x03, 0x2d, 0x17, 0x9a, 0x41, 0x1a,
	0xce, 0xd5, 0x07, 0x99, 0x0a, 0xa9, 0x92, 0x78, 0xae, 0xa4, 0xa2, 0xaf, 0xe0, 0x30, 0x5d, 0x1a,
	0xac, 0x74, 0x5e, 0xb9, 0xa8, 0x5f, 0x9d, 0x5d, 0xa2, 0xca, 0x6d, 0xae, 0x58, 0x13, 0x5b, 0xbf,
	0x97, 0x80, 0x0e, 0x62, 0x15, 0x65, 0x51, 0x3c, 0x17, 0x52, 0xc5, 0xd3, 0x07, 0x7d, 0xfa, 0xd7,
	0x77, 0xf8, 0x3f, 0xc0, 0x24, 0x52, 0x59, 0x2a, 0x95, 0x92, 0xe6, 0x35, 0x2a, 0xa2, 0x80, 0xd0,
	0x33, 0xd8, 0x1f, 0x4f, 0x63, 0xed, 0xab, 0xa0, 0x2f, 0xb7, 0xf4, 0x3b, 0xe9, 0x1c, 0x83, 0x34,
	0x1a, 0x4b, 0x56, 0x3d, 0x2f, 0x5d, 0x54, 0xc5, 0x1a, 0x68, 0x85, 0xd0, 0xec, 0xc6, 0x4a, 0xf9,
	0xf1, 0x38, 0x0a, 0xa7, 0xd1, 0xc7, 0xf0, 0x3f, 0x65, 0x60, 0x29, 0xd3, 0xec, 0xd1, 0x75, 0xd6,
	0xa5, 0x44, 0x53, 0x0b, 0x08, 0x67, 0xf1, 0xc3, 0x3c, 0x5b, 0x0a, 0x30, 0x56, 0xeb, 0x35, 0x9c,
	0x04, 0x69, 0x38, 0x91, 0xbe, 0xcc, 0xb2, 0xa9, 0x9c, 0xe9, 0x5e, 0x51, 0xa8, 0xaa, 0xe8, 0xa3,
	0xcc, 0x4b, 0x8c, 0x67, 0xfa, 0x04, 0xf6, 0x12, 0xd4, 0x58, 0x46, 0x8d, 0xc6, 0x68, 0xfd, 0x51,
	0x82, 0x86, 0x09, 0x5c, 0x96, 0xeb, 0x33, 0xd5, 0xad, 0xd2, 0x57, 0x0a, 0xe9, 0xa9, 0x0d, 0x24,
	0xdb, 0xd4, 0xa6, 0x58, 0x15, 0x9b, 0xf8, 0x74, 0xd5, 0xc4, 0xa2, 0x57, 0xec, 0xd0, 0x5b, 0x0b,
	0x20, 0xc6, 0x74, 0xd6, 0xbd, 0xf8, 0xec, 0x02, 0xce, 0xc2, 0xf4, 0x2e, 0x9a, 0xe7, 0x1a, 0x73,
	0x6b, 0x2d, 0xbd, 0x5a, 0xac, 0xcc, 0x77, 0x00, 0x66, 0xfc, 0x83, 0x68, 0x7c, 0x4f, 0x1b, 0x50,
	0x5e, 0x3d, 0xab, 0xec, 0x3a, 0xba, 0xc2, 0x7a, 0x70, 0xf3, 0x39, 0xc1, 0x73, 0xeb, 0xcf, 0x3a,
	0xd4, 0xae, 0x1f, 0x94, 0x59, 0x97, 0xed, 0x80, 0xaf, 0xa1, 0x9a, 0x3d, 0x26, 0x26, 0xa0, 0x71,
	0x75, 0x6a, 0xde, 0x7e, 0xc9, 0xbe, 0x0c, 0x1e, 0x13, 0x29, 0x90, 0x40, 0xaf, 0x00, 0xb2, 0xd5,
	0xc6, 0x30, 0x79, 0x5e, 0xba, 0xa8, 0x5f, 0x91, 0xbc, 0x58, 0x2b, 0xbc, 0x63, 0x89, 0x02, 0x8b,
	0xde, 0x40, 0x33, 0xdb, 0xde, 0x1c, 0xf6, 0x01, 0x43, 0x9f, 0x7d, 0x7a, 0x59, 0x54, 0xc7, 0x12,
	0xbb, 0x31, 0xf4, 0x27, 0xa0, 0xc9, 0xce, 0xda, 0xb0, 0x3b, 0xcc, 0xc4, 0x4c, 0xa6, 0xdd, 0xb5,
	0xea, 0x58, 0xe2, 0x13, 0x51, 0xf4, 0x2b, 0xd8, 0x8b, 0xd3, 0x89, 0x4c, 0xd9, 0x2f, 0x18, 0x5e,
	0x37, 0xe1, 0x9e, 0x86, 0x3a, 0x96, 0x30, 0x3e, 0xfa, 0x0d, 0x1c, 0x84, 0xe3, 0x31, 0x4e, 0x75,
	0x84, 0xb4, 0x63, 0x43, 0xb3, 0x0d, 0xd8, 0xb1, 0xc4, 0xd2, 0xaf, 0xf3, 0x61, 0x27, 0xd9, 0xaf,
	0xc5, 0x7c, 0x03, 0x0d, 0xe9, 0x7c, 0xe8, 0xd3, 0x24, 0x9c, 0x20, 0x76, 0x5f, 0x24, 0xe1, 0x94,
	0x69, 0x12, 0xfa, 0xe8, 0x0f, 0x70, 0x64, 0x5a, 0xdf, 0x95, 0x0b, 0x39, 0x55, 0x6c, 0x8a, 0x5c,
	0x6a, 0xb8, 0xbd, 0x82, 0xa7, 0x63, 0x89, 0x0d, 0x26, 0x7d, 0x01, 0xb5, 0x24, 0x8d, 0x93, 0x58,
	0x85, 0x53, 0x36, 0xc3, 0xa8, 0x46, 0x2e, 0x23, 0x47, 0x3b, 0x96, 0x58, 0x31, 0xe8, 0x39, 0x54,
	0x17, 0x71, 0x26, 0xd9, 0x1c, 0x99, 0x60, 0x98, 0xb7, 0x31, 0xb6, 0x0f, 0x3d, 0xba, 0xd9, 0x66,
	0x70, 0x9d, 0x30, 0x0b, 0x59, 0x5c, 0x6c, 0x76, 0x6f, 0x85, 0xeb, 0x66, 0xaf, 0x59, 0xf4, 0x35,
	0x1c, 0xcf, 0xe3, 0x89, 0xf4, 0xa3, 0xbb, 0x79, 0x98, 0x3d, 0xa4, 0x92, 0x25, 0x18, 0x96, 0x8f,
	0x54, 0xbf, 0xe8, 0xea, 0x58, 0x62, 0x93, 0xab, 0x27, 0x65, 0xba, 0x7d, 0x1f, 0xb1, 0xdf, 0x8a,
	0x93, 0xb2, 0x73, 0x5d, 0xe9, 0x49, 0xd9, 0x89, 0xa1, 0x3f, 0x42, 0x43, 0x6d, 0xdc, 0x1b, 0x2c,
	0xc5, 0x2c, 0x4f, 0x4c, 0x96, 0xcd, 0x3b, 0xa5, 0x63, 0x89, 0x2d, 0x36, 0x75, 0x80, 0xa8, 0xad,
	0xb5, 0x66, 0x0a, 0x33, 0x9c, 0x15, 0x33, 0xac, 0xbd, 0x1d, 0x4b, 0xec, 0x44, 0xd0, 0x57, 0x70,
	0x6c, 0x2a, 0xd3, 0x4e, 0x65, 0x98, 0xc9, 0x09, 0xcb, 0x30, 0xc5, 0x51, 0xb1, 0x84, 0xba, 0x08,
	0x1b, 0x24, 0x3d, 0x24, 0xf8, 0x9f, 0xc8, 0x1e, 0x8a, 0x43, 0x62, 0x6b, 0x48, 0x0f, 0x09, 0xfa,
	0xd6, 0xad, 0xd1, 0xfb, 0xcf, 0x16, 0xbb, 0xad, 0xd1, 0xf8, 0xba, 0x35, 0x78, 0x4b, 0xbc, 0xc0,
	0x1b, 0xe6, 0x5e, 0x66, 0xec, 0xaf, 0x12, 0x06, 0x34, 0x8b, 0x01, 0xb8, 0xea, 0x1d, 0x4b, 0xe4,
	0x9c, 0xd6, 0xdf, 0x65, 0xa8, 0xea, 0xc5, 0xa7, 0x4f, 0x80, 0x04, 0xef, 0x06, 0x7c, 0x34, 0xec,
	0xfb, 0x03, 0xde, 0x76, 0xdf, 0xb8, 0xdc, 0x21, 0x16, 0x3d, 0x82, 0x1a, 0xa2, 0x76, 0xb7, 0x4b,
	0x4a, 0xf4, 0x04, 0xea, 0x81, 0xdb, 0xe3, 0xa3, 0xe1, 0xc0, 0xb1, 0x03, 0x4e, 0xca, 0xf4, 0x0c,
	0x68, 0x20, 0xec, 0xbe, 0xff, 0x86, 0x8b, 0x91, 0xe0, 0xfe, 0xc0, 0xeb, 0xfb, 0xdc, 0x27, 0x15,
	0xfa, 0x0c, 0x4e, 0x07, 0x9e, 0xef, 0x06, 0xae, 0xd7, 0xd7, 0xb8, 0xd7, 0x1d, 0xea, 0x23, 0xa9,
	0xd2, 0x43, 0xd8, 0xf3, 0x84, 0xc3, 0x05, 0xd9, 0xa3, 0x75, 0x38, 0xb0, 0xdb, 0x6d, 0x6f, 0xd8,
	0x0f, 0xc8, 0xbe, 0xc6, 0x07, 0xb6, 0x08, 0xde, 0x91, 0x03, 0x7d, 0x0c, 0x84, 0xed, 0x70, 0x52,
	0xa3, 0x4d, 0x38, 0xee, 0xd9, 0xe2, 0xc6, 0xed, 0x8f, 0xba, 0xfc, 0x96, 0x77, 0x7d, 0x72, 0xa8,
	0x05, 0x0d, 0x84, 0x37, 0xf0, 0x7c, 0xbb, 0x4b, 0x80, 0xd6, 0xa0, 0x7a, 0xeb, 0x05, 0x9c, 0xd4,
	0xb5, 0xb4, 0x9e, 0x2d, 0xde, 0xf2, 0x60, 0xe4, 0xd8, 0x81, 0x4d, 0x8e, 0x28, 0x85, 0x46, 0xdf,
	0x73, 0xf8, 0xc8, 0x77, 0x6f, 0xfa, 0x76, 0x30, 0x14, 0x9c, 0x1c, 0x6b, 0xb9, 0x5d, 0xcf, 0xf7,
	0x47, 0xbe, 0xd7, 0x76, 0xed, 0xae, 0xfb, 0xde, 0x46, 0x55, 0x0d, 0x7a, 0x0a, 0x27, 0x3e, 0x0f,
	0x82, 0x2e, 0x1f, 0x2d, 0x55, 0x93, 0x13, 0xfa, 0x14, 0x9a, 0x39, 0xe8, 0xb8, 0x7e, 0x20, 0xb8,
	0xef, 0x73, 0x87, 0x10, 0x9d, 0x37, 0x7f, 0x50, 0x5b, 0x70, 0x3b, 0xe0, 0x0e, 0x69, 0x6a, 0xc9,
	0xb6, 0xef, 0xf3, 0x80, 0xd0, 0x82, 0x8e, 0xc0, 0x6d, 0xbf, 0x25, 0xa7, 0x14, 0x60, 0xdf, 0x00,
	0x44, 0x5e, 0x1f, 0xc0, 0x1e, 0x7e, 0x36, 0x5d, 0x7f, 0xf9, 0xfe, 0x8b, 0x71, 0x3c, 0x91, 0xd8,
	0x18, 0xfc, 0xd0, 0x19, 0xc7, 0xd3, 0xcb, 0xc8, 0x7c, 0xf9, 0xbc, 0x44, 0xe0, 0xe7, 0x7d, 0xfc,
	0xf9, 0xfe, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0xe8, 0x62, 0x9d, 0x6f, 0x09, 0x00, 0x00,
}
