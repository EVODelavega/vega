// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/api/grpc.proto

package api

import (
	proto1 "code.vegaprotocol.io/vega/proto"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MarketByIDRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketByIDRequest) Reset()         { *m = MarketByIDRequest{} }
func (m *MarketByIDRequest) String() string { return proto.CompactTextString(m) }
func (*MarketByIDRequest) ProtoMessage()    {}
func (*MarketByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{0}
}

func (m *MarketByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketByIDRequest.Unmarshal(m, b)
}
func (m *MarketByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketByIDRequest.Marshal(b, m, deterministic)
}
func (m *MarketByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketByIDRequest.Merge(m, src)
}
func (m *MarketByIDRequest) XXX_Size() int {
	return xxx_messageInfo_MarketByIDRequest.Size(m)
}
func (m *MarketByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketByIDRequest proto.InternalMessageInfo

func (m *MarketByIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MarketByIDResponse struct {
	Market               *proto1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MarketByIDResponse) Reset()         { *m = MarketByIDResponse{} }
func (m *MarketByIDResponse) String() string { return proto.CompactTextString(m) }
func (*MarketByIDResponse) ProtoMessage()    {}
func (*MarketByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{1}
}

func (m *MarketByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketByIDResponse.Unmarshal(m, b)
}
func (m *MarketByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketByIDResponse.Marshal(b, m, deterministic)
}
func (m *MarketByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketByIDResponse.Merge(m, src)
}
func (m *MarketByIDResponse) XXX_Size() int {
	return xxx_messageInfo_MarketByIDResponse.Size(m)
}
func (m *MarketByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketByIDResponse proto.InternalMessageInfo

func (m *MarketByIDResponse) GetMarket() *proto1.Market {
	if m != nil {
		return m.Market
	}
	return nil
}

type PartyByIDRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartyByIDRequest) Reset()         { *m = PartyByIDRequest{} }
func (m *PartyByIDRequest) String() string { return proto.CompactTextString(m) }
func (*PartyByIDRequest) ProtoMessage()    {}
func (*PartyByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{2}
}

func (m *PartyByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartyByIDRequest.Unmarshal(m, b)
}
func (m *PartyByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartyByIDRequest.Marshal(b, m, deterministic)
}
func (m *PartyByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartyByIDRequest.Merge(m, src)
}
func (m *PartyByIDRequest) XXX_Size() int {
	return xxx_messageInfo_PartyByIDRequest.Size(m)
}
func (m *PartyByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartyByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartyByIDRequest proto.InternalMessageInfo

func (m *PartyByIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PartyByIDResponse struct {
	Party                *proto1.Party `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PartyByIDResponse) Reset()         { *m = PartyByIDResponse{} }
func (m *PartyByIDResponse) String() string { return proto.CompactTextString(m) }
func (*PartyByIDResponse) ProtoMessage()    {}
func (*PartyByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{3}
}

func (m *PartyByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartyByIDResponse.Unmarshal(m, b)
}
func (m *PartyByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartyByIDResponse.Marshal(b, m, deterministic)
}
func (m *PartyByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartyByIDResponse.Merge(m, src)
}
func (m *PartyByIDResponse) XXX_Size() int {
	return xxx_messageInfo_PartyByIDResponse.Size(m)
}
func (m *PartyByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartyByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartyByIDResponse proto.InternalMessageInfo

func (m *PartyByIDResponse) GetParty() *proto1.Party {
	if m != nil {
		return m.Party
	}
	return nil
}

type PartiesResponse struct {
	Parties              []*proto1.Party `protobuf:"bytes,1,rep,name=parties,proto3" json:"parties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PartiesResponse) Reset()         { *m = PartiesResponse{} }
func (m *PartiesResponse) String() string { return proto.CompactTextString(m) }
func (*PartiesResponse) ProtoMessage()    {}
func (*PartiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{4}
}

func (m *PartiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartiesResponse.Unmarshal(m, b)
}
func (m *PartiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartiesResponse.Marshal(b, m, deterministic)
}
func (m *PartiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartiesResponse.Merge(m, src)
}
func (m *PartiesResponse) XXX_Size() int {
	return xxx_messageInfo_PartiesResponse.Size(m)
}
func (m *PartiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartiesResponse proto.InternalMessageInfo

func (m *PartiesResponse) GetParties() []*proto1.Party {
	if m != nil {
		return m.Parties
	}
	return nil
}

type TradesByPartyRequest struct {
	PartyID              string          `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID             string          `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Params               *OptionalParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByPartyRequest) Reset()         { *m = TradesByPartyRequest{} }
func (m *TradesByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*TradesByPartyRequest) ProtoMessage()    {}
func (*TradesByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{5}
}

func (m *TradesByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByPartyRequest.Unmarshal(m, b)
}
func (m *TradesByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByPartyRequest.Marshal(b, m, deterministic)
}
func (m *TradesByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByPartyRequest.Merge(m, src)
}
func (m *TradesByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_TradesByPartyRequest.Size(m)
}
func (m *TradesByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByPartyRequest proto.InternalMessageInfo

func (m *TradesByPartyRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *TradesByPartyRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *TradesByPartyRequest) GetParams() *OptionalParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type TradesByPartyResponse struct {
	Trades               []*proto1.Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByPartyResponse) Reset()         { *m = TradesByPartyResponse{} }
func (m *TradesByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*TradesByPartyResponse) ProtoMessage()    {}
func (*TradesByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{6}
}

func (m *TradesByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByPartyResponse.Unmarshal(m, b)
}
func (m *TradesByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByPartyResponse.Marshal(b, m, deterministic)
}
func (m *TradesByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByPartyResponse.Merge(m, src)
}
func (m *TradesByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_TradesByPartyResponse.Size(m)
}
func (m *TradesByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByPartyResponse proto.InternalMessageInfo

func (m *TradesByPartyResponse) GetTrades() []*proto1.Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type TradesByOrderRequest struct {
	OrderID              string          `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	Params               *OptionalParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByOrderRequest) Reset()         { *m = TradesByOrderRequest{} }
func (m *TradesByOrderRequest) String() string { return proto.CompactTextString(m) }
func (*TradesByOrderRequest) ProtoMessage()    {}
func (*TradesByOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{7}
}

func (m *TradesByOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByOrderRequest.Unmarshal(m, b)
}
func (m *TradesByOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByOrderRequest.Marshal(b, m, deterministic)
}
func (m *TradesByOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByOrderRequest.Merge(m, src)
}
func (m *TradesByOrderRequest) XXX_Size() int {
	return xxx_messageInfo_TradesByOrderRequest.Size(m)
}
func (m *TradesByOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByOrderRequest proto.InternalMessageInfo

func (m *TradesByOrderRequest) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *TradesByOrderRequest) GetParams() *OptionalParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type TradesByOrderResponse struct {
	Trades               []*proto1.Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByOrderResponse) Reset()         { *m = TradesByOrderResponse{} }
func (m *TradesByOrderResponse) String() string { return proto.CompactTextString(m) }
func (*TradesByOrderResponse) ProtoMessage()    {}
func (*TradesByOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{8}
}

func (m *TradesByOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByOrderResponse.Unmarshal(m, b)
}
func (m *TradesByOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByOrderResponse.Marshal(b, m, deterministic)
}
func (m *TradesByOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByOrderResponse.Merge(m, src)
}
func (m *TradesByOrderResponse) XXX_Size() int {
	return xxx_messageInfo_TradesByOrderResponse.Size(m)
}
func (m *TradesByOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByOrderResponse proto.InternalMessageInfo

func (m *TradesByOrderResponse) GetTrades() []*proto1.Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type OrdersSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrdersSubscribeRequest) Reset()         { *m = OrdersSubscribeRequest{} }
func (m *OrdersSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersSubscribeRequest) ProtoMessage()    {}
func (*OrdersSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{9}
}

func (m *OrdersSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersSubscribeRequest.Unmarshal(m, b)
}
func (m *OrdersSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *OrdersSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersSubscribeRequest.Merge(m, src)
}
func (m *OrdersSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersSubscribeRequest.Size(m)
}
func (m *OrdersSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersSubscribeRequest proto.InternalMessageInfo

func (m *OrdersSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrdersSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type TradesSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradesSubscribeRequest) Reset()         { *m = TradesSubscribeRequest{} }
func (m *TradesSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*TradesSubscribeRequest) ProtoMessage()    {}
func (*TradesSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{10}
}

func (m *TradesSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesSubscribeRequest.Unmarshal(m, b)
}
func (m *TradesSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *TradesSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesSubscribeRequest.Merge(m, src)
}
func (m *TradesSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_TradesSubscribeRequest.Size(m)
}
func (m *TradesSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradesSubscribeRequest proto.InternalMessageInfo

func (m *TradesSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *TradesSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type CandlesSubscribeRequest struct {
	MarketID             string          `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Interval             proto1.Interval `protobuf:"varint,2,opt,name=interval,proto3,enum=vega.Interval" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CandlesSubscribeRequest) Reset()         { *m = CandlesSubscribeRequest{} }
func (m *CandlesSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*CandlesSubscribeRequest) ProtoMessage()    {}
func (*CandlesSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{11}
}

func (m *CandlesSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesSubscribeRequest.Unmarshal(m, b)
}
func (m *CandlesSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *CandlesSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesSubscribeRequest.Merge(m, src)
}
func (m *CandlesSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_CandlesSubscribeRequest.Size(m)
}
func (m *CandlesSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesSubscribeRequest proto.InternalMessageInfo

func (m *CandlesSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *CandlesSubscribeRequest) GetInterval() proto1.Interval {
	if m != nil {
		return m.Interval
	}
	return proto1.Interval_I1M
}

type MarketDepthSubscribeRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDepthSubscribeRequest) Reset()         { *m = MarketDepthSubscribeRequest{} }
func (m *MarketDepthSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*MarketDepthSubscribeRequest) ProtoMessage()    {}
func (*MarketDepthSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{12}
}

func (m *MarketDepthSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthSubscribeRequest.Unmarshal(m, b)
}
func (m *MarketDepthSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *MarketDepthSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthSubscribeRequest.Merge(m, src)
}
func (m *MarketDepthSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_MarketDepthSubscribeRequest.Size(m)
}
func (m *MarketDepthSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthSubscribeRequest proto.InternalMessageInfo

func (m *MarketDepthSubscribeRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

type PositionsSubscribeRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsSubscribeRequest) Reset()         { *m = PositionsSubscribeRequest{} }
func (m *PositionsSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*PositionsSubscribeRequest) ProtoMessage()    {}
func (*PositionsSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{13}
}

func (m *PositionsSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsSubscribeRequest.Unmarshal(m, b)
}
func (m *PositionsSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *PositionsSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsSubscribeRequest.Merge(m, src)
}
func (m *PositionsSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_PositionsSubscribeRequest.Size(m)
}
func (m *PositionsSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsSubscribeRequest proto.InternalMessageInfo

func (m *PositionsSubscribeRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type OrderResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reference            string   `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderResponse) Reset()         { *m = OrderResponse{} }
func (m *OrderResponse) String() string { return proto.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()    {}
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{14}
}

func (m *OrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderResponse.Unmarshal(m, b)
}
func (m *OrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderResponse.Marshal(b, m, deterministic)
}
func (m *OrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderResponse.Merge(m, src)
}
func (m *OrderResponse) XXX_Size() int {
	return xxx_messageInfo_OrderResponse.Size(m)
}
func (m *OrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderResponse proto.InternalMessageInfo

func (m *OrderResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *OrderResponse) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type OrdersByMarketRequest struct {
	MarketID             string          `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Params               *OptionalParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByMarketRequest) Reset()         { *m = OrdersByMarketRequest{} }
func (m *OrdersByMarketRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersByMarketRequest) ProtoMessage()    {}
func (*OrdersByMarketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{15}
}

func (m *OrdersByMarketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByMarketRequest.Unmarshal(m, b)
}
func (m *OrdersByMarketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByMarketRequest.Marshal(b, m, deterministic)
}
func (m *OrdersByMarketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByMarketRequest.Merge(m, src)
}
func (m *OrdersByMarketRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersByMarketRequest.Size(m)
}
func (m *OrdersByMarketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByMarketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByMarketRequest proto.InternalMessageInfo

func (m *OrdersByMarketRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrdersByMarketRequest) GetParams() *OptionalParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type OrdersByMarketResponse struct {
	Orders               []*proto1.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByMarketResponse) Reset()         { *m = OrdersByMarketResponse{} }
func (m *OrdersByMarketResponse) String() string { return proto.CompactTextString(m) }
func (*OrdersByMarketResponse) ProtoMessage()    {}
func (*OrdersByMarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{16}
}

func (m *OrdersByMarketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByMarketResponse.Unmarshal(m, b)
}
func (m *OrdersByMarketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByMarketResponse.Marshal(b, m, deterministic)
}
func (m *OrdersByMarketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByMarketResponse.Merge(m, src)
}
func (m *OrdersByMarketResponse) XXX_Size() int {
	return xxx_messageInfo_OrdersByMarketResponse.Size(m)
}
func (m *OrdersByMarketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByMarketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByMarketResponse proto.InternalMessageInfo

func (m *OrdersByMarketResponse) GetOrders() []*proto1.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrdersByPartyRequest struct {
	PartyID              string          `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Params               *OptionalParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByPartyRequest) Reset()         { *m = OrdersByPartyRequest{} }
func (m *OrdersByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersByPartyRequest) ProtoMessage()    {}
func (*OrdersByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{17}
}

func (m *OrdersByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByPartyRequest.Unmarshal(m, b)
}
func (m *OrdersByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByPartyRequest.Marshal(b, m, deterministic)
}
func (m *OrdersByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByPartyRequest.Merge(m, src)
}
func (m *OrdersByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersByPartyRequest.Size(m)
}
func (m *OrdersByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByPartyRequest proto.InternalMessageInfo

func (m *OrdersByPartyRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *OrdersByPartyRequest) GetParams() *OptionalParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type OrdersByPartyResponse struct {
	Orders               []*proto1.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrdersByPartyResponse) Reset()         { *m = OrdersByPartyResponse{} }
func (m *OrdersByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*OrdersByPartyResponse) ProtoMessage()    {}
func (*OrdersByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{18}
}

func (m *OrdersByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersByPartyResponse.Unmarshal(m, b)
}
func (m *OrdersByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersByPartyResponse.Marshal(b, m, deterministic)
}
func (m *OrdersByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersByPartyResponse.Merge(m, src)
}
func (m *OrdersByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_OrdersByPartyResponse.Size(m)
}
func (m *OrdersByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersByPartyResponse proto.InternalMessageInfo

func (m *OrdersByPartyResponse) GetOrders() []*proto1.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrderByMarketAndIdRequest struct {
	MarketID             string   `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderByMarketAndIdRequest) Reset()         { *m = OrderByMarketAndIdRequest{} }
func (m *OrderByMarketAndIdRequest) String() string { return proto.CompactTextString(m) }
func (*OrderByMarketAndIdRequest) ProtoMessage()    {}
func (*OrderByMarketAndIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{19}
}

func (m *OrderByMarketAndIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByMarketAndIdRequest.Unmarshal(m, b)
}
func (m *OrderByMarketAndIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByMarketAndIdRequest.Marshal(b, m, deterministic)
}
func (m *OrderByMarketAndIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByMarketAndIdRequest.Merge(m, src)
}
func (m *OrderByMarketAndIdRequest) XXX_Size() int {
	return xxx_messageInfo_OrderByMarketAndIdRequest.Size(m)
}
func (m *OrderByMarketAndIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByMarketAndIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByMarketAndIdRequest proto.InternalMessageInfo

func (m *OrderByMarketAndIdRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrderByMarketAndIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type OrderByMarketAndIdResponse struct {
	Order                *proto1.Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrderByMarketAndIdResponse) Reset()         { *m = OrderByMarketAndIdResponse{} }
func (m *OrderByMarketAndIdResponse) String() string { return proto.CompactTextString(m) }
func (*OrderByMarketAndIdResponse) ProtoMessage()    {}
func (*OrderByMarketAndIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{20}
}

func (m *OrderByMarketAndIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByMarketAndIdResponse.Unmarshal(m, b)
}
func (m *OrderByMarketAndIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByMarketAndIdResponse.Marshal(b, m, deterministic)
}
func (m *OrderByMarketAndIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByMarketAndIdResponse.Merge(m, src)
}
func (m *OrderByMarketAndIdResponse) XXX_Size() int {
	return xxx_messageInfo_OrderByMarketAndIdResponse.Size(m)
}
func (m *OrderByMarketAndIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByMarketAndIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByMarketAndIdResponse proto.InternalMessageInfo

func (m *OrderByMarketAndIdResponse) GetOrder() *proto1.Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type MarketsResponse struct {
	Markets              []*proto1.Market `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MarketsResponse) Reset()         { *m = MarketsResponse{} }
func (m *MarketsResponse) String() string { return proto.CompactTextString(m) }
func (*MarketsResponse) ProtoMessage()    {}
func (*MarketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{21}
}

func (m *MarketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketsResponse.Unmarshal(m, b)
}
func (m *MarketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketsResponse.Marshal(b, m, deterministic)
}
func (m *MarketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketsResponse.Merge(m, src)
}
func (m *MarketsResponse) XXX_Size() int {
	return xxx_messageInfo_MarketsResponse.Size(m)
}
func (m *MarketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketsResponse proto.InternalMessageInfo

func (m *MarketsResponse) GetMarkets() []*proto1.Market {
	if m != nil {
		return m.Markets
	}
	return nil
}

type CandlesRequest struct {
	Market               string          `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	SinceTimestamp       int64           `protobuf:"varint,2,opt,name=sinceTimestamp,proto3" json:"sinceTimestamp,omitempty"`
	Interval             proto1.Interval `protobuf:"varint,3,opt,name=interval,proto3,enum=vega.Interval" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CandlesRequest) Reset()         { *m = CandlesRequest{} }
func (m *CandlesRequest) String() string { return proto.CompactTextString(m) }
func (*CandlesRequest) ProtoMessage()    {}
func (*CandlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{22}
}

func (m *CandlesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesRequest.Unmarshal(m, b)
}
func (m *CandlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesRequest.Marshal(b, m, deterministic)
}
func (m *CandlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesRequest.Merge(m, src)
}
func (m *CandlesRequest) XXX_Size() int {
	return xxx_messageInfo_CandlesRequest.Size(m)
}
func (m *CandlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesRequest proto.InternalMessageInfo

func (m *CandlesRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *CandlesRequest) GetSinceTimestamp() int64 {
	if m != nil {
		return m.SinceTimestamp
	}
	return 0
}

func (m *CandlesRequest) GetInterval() proto1.Interval {
	if m != nil {
		return m.Interval
	}
	return proto1.Interval_I1M
}

type CandlesResponse struct {
	Candles              []*proto1.Candle `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CandlesResponse) Reset()         { *m = CandlesResponse{} }
func (m *CandlesResponse) String() string { return proto.CompactTextString(m) }
func (*CandlesResponse) ProtoMessage()    {}
func (*CandlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{23}
}

func (m *CandlesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesResponse.Unmarshal(m, b)
}
func (m *CandlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesResponse.Marshal(b, m, deterministic)
}
func (m *CandlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesResponse.Merge(m, src)
}
func (m *CandlesResponse) XXX_Size() int {
	return xxx_messageInfo_CandlesResponse.Size(m)
}
func (m *CandlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesResponse proto.InternalMessageInfo

func (m *CandlesResponse) GetCandles() []*proto1.Candle {
	if m != nil {
		return m.Candles
	}
	return nil
}

type MarketDepthRequest struct {
	Market               string   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDepthRequest) Reset()         { *m = MarketDepthRequest{} }
func (m *MarketDepthRequest) String() string { return proto.CompactTextString(m) }
func (*MarketDepthRequest) ProtoMessage()    {}
func (*MarketDepthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{24}
}

func (m *MarketDepthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthRequest.Unmarshal(m, b)
}
func (m *MarketDepthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthRequest.Marshal(b, m, deterministic)
}
func (m *MarketDepthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthRequest.Merge(m, src)
}
func (m *MarketDepthRequest) XXX_Size() int {
	return xxx_messageInfo_MarketDepthRequest.Size(m)
}
func (m *MarketDepthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthRequest proto.InternalMessageInfo

func (m *MarketDepthRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

type MarketDepthResponse struct {
	MarketID             string               `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Buy                  []*proto1.PriceLevel `protobuf:"bytes,2,rep,name=buy,proto3" json:"buy,omitempty"`
	Sell                 []*proto1.PriceLevel `protobuf:"bytes,3,rep,name=sell,proto3" json:"sell,omitempty"`
	LastTrade            *proto1.Trade        `protobuf:"bytes,4,opt,name=lastTrade,proto3" json:"lastTrade,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MarketDepthResponse) Reset()         { *m = MarketDepthResponse{} }
func (m *MarketDepthResponse) String() string { return proto.CompactTextString(m) }
func (*MarketDepthResponse) ProtoMessage()    {}
func (*MarketDepthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{25}
}

func (m *MarketDepthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthResponse.Unmarshal(m, b)
}
func (m *MarketDepthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthResponse.Marshal(b, m, deterministic)
}
func (m *MarketDepthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthResponse.Merge(m, src)
}
func (m *MarketDepthResponse) XXX_Size() int {
	return xxx_messageInfo_MarketDepthResponse.Size(m)
}
func (m *MarketDepthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthResponse proto.InternalMessageInfo

func (m *MarketDepthResponse) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *MarketDepthResponse) GetBuy() []*proto1.PriceLevel {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *MarketDepthResponse) GetSell() []*proto1.PriceLevel {
	if m != nil {
		return m.Sell
	}
	return nil
}

func (m *MarketDepthResponse) GetLastTrade() *proto1.Trade {
	if m != nil {
		return m.LastTrade
	}
	return nil
}

type TradesByMarketRequest struct {
	MarketID             string          `protobuf:"bytes,1,opt,name=marketID,proto3" json:"marketID,omitempty"`
	Params               *OptionalParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByMarketRequest) Reset()         { *m = TradesByMarketRequest{} }
func (m *TradesByMarketRequest) String() string { return proto.CompactTextString(m) }
func (*TradesByMarketRequest) ProtoMessage()    {}
func (*TradesByMarketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{26}
}

func (m *TradesByMarketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByMarketRequest.Unmarshal(m, b)
}
func (m *TradesByMarketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByMarketRequest.Marshal(b, m, deterministic)
}
func (m *TradesByMarketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByMarketRequest.Merge(m, src)
}
func (m *TradesByMarketRequest) XXX_Size() int {
	return xxx_messageInfo_TradesByMarketRequest.Size(m)
}
func (m *TradesByMarketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByMarketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByMarketRequest proto.InternalMessageInfo

func (m *TradesByMarketRequest) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *TradesByMarketRequest) GetParams() *OptionalParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type TradesByMarketResponse struct {
	Trades               []*proto1.Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TradesByMarketResponse) Reset()         { *m = TradesByMarketResponse{} }
func (m *TradesByMarketResponse) String() string { return proto.CompactTextString(m) }
func (*TradesByMarketResponse) ProtoMessage()    {}
func (*TradesByMarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{27}
}

func (m *TradesByMarketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesByMarketResponse.Unmarshal(m, b)
}
func (m *TradesByMarketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesByMarketResponse.Marshal(b, m, deterministic)
}
func (m *TradesByMarketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesByMarketResponse.Merge(m, src)
}
func (m *TradesByMarketResponse) XXX_Size() int {
	return xxx_messageInfo_TradesByMarketResponse.Size(m)
}
func (m *TradesByMarketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesByMarketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TradesByMarketResponse proto.InternalMessageInfo

func (m *TradesByMarketResponse) GetTrades() []*proto1.Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type PositionsByPartyRequest struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsByPartyRequest) Reset()         { *m = PositionsByPartyRequest{} }
func (m *PositionsByPartyRequest) String() string { return proto.CompactTextString(m) }
func (*PositionsByPartyRequest) ProtoMessage()    {}
func (*PositionsByPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{28}
}

func (m *PositionsByPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsByPartyRequest.Unmarshal(m, b)
}
func (m *PositionsByPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsByPartyRequest.Marshal(b, m, deterministic)
}
func (m *PositionsByPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsByPartyRequest.Merge(m, src)
}
func (m *PositionsByPartyRequest) XXX_Size() int {
	return xxx_messageInfo_PositionsByPartyRequest.Size(m)
}
func (m *PositionsByPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsByPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsByPartyRequest proto.InternalMessageInfo

func (m *PositionsByPartyRequest) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type PositionsByPartyResponse struct {
	Positions            []*proto1.MarketPosition `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PositionsByPartyResponse) Reset()         { *m = PositionsByPartyResponse{} }
func (m *PositionsByPartyResponse) String() string { return proto.CompactTextString(m) }
func (*PositionsByPartyResponse) ProtoMessage()    {}
func (*PositionsByPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{29}
}

func (m *PositionsByPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsByPartyResponse.Unmarshal(m, b)
}
func (m *PositionsByPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsByPartyResponse.Marshal(b, m, deterministic)
}
func (m *PositionsByPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsByPartyResponse.Merge(m, src)
}
func (m *PositionsByPartyResponse) XXX_Size() int {
	return xxx_messageInfo_PositionsByPartyResponse.Size(m)
}
func (m *PositionsByPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsByPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsByPartyResponse proto.InternalMessageInfo

func (m *PositionsByPartyResponse) GetPositions() []*proto1.MarketPosition {
	if m != nil {
		return m.Positions
	}
	return nil
}

type VegaTimeResponse struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VegaTimeResponse) Reset()         { *m = VegaTimeResponse{} }
func (m *VegaTimeResponse) String() string { return proto.CompactTextString(m) }
func (*VegaTimeResponse) ProtoMessage()    {}
func (*VegaTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{30}
}

func (m *VegaTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VegaTimeResponse.Unmarshal(m, b)
}
func (m *VegaTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VegaTimeResponse.Marshal(b, m, deterministic)
}
func (m *VegaTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VegaTimeResponse.Merge(m, src)
}
func (m *VegaTimeResponse) XXX_Size() int {
	return xxx_messageInfo_VegaTimeResponse.Size(m)
}
func (m *VegaTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VegaTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VegaTimeResponse proto.InternalMessageInfo

func (m *VegaTimeResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type OptionalParams struct {
	Limit                uint64   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OptionalParams) Reset()         { *m = OptionalParams{} }
func (m *OptionalParams) String() string { return proto.CompactTextString(m) }
func (*OptionalParams) ProtoMessage()    {}
func (*OptionalParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d137a6885699745, []int{31}
}

func (m *OptionalParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptionalParams.Unmarshal(m, b)
}
func (m *OptionalParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptionalParams.Marshal(b, m, deterministic)
}
func (m *OptionalParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptionalParams.Merge(m, src)
}
func (m *OptionalParams) XXX_Size() int {
	return xxx_messageInfo_OptionalParams.Size(m)
}
func (m *OptionalParams) XXX_DiscardUnknown() {
	xxx_messageInfo_OptionalParams.DiscardUnknown(m)
}

var xxx_messageInfo_OptionalParams proto.InternalMessageInfo

func (m *OptionalParams) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func init() {
	proto.RegisterType((*MarketByIDRequest)(nil), "api.MarketByIDRequest")
	proto.RegisterType((*MarketByIDResponse)(nil), "api.MarketByIDResponse")
	proto.RegisterType((*PartyByIDRequest)(nil), "api.PartyByIDRequest")
	proto.RegisterType((*PartyByIDResponse)(nil), "api.PartyByIDResponse")
	proto.RegisterType((*PartiesResponse)(nil), "api.PartiesResponse")
	proto.RegisterType((*TradesByPartyRequest)(nil), "api.TradesByPartyRequest")
	proto.RegisterType((*TradesByPartyResponse)(nil), "api.TradesByPartyResponse")
	proto.RegisterType((*TradesByOrderRequest)(nil), "api.TradesByOrderRequest")
	proto.RegisterType((*TradesByOrderResponse)(nil), "api.TradesByOrderResponse")
	proto.RegisterType((*OrdersSubscribeRequest)(nil), "api.OrdersSubscribeRequest")
	proto.RegisterType((*TradesSubscribeRequest)(nil), "api.TradesSubscribeRequest")
	proto.RegisterType((*CandlesSubscribeRequest)(nil), "api.CandlesSubscribeRequest")
	proto.RegisterType((*MarketDepthSubscribeRequest)(nil), "api.MarketDepthSubscribeRequest")
	proto.RegisterType((*PositionsSubscribeRequest)(nil), "api.PositionsSubscribeRequest")
	proto.RegisterType((*OrderResponse)(nil), "api.OrderResponse")
	proto.RegisterType((*OrdersByMarketRequest)(nil), "api.OrdersByMarketRequest")
	proto.RegisterType((*OrdersByMarketResponse)(nil), "api.OrdersByMarketResponse")
	proto.RegisterType((*OrdersByPartyRequest)(nil), "api.OrdersByPartyRequest")
	proto.RegisterType((*OrdersByPartyResponse)(nil), "api.OrdersByPartyResponse")
	proto.RegisterType((*OrderByMarketAndIdRequest)(nil), "api.OrderByMarketAndIdRequest")
	proto.RegisterType((*OrderByMarketAndIdResponse)(nil), "api.OrderByMarketAndIdResponse")
	proto.RegisterType((*MarketsResponse)(nil), "api.MarketsResponse")
	proto.RegisterType((*CandlesRequest)(nil), "api.CandlesRequest")
	proto.RegisterType((*CandlesResponse)(nil), "api.CandlesResponse")
	proto.RegisterType((*MarketDepthRequest)(nil), "api.MarketDepthRequest")
	proto.RegisterType((*MarketDepthResponse)(nil), "api.MarketDepthResponse")
	proto.RegisterType((*TradesByMarketRequest)(nil), "api.TradesByMarketRequest")
	proto.RegisterType((*TradesByMarketResponse)(nil), "api.TradesByMarketResponse")
	proto.RegisterType((*PositionsByPartyRequest)(nil), "api.PositionsByPartyRequest")
	proto.RegisterType((*PositionsByPartyResponse)(nil), "api.PositionsByPartyResponse")
	proto.RegisterType((*VegaTimeResponse)(nil), "api.VegaTimeResponse")
	proto.RegisterType((*OptionalParams)(nil), "api.OptionalParams")
}

func init() { proto.RegisterFile("proto/api/grpc.proto", fileDescriptor_9d137a6885699745) }

var fileDescriptor_9d137a6885699745 = []byte{
	// 1242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x6d, 0x6f, 0xdb, 0x36,
	0x10, 0x9e, 0xec, 0x36, 0x8e, 0xcf, 0xad, 0xe3, 0x30, 0x4e, 0xa2, 0x28, 0x59, 0x9b, 0x31, 0xed,
	0xb0, 0x17, 0x54, 0x36, 0xb2, 0x2e, 0x6b, 0xb3, 0x06, 0x6b, 0xdd, 0xac, 0x85, 0x81, 0xb6, 0x09,
	0x94, 0x6e, 0x03, 0x06, 0xec, 0x83, 0x2c, 0xb3, 0x0e, 0x51, 0xbd, 0x4d, 0xa2, 0x53, 0xf8, 0x07,
	0xec, 0xdb, 0x7e, 0xc7, 0xfe, 0xd6, 0x80, 0xfd, 0x92, 0x41, 0x24, 0x25, 0x51, 0xb2, 0xdc, 0xd6,
	0xc0, 0xf6, 0xcd, 0xbc, 0xe7, 0xee, 0xf8, 0x90, 0xba, 0x7b, 0x78, 0x30, 0x74, 0xc3, 0x28, 0x60,
	0x41, 0xcf, 0x0e, 0x69, 0x6f, 0x12, 0x85, 0x8e, 0xc9, 0x97, 0xa8, 0x6e, 0x87, 0xd4, 0xe8, 0x08,
	0xe8, 0x8a, 0x4c, 0x6c, 0x61, 0x36, 0x36, 0x84, 0xc5, 0xb3, 0xa3, 0xb7, 0x84, 0xc5, 0xd2, 0xb8,
	0x3b, 0x09, 0x82, 0x89, 0x4b, 0x7a, 0x7c, 0x35, 0x9a, 0xbe, 0xe9, 0x11, 0x2f, 0x64, 0x33, 0x09,
	0x1e, 0x4d, 0x28, 0xbb, 0x9c, 0x8e, 0x4c, 0x27, 0xf0, 0x7a, 0xde, 0x3b, 0xca, 0xde, 0x06, 0xef,
	0x7a, 0x93, 0xe0, 0x1e, 0x07, 0xef, 0x5d, 0xd9, 0x2e, 0x1d, 0xdb, 0x2c, 0x88, 0xe2, 0x5e, 0xf6,
	0x53, 0xc4, 0xe1, 0x03, 0x58, 0x7f, 0xc9, 0x77, 0x19, 0xcc, 0x86, 0xa7, 0x16, 0xf9, 0x7d, 0x4a,
	0x62, 0x86, 0xda, 0x50, 0xa3, 0x63, 0x5d, 0xdb, 0xd7, 0xbe, 0x68, 0x5a, 0x35, 0x3a, 0xc6, 0xc7,
	0x80, 0x54, 0xa7, 0x38, 0x0c, 0xfc, 0x98, 0xa0, 0x3b, 0xb0, 0x22, 0x08, 0x72, 0xcf, 0xd6, 0xe1,
	0x0d, 0x93, 0x9f, 0x40, 0x78, 0x5a, 0x12, 0xc3, 0x18, 0x3a, 0xe7, 0x76, 0xc4, 0x66, 0xef, 0xcb,
	0x7f, 0x04, 0xeb, 0x8a, 0x8f, 0x4c, 0xff, 0x19, 0x5c, 0x0f, 0x13, 0xa3, 0xcc, 0xde, 0x12, 0xd9,
	0xb9, 0x9f, 0x25, 0x10, 0xfc, 0x00, 0xd6, 0x92, 0x35, 0x25, 0x71, 0x16, 0x75, 0x17, 0x1a, 0xa1,
	0x30, 0xe9, 0xda, 0x7e, 0xbd, 0x1c, 0x97, 0x62, 0x78, 0x06, 0xdd, 0xd7, 0x91, 0x3d, 0x26, 0xf1,
	0x60, 0x26, 0x10, 0xc9, 0x4c, 0x17, 0xe1, 0xb3, 0xe1, 0xa9, 0xa4, 0x97, 0x2e, 0x91, 0x01, 0xab,
	0xe2, 0x44, 0xc3, 0x53, 0xbd, 0xc6, 0xa1, 0x6c, 0x8d, 0xbe, 0x86, 0x95, 0xd0, 0x8e, 0x6c, 0x2f,
	0xd6, 0xeb, 0x9c, 0xeb, 0x86, 0x69, 0x87, 0xd4, 0x3c, 0x0b, 0x19, 0x0d, 0x7c, 0xdb, 0x3d, 0xe7,
	0x90, 0x25, 0x5d, 0xf0, 0x23, 0xd8, 0x2c, 0x6d, 0x2d, 0xa9, 0x1f, 0xc0, 0x0a, 0xe3, 0x40, 0x91,
	0x39, 0x77, 0xb6, 0x24, 0x84, 0x7f, 0xcb, 0x89, 0x9f, 0x45, 0x63, 0x12, 0x29, 0xc4, 0x83, 0x64,
	0x9d, 0x13, 0x97, 0x4b, 0x85, 0x5c, 0x6d, 0x29, 0x72, 0x32, 0xfd, 0x32, 0xe4, 0x5e, 0xc1, 0x16,
	0x8f, 0x8a, 0x2f, 0xa6, 0xa3, 0xd8, 0x89, 0xe8, 0x88, 0xa4, 0xf4, 0xd4, 0xdb, 0xd3, 0x4a, 0xb7,
	0xa7, 0xdc, 0x79, 0xad, 0x70, 0xe7, 0x49, 0x3e, 0xc1, 0xe6, 0x3f, 0xca, 0x67, 0xc3, 0xf6, 0x53,
	0xdb, 0x1f, 0xbb, 0x4b, 0x26, 0xfc, 0x0a, 0x56, 0xa9, 0xcf, 0x48, 0x74, 0x65, 0xbb, 0x3c, 0x63,
	0xfb, 0xb0, 0x2d, 0x4e, 0x3f, 0x94, 0x56, 0x2b, 0xc3, 0xf1, 0x43, 0xd8, 0x15, 0x0d, 0x70, 0x4a,
	0x42, 0x76, 0xb9, 0xcc, 0x36, 0xf8, 0x5b, 0xd8, 0x39, 0x0f, 0x62, 0x9a, 0x7c, 0x97, 0x79, 0x7e,
	0x0b, 0x0b, 0x13, 0x3f, 0x87, 0x9b, 0xc5, 0x4f, 0xa5, 0x43, 0x23, 0x9e, 0x3a, 0x0e, 0x89, 0x63,
	0xee, 0xba, 0x6a, 0xa5, 0x4b, 0xb4, 0x07, 0xcd, 0x88, 0xbc, 0x21, 0x11, 0xf1, 0x1d, 0x22, 0xef,
	0x26, 0x37, 0xe0, 0x4b, 0xd8, 0x14, 0x5f, 0x6f, 0x30, 0x93, 0x3d, 0x2c, 0xf7, 0xc6, 0x65, 0xd2,
	0x83, 0x95, 0x7f, 0xfe, 0xbe, 0x5d, 0xdb, 0xd7, 0x2a, 0x5b, 0xe0, 0x23, 0xaa, 0xec, 0x24, 0xad,
	0x93, 0x7c, 0xa7, 0xbc, 0xcc, 0x78, 0xdd, 0x96, 0xca, 0x4c, 0x1c, 0x50, 0x42, 0x98, 0x40, 0x37,
	0x0d, 0x2f, 0x34, 0xef, 0x7e, 0xe9, 0x8e, 0x32, 0x9a, 0x59, 0x13, 0x2f, 0xdb, 0x0b, 0xa5, 0x6d,
	0x96, 0x21, 0xf9, 0x0b, 0xec, 0x70, 0x43, 0x7a, 0xc4, 0x27, 0xfe, 0x78, 0x38, 0x5e, 0xe6, 0x46,
	0xb7, 0xb8, 0x48, 0xd6, 0x0a, 0x68, 0x22, 0x96, 0x3f, 0x80, 0x51, 0x95, 0x38, 0x57, 0x4d, 0x4e,
	0xa0, 0xa8, 0x9a, 0x82, 0x9a, 0x40, 0xf0, 0x43, 0x58, 0x13, 0x91, 0xb9, 0x6a, 0x7e, 0x0e, 0x0d,
	0xf9, 0xd6, 0xc8, 0x23, 0x15, 0xb5, 0x3c, 0x05, 0xf1, 0x9f, 0x1a, 0xb4, 0x65, 0x07, 0xa5, 0x47,
	0xb9, 0x55, 0x78, 0x05, 0x72, 0xaa, 0xd2, 0x8a, 0x4c, 0x68, 0xc7, 0xd4, 0x77, 0xc8, 0x6b, 0xea,
	0x91, 0x98, 0xd9, 0x5e, 0xc8, 0x8f, 0x54, 0x17, 0x7e, 0x9d, 0x4f, 0xac, 0x12, 0x5a, 0x68, 0xb6,
	0xfa, 0x07, 0x9b, 0x6d, 0x2d, 0x63, 0x93, 0x9f, 0xc4, 0x11, 0xa6, 0xe2, 0x49, 0x84, 0x9f, 0x95,
	0x82, 0xf8, 0x7e, 0xfa, 0xa4, 0xf1, 0x3e, 0xfd, 0xc8, 0xc3, 0xe0, 0xbf, 0x34, 0xd8, 0x28, 0x84,
	0xc9, 0x5d, 0xdf, 0xa7, 0x1e, 0x18, 0xea, 0xa3, 0xe9, 0x4c, 0xaf, 0x71, 0x36, 0x1d, 0xf9, 0x1a,
	0x45, 0xd4, 0x21, 0x2f, 0xc8, 0x15, 0x71, 0xad, 0x04, 0x44, 0x77, 0xe0, 0x5a, 0x4c, 0xdc, 0xe4,
	0xc0, 0xd5, 0x4e, 0x1c, 0x45, 0x5f, 0x42, 0xd3, 0xb5, 0x63, 0xc6, 0x25, 0x51, 0xbf, 0xa6, 0x7e,
	0x5f, 0x21, 0xc3, 0x39, 0x9a, 0xf4, 0x72, 0xaa, 0xe3, 0xff, 0x7f, 0x2f, 0x97, 0x77, 0x5a, 0xe6,
	0xc9, 0xf8, 0x1e, 0xb6, 0x33, 0xd1, 0x5b, 0xb6, 0x9d, 0xf1, 0x2b, 0xd0, 0xe7, 0x83, 0xe5, 0xee,
	0x87, 0xd0, 0x0c, 0x53, 0x4c, 0x12, 0xe8, 0xaa, 0x45, 0x9d, 0x06, 0x5a, 0xb9, 0x1b, 0xee, 0x43,
	0xe7, 0x67, 0x32, 0xb1, 0x93, 0x62, 0xcc, 0xf2, 0xec, 0x41, 0x93, 0x65, 0xa5, 0x9b, 0xf0, 0xa8,
	0x5b, 0xb9, 0x01, 0x9b, 0xd0, 0x2e, 0xde, 0x0b, 0xda, 0x83, 0xeb, 0x2e, 0xf5, 0xa8, 0xa8, 0xa0,
	0x6b, 0x82, 0xb3, 0x7e, 0x68, 0x09, 0xe3, 0xe1, 0x1f, 0x37, 0xa0, 0x91, 0x9c, 0x9c, 0xfa, 0x13,
	0xf4, 0x00, 0x5a, 0x17, 0xd3, 0x91, 0x47, 0x19, 0xef, 0x4e, 0xb4, 0xa9, 0xb4, 0x2a, 0xb7, 0xc7,
	0x31, 0x0d, 0x7c, 0x03, 0xc9, 0x62, 0x20, 0x7e, 0x12, 0x24, 0x5c, 0x8f, 0xa1, 0xf5, 0xd4, 0xf6,
	0x1d, 0xe2, 0x8a, 0xe5, 0xb6, 0x12, 0x29, 0xec, 0xae, 0xcd, 0x16, 0xc5, 0x1e, 0x01, 0x3c, 0xf1,
	0x88, 0x3f, 0x16, 0xab, 0xae, 0x12, 0xca, 0xcd, 0x1e, 0xf1, 0x99, 0x81, 0xc4, 0x07, 0x2f, 0xbc,
	0x2a, 0x43, 0x68, 0x17, 0x35, 0x1b, 0x19, 0xb9, 0x57, 0xb9, 0xcc, 0x8c, 0xdd, 0x4a, 0x4c, 0xa6,
	0x7a, 0x26, 0x5f, 0xac, 0xf4, 0x9b, 0xa1, 0x9d, 0x82, 0xb7, 0x5a, 0x04, 0x86, 0x51, 0x05, 0xc9,
	0x3c, 0x3f, 0x01, 0x9a, 0x57, 0x42, 0x74, 0x2b, 0x8f, 0xa8, 0xd2, 0x5e, 0xe3, 0xf6, 0x42, 0x5c,
	0xa6, 0x3d, 0x01, 0xc8, 0xa7, 0x5d, 0xb4, 0xc5, 0xdd, 0xe7, 0x66, 0x64, 0x63, 0x7b, 0xce, 0x2e,
	0xc3, 0xbf, 0x83, 0x86, 0x94, 0x57, 0xb4, 0x65, 0x8a, 0x91, 0xdd, 0x4c, 0x47, 0x76, 0xf3, 0xc7,
	0x64, 0x64, 0x37, 0xba, 0x4a, 0x6c, 0x2e, 0x5d, 0x8f, 0xa1, 0xa5, 0x68, 0x0b, 0x52, 0x37, 0x50,
	0x45, 0xca, 0xd0, 0xe7, 0x01, 0x99, 0xe1, 0x18, 0x9a, 0xd9, 0x1c, 0x8d, 0x36, 0xb9, 0x5b, 0x79,
	0xf6, 0x36, 0xb6, 0xca, 0xe6, 0x9c, 0xb6, 0x9c, 0xa5, 0x3f, 0x40, 0xbb, 0x3c, 0x71, 0x0f, 0xa1,
	0x5d, 0x14, 0x00, 0x59, 0x18, 0x95, 0xfa, 0x23, 0x0b, 0x63, 0x81, 0x62, 0x3c, 0x83, 0x9b, 0x85,
	0xd1, 0x58, 0x16, 0x46, 0xd5, 0xa4, 0x6e, 0x18, 0x55, 0xd0, 0x7c, 0x1e, 0x51, 0xe6, 0xc5, 0x3c,
	0xea, 0xe0, 0x5c, 0xca, 0x53, 0xac, 0xf9, 0x33, 0xe8, 0x94, 0xf5, 0x05, 0xed, 0x89, 0x4b, 0xa8,
	0xd6, 0x2c, 0xe3, 0xd3, 0x05, 0xa8, 0x4c, 0x78, 0x1f, 0x1a, 0xf2, 0xc1, 0x42, 0x42, 0x54, 0x8b,
	0x8f, 0xa9, 0xbc, 0xe1, 0xf2, 0x9b, 0x76, 0x04, 0x70, 0xc1, 0x6c, 0x46, 0x63, 0x46, 0x9d, 0xc5,
	0x5f, 0x47, 0xbe, 0x1a, 0x8a, 0xe7, 0x23, 0x68, 0x3d, 0x27, 0x2c, 0x55, 0xb4, 0x85, 0x81, 0xa2,
	0x50, 0xe6, 0x84, 0xef, 0x04, 0xd6, 0x4a, 0xc3, 0x3c, 0x52, 0xbb, 0xba, 0x3c, 0xa1, 0x1a, 0xea,
	0xa8, 0xd1, 0xd7, 0x92, 0xf0, 0xd2, 0xec, 0x8e, 0xd4, 0x6f, 0xbf, 0x28, 0x9c, 0xa3, 0x7d, 0x0d,
	0x3d, 0x86, 0x4e, 0x79, 0x54, 0x97, 0x57, 0xbf, 0x60, 0x82, 0x37, 0x0a, 0x0f, 0x7d, 0x5f, 0x43,
	0x2f, 0xa1, 0x5b, 0x35, 0x89, 0xa3, 0xfd, 0x72, 0xfb, 0xcc, 0x65, 0x5a, 0x57, 0xdf, 0x09, 0xee,
	0xd2, 0xd7, 0xd0, 0x0b, 0x40, 0xf3, 0xd3, 0xb9, 0x14, 0x9b, 0x85, 0x63, 0xbb, 0x51, 0xf9, 0xe4,
	0xf4, 0xb5, 0xc1, 0xdd, 0x5f, 0x0f, 0x9c, 0x60, 0x4c, 0x38, 0xca, 0x3f, 0x87, 0x13, 0xb8, 0x26,
	0x15, 0xff, 0x01, 0xf4, 0xb2, 0x7f, 0x0a, 0x46, 0x2b, 0xfc, 0xe7, 0x37, 0xff, 0x06, 0x00, 0x00,
	0xff, 0xff, 0xb4, 0x37, 0x72, 0xc4, 0x3d, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TradingClient is the client API for Trading service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TradingClient interface {
	// unary calls - writes
	SubmitOrder(ctx context.Context, in *proto1.OrderSubmission, opts ...grpc.CallOption) (*proto1.PendingOrder, error)
	CancelOrder(ctx context.Context, in *proto1.OrderCancellation, opts ...grpc.CallOption) (*proto1.PendingOrder, error)
	AmendOrder(ctx context.Context, in *proto1.OrderAmendment, opts ...grpc.CallOption) (*OrderResponse, error)
	// orders
	OrdersByMarket(ctx context.Context, in *OrdersByMarketRequest, opts ...grpc.CallOption) (*OrdersByMarketResponse, error)
	OrdersByParty(ctx context.Context, in *OrdersByPartyRequest, opts ...grpc.CallOption) (*OrdersByPartyResponse, error)
	OrderByMarketAndId(ctx context.Context, in *OrderByMarketAndIdRequest, opts ...grpc.CallOption) (*OrderByMarketAndIdResponse, error)
	// markets
	MarketByID(ctx context.Context, in *MarketByIDRequest, opts ...grpc.CallOption) (*MarketByIDResponse, error)
	Markets(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MarketsResponse, error)
	MarketDepth(ctx context.Context, in *MarketDepthRequest, opts ...grpc.CallOption) (*MarketDepthResponse, error)
	// parties
	PartyByID(ctx context.Context, in *PartyByIDRequest, opts ...grpc.CallOption) (*PartyByIDResponse, error)
	Parties(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PartiesResponse, error)
	// trades
	TradesByMarket(ctx context.Context, in *TradesByMarketRequest, opts ...grpc.CallOption) (*TradesByMarketResponse, error)
	TradesByParty(ctx context.Context, in *TradesByPartyRequest, opts ...grpc.CallOption) (*TradesByPartyResponse, error)
	TradesByOrder(ctx context.Context, in *TradesByOrderRequest, opts ...grpc.CallOption) (*TradesByOrderResponse, error)
	// positions
	PositionsByParty(ctx context.Context, in *PositionsByPartyRequest, opts ...grpc.CallOption) (*PositionsByPartyResponse, error)
	// candles
	Candles(ctx context.Context, in *CandlesRequest, opts ...grpc.CallOption) (*CandlesResponse, error)
	// metrics
	Statistics(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*proto1.Statistics, error)
	GetVegaTime(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VegaTimeResponse, error)
	// streams
	OrdersSubscribe(ctx context.Context, in *OrdersSubscribeRequest, opts ...grpc.CallOption) (Trading_OrdersSubscribeClient, error)
	TradesSubscribe(ctx context.Context, in *TradesSubscribeRequest, opts ...grpc.CallOption) (Trading_TradesSubscribeClient, error)
	CandlesSubscribe(ctx context.Context, in *CandlesSubscribeRequest, opts ...grpc.CallOption) (Trading_CandlesSubscribeClient, error)
	MarketDepthSubscribe(ctx context.Context, in *MarketDepthSubscribeRequest, opts ...grpc.CallOption) (Trading_MarketDepthSubscribeClient, error)
	PositionsSubscribe(ctx context.Context, in *PositionsSubscribeRequest, opts ...grpc.CallOption) (Trading_PositionsSubscribeClient, error)
}

type tradingClient struct {
	cc *grpc.ClientConn
}

func NewTradingClient(cc *grpc.ClientConn) TradingClient {
	return &tradingClient{cc}
}

func (c *tradingClient) SubmitOrder(ctx context.Context, in *proto1.OrderSubmission, opts ...grpc.CallOption) (*proto1.PendingOrder, error) {
	out := new(proto1.PendingOrder)
	err := c.cc.Invoke(ctx, "/api.trading/SubmitOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) CancelOrder(ctx context.Context, in *proto1.OrderCancellation, opts ...grpc.CallOption) (*proto1.PendingOrder, error) {
	out := new(proto1.PendingOrder)
	err := c.cc.Invoke(ctx, "/api.trading/CancelOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) AmendOrder(ctx context.Context, in *proto1.OrderAmendment, opts ...grpc.CallOption) (*OrderResponse, error) {
	out := new(OrderResponse)
	err := c.cc.Invoke(ctx, "/api.trading/AmendOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) OrdersByMarket(ctx context.Context, in *OrdersByMarketRequest, opts ...grpc.CallOption) (*OrdersByMarketResponse, error) {
	out := new(OrdersByMarketResponse)
	err := c.cc.Invoke(ctx, "/api.trading/OrdersByMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) OrdersByParty(ctx context.Context, in *OrdersByPartyRequest, opts ...grpc.CallOption) (*OrdersByPartyResponse, error) {
	out := new(OrdersByPartyResponse)
	err := c.cc.Invoke(ctx, "/api.trading/OrdersByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) OrderByMarketAndId(ctx context.Context, in *OrderByMarketAndIdRequest, opts ...grpc.CallOption) (*OrderByMarketAndIdResponse, error) {
	out := new(OrderByMarketAndIdResponse)
	err := c.cc.Invoke(ctx, "/api.trading/OrderByMarketAndId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) MarketByID(ctx context.Context, in *MarketByIDRequest, opts ...grpc.CallOption) (*MarketByIDResponse, error) {
	out := new(MarketByIDResponse)
	err := c.cc.Invoke(ctx, "/api.trading/MarketByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) Markets(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MarketsResponse, error) {
	out := new(MarketsResponse)
	err := c.cc.Invoke(ctx, "/api.trading/Markets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) MarketDepth(ctx context.Context, in *MarketDepthRequest, opts ...grpc.CallOption) (*MarketDepthResponse, error) {
	out := new(MarketDepthResponse)
	err := c.cc.Invoke(ctx, "/api.trading/MarketDepth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) PartyByID(ctx context.Context, in *PartyByIDRequest, opts ...grpc.CallOption) (*PartyByIDResponse, error) {
	out := new(PartyByIDResponse)
	err := c.cc.Invoke(ctx, "/api.trading/PartyByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) Parties(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PartiesResponse, error) {
	out := new(PartiesResponse)
	err := c.cc.Invoke(ctx, "/api.trading/Parties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) TradesByMarket(ctx context.Context, in *TradesByMarketRequest, opts ...grpc.CallOption) (*TradesByMarketResponse, error) {
	out := new(TradesByMarketResponse)
	err := c.cc.Invoke(ctx, "/api.trading/TradesByMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) TradesByParty(ctx context.Context, in *TradesByPartyRequest, opts ...grpc.CallOption) (*TradesByPartyResponse, error) {
	out := new(TradesByPartyResponse)
	err := c.cc.Invoke(ctx, "/api.trading/TradesByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) TradesByOrder(ctx context.Context, in *TradesByOrderRequest, opts ...grpc.CallOption) (*TradesByOrderResponse, error) {
	out := new(TradesByOrderResponse)
	err := c.cc.Invoke(ctx, "/api.trading/TradesByOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) PositionsByParty(ctx context.Context, in *PositionsByPartyRequest, opts ...grpc.CallOption) (*PositionsByPartyResponse, error) {
	out := new(PositionsByPartyResponse)
	err := c.cc.Invoke(ctx, "/api.trading/PositionsByParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) Candles(ctx context.Context, in *CandlesRequest, opts ...grpc.CallOption) (*CandlesResponse, error) {
	out := new(CandlesResponse)
	err := c.cc.Invoke(ctx, "/api.trading/Candles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) Statistics(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*proto1.Statistics, error) {
	out := new(proto1.Statistics)
	err := c.cc.Invoke(ctx, "/api.trading/Statistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) GetVegaTime(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VegaTimeResponse, error) {
	out := new(VegaTimeResponse)
	err := c.cc.Invoke(ctx, "/api.trading/GetVegaTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradingClient) OrdersSubscribe(ctx context.Context, in *OrdersSubscribeRequest, opts ...grpc.CallOption) (Trading_OrdersSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trading_serviceDesc.Streams[0], "/api.trading/OrdersSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingOrdersSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trading_OrdersSubscribeClient interface {
	Recv() (*proto1.Order, error)
	grpc.ClientStream
}

type tradingOrdersSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingOrdersSubscribeClient) Recv() (*proto1.Order, error) {
	m := new(proto1.Order)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingClient) TradesSubscribe(ctx context.Context, in *TradesSubscribeRequest, opts ...grpc.CallOption) (Trading_TradesSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trading_serviceDesc.Streams[1], "/api.trading/TradesSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingTradesSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trading_TradesSubscribeClient interface {
	Recv() (*proto1.Trade, error)
	grpc.ClientStream
}

type tradingTradesSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingTradesSubscribeClient) Recv() (*proto1.Trade, error) {
	m := new(proto1.Trade)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingClient) CandlesSubscribe(ctx context.Context, in *CandlesSubscribeRequest, opts ...grpc.CallOption) (Trading_CandlesSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trading_serviceDesc.Streams[2], "/api.trading/CandlesSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingCandlesSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trading_CandlesSubscribeClient interface {
	Recv() (*proto1.Candle, error)
	grpc.ClientStream
}

type tradingCandlesSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingCandlesSubscribeClient) Recv() (*proto1.Candle, error) {
	m := new(proto1.Candle)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingClient) MarketDepthSubscribe(ctx context.Context, in *MarketDepthSubscribeRequest, opts ...grpc.CallOption) (Trading_MarketDepthSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trading_serviceDesc.Streams[3], "/api.trading/MarketDepthSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingMarketDepthSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trading_MarketDepthSubscribeClient interface {
	Recv() (*proto1.MarketDepth, error)
	grpc.ClientStream
}

type tradingMarketDepthSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingMarketDepthSubscribeClient) Recv() (*proto1.MarketDepth, error) {
	m := new(proto1.MarketDepth)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tradingClient) PositionsSubscribe(ctx context.Context, in *PositionsSubscribeRequest, opts ...grpc.CallOption) (Trading_PositionsSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trading_serviceDesc.Streams[4], "/api.trading/PositionsSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tradingPositionsSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trading_PositionsSubscribeClient interface {
	Recv() (*proto1.MarketPosition, error)
	grpc.ClientStream
}

type tradingPositionsSubscribeClient struct {
	grpc.ClientStream
}

func (x *tradingPositionsSubscribeClient) Recv() (*proto1.MarketPosition, error) {
	m := new(proto1.MarketPosition)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TradingServer is the server API for Trading service.
type TradingServer interface {
	// unary calls - writes
	SubmitOrder(context.Context, *proto1.OrderSubmission) (*proto1.PendingOrder, error)
	CancelOrder(context.Context, *proto1.OrderCancellation) (*proto1.PendingOrder, error)
	AmendOrder(context.Context, *proto1.OrderAmendment) (*OrderResponse, error)
	// orders
	OrdersByMarket(context.Context, *OrdersByMarketRequest) (*OrdersByMarketResponse, error)
	OrdersByParty(context.Context, *OrdersByPartyRequest) (*OrdersByPartyResponse, error)
	OrderByMarketAndId(context.Context, *OrderByMarketAndIdRequest) (*OrderByMarketAndIdResponse, error)
	// markets
	MarketByID(context.Context, *MarketByIDRequest) (*MarketByIDResponse, error)
	Markets(context.Context, *empty.Empty) (*MarketsResponse, error)
	MarketDepth(context.Context, *MarketDepthRequest) (*MarketDepthResponse, error)
	// parties
	PartyByID(context.Context, *PartyByIDRequest) (*PartyByIDResponse, error)
	Parties(context.Context, *empty.Empty) (*PartiesResponse, error)
	// trades
	TradesByMarket(context.Context, *TradesByMarketRequest) (*TradesByMarketResponse, error)
	TradesByParty(context.Context, *TradesByPartyRequest) (*TradesByPartyResponse, error)
	TradesByOrder(context.Context, *TradesByOrderRequest) (*TradesByOrderResponse, error)
	// positions
	PositionsByParty(context.Context, *PositionsByPartyRequest) (*PositionsByPartyResponse, error)
	// candles
	Candles(context.Context, *CandlesRequest) (*CandlesResponse, error)
	// metrics
	Statistics(context.Context, *empty.Empty) (*proto1.Statistics, error)
	GetVegaTime(context.Context, *empty.Empty) (*VegaTimeResponse, error)
	// streams
	OrdersSubscribe(*OrdersSubscribeRequest, Trading_OrdersSubscribeServer) error
	TradesSubscribe(*TradesSubscribeRequest, Trading_TradesSubscribeServer) error
	CandlesSubscribe(*CandlesSubscribeRequest, Trading_CandlesSubscribeServer) error
	MarketDepthSubscribe(*MarketDepthSubscribeRequest, Trading_MarketDepthSubscribeServer) error
	PositionsSubscribe(*PositionsSubscribeRequest, Trading_PositionsSubscribeServer) error
}

func RegisterTradingServer(s *grpc.Server, srv TradingServer) {
	s.RegisterService(&_Trading_serviceDesc, srv)
}

func _Trading_SubmitOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.OrderSubmission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).SubmitOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/SubmitOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).SubmitOrder(ctx, req.(*proto1.OrderSubmission))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_CancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.OrderCancellation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).CancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/CancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).CancelOrder(ctx, req.(*proto1.OrderCancellation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_AmendOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.OrderAmendment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).AmendOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/AmendOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).AmendOrder(ctx, req.(*proto1.OrderAmendment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_OrdersByMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdersByMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).OrdersByMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/OrdersByMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).OrdersByMarket(ctx, req.(*OrdersByMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_OrdersByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdersByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).OrdersByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/OrdersByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).OrdersByParty(ctx, req.(*OrdersByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_OrderByMarketAndId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderByMarketAndIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).OrderByMarketAndId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/OrderByMarketAndId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).OrderByMarketAndId(ctx, req.(*OrderByMarketAndIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_MarketByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarketByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).MarketByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/MarketByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).MarketByID(ctx, req.(*MarketByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_Markets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).Markets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/Markets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).Markets(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_MarketDepth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarketDepthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).MarketDepth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/MarketDepth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).MarketDepth(ctx, req.(*MarketDepthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_PartyByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartyByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).PartyByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/PartyByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).PartyByID(ctx, req.(*PartyByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_Parties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).Parties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/Parties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).Parties(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_TradesByMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradesByMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).TradesByMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/TradesByMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).TradesByMarket(ctx, req.(*TradesByMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_TradesByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradesByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).TradesByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/TradesByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).TradesByParty(ctx, req.(*TradesByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_TradesByOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradesByOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).TradesByOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/TradesByOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).TradesByOrder(ctx, req.(*TradesByOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_PositionsByParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionsByPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).PositionsByParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/PositionsByParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).PositionsByParty(ctx, req.(*PositionsByPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_Candles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CandlesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).Candles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/Candles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).Candles(ctx, req.(*CandlesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_Statistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).Statistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/Statistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).Statistics(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_GetVegaTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradingServer).GetVegaTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.trading/GetVegaTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradingServer).GetVegaTime(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trading_OrdersSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OrdersSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingServer).OrdersSubscribe(m, &tradingOrdersSubscribeServer{stream})
}

type Trading_OrdersSubscribeServer interface {
	Send(*proto1.Order) error
	grpc.ServerStream
}

type tradingOrdersSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingOrdersSubscribeServer) Send(m *proto1.Order) error {
	return x.ServerStream.SendMsg(m)
}

func _Trading_TradesSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TradesSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingServer).TradesSubscribe(m, &tradingTradesSubscribeServer{stream})
}

type Trading_TradesSubscribeServer interface {
	Send(*proto1.Trade) error
	grpc.ServerStream
}

type tradingTradesSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingTradesSubscribeServer) Send(m *proto1.Trade) error {
	return x.ServerStream.SendMsg(m)
}

func _Trading_CandlesSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CandlesSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingServer).CandlesSubscribe(m, &tradingCandlesSubscribeServer{stream})
}

type Trading_CandlesSubscribeServer interface {
	Send(*proto1.Candle) error
	grpc.ServerStream
}

type tradingCandlesSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingCandlesSubscribeServer) Send(m *proto1.Candle) error {
	return x.ServerStream.SendMsg(m)
}

func _Trading_MarketDepthSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MarketDepthSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingServer).MarketDepthSubscribe(m, &tradingMarketDepthSubscribeServer{stream})
}

type Trading_MarketDepthSubscribeServer interface {
	Send(*proto1.MarketDepth) error
	grpc.ServerStream
}

type tradingMarketDepthSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingMarketDepthSubscribeServer) Send(m *proto1.MarketDepth) error {
	return x.ServerStream.SendMsg(m)
}

func _Trading_PositionsSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PositionsSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TradingServer).PositionsSubscribe(m, &tradingPositionsSubscribeServer{stream})
}

type Trading_PositionsSubscribeServer interface {
	Send(*proto1.MarketPosition) error
	grpc.ServerStream
}

type tradingPositionsSubscribeServer struct {
	grpc.ServerStream
}

func (x *tradingPositionsSubscribeServer) Send(m *proto1.MarketPosition) error {
	return x.ServerStream.SendMsg(m)
}

var _Trading_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.trading",
	HandlerType: (*TradingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitOrder",
			Handler:    _Trading_SubmitOrder_Handler,
		},
		{
			MethodName: "CancelOrder",
			Handler:    _Trading_CancelOrder_Handler,
		},
		{
			MethodName: "AmendOrder",
			Handler:    _Trading_AmendOrder_Handler,
		},
		{
			MethodName: "OrdersByMarket",
			Handler:    _Trading_OrdersByMarket_Handler,
		},
		{
			MethodName: "OrdersByParty",
			Handler:    _Trading_OrdersByParty_Handler,
		},
		{
			MethodName: "OrderByMarketAndId",
			Handler:    _Trading_OrderByMarketAndId_Handler,
		},
		{
			MethodName: "MarketByID",
			Handler:    _Trading_MarketByID_Handler,
		},
		{
			MethodName: "Markets",
			Handler:    _Trading_Markets_Handler,
		},
		{
			MethodName: "MarketDepth",
			Handler:    _Trading_MarketDepth_Handler,
		},
		{
			MethodName: "PartyByID",
			Handler:    _Trading_PartyByID_Handler,
		},
		{
			MethodName: "Parties",
			Handler:    _Trading_Parties_Handler,
		},
		{
			MethodName: "TradesByMarket",
			Handler:    _Trading_TradesByMarket_Handler,
		},
		{
			MethodName: "TradesByParty",
			Handler:    _Trading_TradesByParty_Handler,
		},
		{
			MethodName: "TradesByOrder",
			Handler:    _Trading_TradesByOrder_Handler,
		},
		{
			MethodName: "PositionsByParty",
			Handler:    _Trading_PositionsByParty_Handler,
		},
		{
			MethodName: "Candles",
			Handler:    _Trading_Candles_Handler,
		},
		{
			MethodName: "Statistics",
			Handler:    _Trading_Statistics_Handler,
		},
		{
			MethodName: "GetVegaTime",
			Handler:    _Trading_GetVegaTime_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OrdersSubscribe",
			Handler:       _Trading_OrdersSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "TradesSubscribe",
			Handler:       _Trading_TradesSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CandlesSubscribe",
			Handler:       _Trading_CandlesSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MarketDepthSubscribe",
			Handler:       _Trading_MarketDepthSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PositionsSubscribe",
			Handler:       _Trading_PositionsSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/api/grpc.proto",
}
