// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/wallet/service (interfaces: ProofOfWork)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	v1 "code.vegaprotocol.io/vega/protos/vega/commands/v1"
	types "code.vegaprotocol.io/vega/wallet/api/node/types"
	gomock "github.com/golang/mock/gomock"
)

// MockProofOfWork is a mock of ProofOfWork interface.
type MockProofOfWork struct {
	ctrl     *gomock.Controller
	recorder *MockProofOfWorkMockRecorder
}

// MockProofOfWorkMockRecorder is the mock recorder for MockProofOfWork.
type MockProofOfWorkMockRecorder struct {
	mock *MockProofOfWork
}

// NewMockProofOfWork creates a new mock instance.
func NewMockProofOfWork(ctrl *gomock.Controller) *MockProofOfWork {
	mock := &MockProofOfWork{ctrl: ctrl}
	mock.recorder = &MockProofOfWorkMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProofOfWork) EXPECT() *MockProofOfWorkMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockProofOfWork) Generate(arg0 string, arg1 *types.LastBlock) (*v1.ProofOfWork, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", arg0, arg1)
	ret0, _ := ret[0].(*v1.ProofOfWork)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockProofOfWorkMockRecorder) Generate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockProofOfWork)(nil).Generate), arg0, arg1)
}
