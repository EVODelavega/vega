// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/processor (interfaces: DelegationEngine)

// Package mocks is a generated GoMock package.
package mocks

import (
	types "code.vegaprotocol.io/vega/types"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockDelegationEngine is a mock of DelegationEngine interface
type MockDelegationEngine struct {
	ctrl     *gomock.Controller
	recorder *MockDelegationEngineMockRecorder
}

// MockDelegationEngineMockRecorder is the mock recorder for MockDelegationEngine
type MockDelegationEngineMockRecorder struct {
	mock *MockDelegationEngine
}

// NewMockDelegationEngine creates a new mock instance
func NewMockDelegationEngine(ctrl *gomock.Controller) *MockDelegationEngine {
	mock := &MockDelegationEngine{ctrl: ctrl}
	mock.recorder = &MockDelegationEngineMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDelegationEngine) EXPECT() *MockDelegationEngineMockRecorder {
	return m.recorder
}

// Delegate mocks base method
func (m *MockDelegationEngine) Delegate(arg0, arg1 string, arg2 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delegate", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delegate indicates an expected call of Delegate
func (mr *MockDelegationEngineMockRecorder) Delegate(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delegate", reflect.TypeOf((*MockDelegationEngine)(nil).Delegate), arg0, arg1, arg2)
}

// OnEpochEnd mocks base method
func (m *MockDelegationEngine) OnEpochEnd(arg0, arg1 time.Time) []*types.ValidatorData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OnEpochEnd", arg0, arg1)
	ret0, _ := ret[0].([]*types.ValidatorData)
	return ret0
}

// OnEpochEnd indicates an expected call of OnEpochEnd
func (mr *MockDelegationEngineMockRecorder) OnEpochEnd(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnEpochEnd", reflect.TypeOf((*MockDelegationEngine)(nil).OnEpochEnd), arg0, arg1)
}

// UndelegateAtEndOfEpoch mocks base method
func (m *MockDelegationEngine) UndelegateAtEndOfEpoch(arg0, arg1 string, arg2 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UndelegateAtEndOfEpoch", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UndelegateAtEndOfEpoch indicates an expected call of UndelegateAtEndOfEpoch
func (mr *MockDelegationEngineMockRecorder) UndelegateAtEndOfEpoch(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UndelegateAtEndOfEpoch", reflect.TypeOf((*MockDelegationEngine)(nil).UndelegateAtEndOfEpoch), arg0, arg1, arg2)
}
