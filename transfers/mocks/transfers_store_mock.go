// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/data-node/transfers (interfaces: TransfersStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	v1 "code.vegaprotocol.io/protos/vega/events/v1"
	gomock "github.com/golang/mock/gomock"
)

// MockTransfersStore is a mock of TransfersStore interface.
type MockTransfersStore struct {
	ctrl     *gomock.Controller
	recorder *MockTransfersStoreMockRecorder
}

// MockTransfersStoreMockRecorder is the mock recorder for MockTransfersStore.
type MockTransfersStoreMockRecorder struct {
	mock *MockTransfersStore
}

// NewMockTransfersStore creates a new mock instance.
func NewMockTransfersStore(ctrl *gomock.Controller) *MockTransfersStore {
	mock := &MockTransfersStore{ctrl: ctrl}
	mock.recorder = &MockTransfersStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransfersStore) EXPECT() *MockTransfersStoreMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockTransfersStore) GetAll(arg0 string, arg1, arg2 bool) []*v1.Transfer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*v1.Transfer)
	return ret0
}

// GetAll indicates an expected call of GetAll.
func (mr *MockTransfersStoreMockRecorder) GetAll(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockTransfersStore)(nil).GetAll), arg0, arg1, arg2)
}
