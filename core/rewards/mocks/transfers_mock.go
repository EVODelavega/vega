// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/core/rewards (interfaces: Transfers)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	vega "code.vegaprotocol.io/vega/protos/vega"
	gomock "github.com/golang/mock/gomock"
)

// MockTransfers is a mock of Transfers interface.
type MockTransfers struct {
	ctrl     *gomock.Controller
	recorder *MockTransfersMockRecorder
}

// MockTransfersMockRecorder is the mock recorder for MockTransfers.
type MockTransfersMockRecorder struct {
	mock *MockTransfers
}

// NewMockTransfers creates a new mock instance.
func NewMockTransfers(ctrl *gomock.Controller) *MockTransfers {
	mock := &MockTransfers{ctrl: ctrl}
	mock.recorder = &MockTransfersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransfers) EXPECT() *MockTransfersMockRecorder {
	return m.recorder
}

// GetDispatchStrategy mocks base method.
func (m *MockTransfers) GetDispatchStrategy(arg0 string) *vega.DispatchStrategy {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDispatchStrategy", arg0)
	ret0, _ := ret[0].(*vega.DispatchStrategy)
	return ret0
}

// GetDispatchStrategy indicates an expected call of GetDispatchStrategy.
func (mr *MockTransfersMockRecorder) GetDispatchStrategy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDispatchStrategy", reflect.TypeOf((*MockTransfers)(nil).GetDispatchStrategy), arg0)
}
