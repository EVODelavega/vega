// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/core/rewards (interfaces: Vesting)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	num "code.vegaprotocol.io/vega/libs/num"
	gomock "github.com/golang/mock/gomock"
	decimal "github.com/shopspring/decimal"
)

// MockVesting is a mock of Vesting interface.
type MockVesting struct {
	ctrl     *gomock.Controller
	recorder *MockVestingMockRecorder
}

// MockVestingMockRecorder is the mock recorder for MockVesting.
type MockVestingMockRecorder struct {
	mock *MockVesting
}

// NewMockVesting creates a new mock instance.
func NewMockVesting(ctrl *gomock.Controller) *MockVesting {
	mock := &MockVesting{ctrl: ctrl}
	mock.recorder = &MockVestingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVesting) EXPECT() *MockVestingMockRecorder {
	return m.recorder
}

// AddReward mocks base method.
func (m *MockVesting) AddReward(arg0, arg1 string, arg2 *num.Uint, arg3 uint64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddReward", arg0, arg1, arg2, arg3)
}

// AddReward indicates an expected call of AddReward.
func (mr *MockVestingMockRecorder) AddReward(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddReward", reflect.TypeOf((*MockVesting)(nil).AddReward), arg0, arg1, arg2, arg3)
}

// GetRewardBonusMultiplier mocks base method.
func (m *MockVesting) GetRewardBonusMultiplier(arg0 string) decimal.Decimal {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRewardBonusMultiplier", arg0)
	ret0, _ := ret[0].(decimal.Decimal)
	return ret0
}

// GetRewardBonusMultiplier indicates an expected call of GetRewardBonusMultiplier.
func (mr *MockVestingMockRecorder) GetRewardBonusMultiplier(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRewardBonusMultiplier", reflect.TypeOf((*MockVesting)(nil).GetRewardBonusMultiplier), arg0)
}
