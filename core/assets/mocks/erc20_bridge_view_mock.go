// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/core/assets (interfaces: ERC20BridgeView)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	types "code.vegaprotocol.io/vega/core/types"
	gomock "github.com/golang/mock/gomock"
)

// MockERC20BridgeView is a mock of ERC20BridgeView interface.
type MockERC20BridgeView struct {
	ctrl     *gomock.Controller
	recorder *MockERC20BridgeViewMockRecorder
}

// MockERC20BridgeViewMockRecorder is the mock recorder for MockERC20BridgeView.
type MockERC20BridgeViewMockRecorder struct {
	mock *MockERC20BridgeView
}

// NewMockERC20BridgeView creates a new mock instance.
func NewMockERC20BridgeView(ctrl *gomock.Controller) *MockERC20BridgeView {
	mock := &MockERC20BridgeView{ctrl: ctrl}
	mock.recorder = &MockERC20BridgeViewMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockERC20BridgeView) EXPECT() *MockERC20BridgeViewMockRecorder {
	return m.recorder
}

// FindAsset mocks base method.
func (m *MockERC20BridgeView) FindAsset(arg0 *types.AssetDetails) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAsset", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// FindAsset indicates an expected call of FindAsset.
func (mr *MockERC20BridgeViewMockRecorder) FindAsset(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAsset", reflect.TypeOf((*MockERC20BridgeView)(nil).FindAsset), arg0)
}
