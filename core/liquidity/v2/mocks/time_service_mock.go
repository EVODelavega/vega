// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/core/liquidity/v2 (interfaces: EpochTime)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockEpochTime is a mock of EpochTime interface.
type MockEpochTime struct {
	ctrl     *gomock.Controller
	recorder *MockEpochTimeMockRecorder
}

// MockEpochTimeMockRecorder is the mock recorder for MockEpochTime.
type MockEpochTimeMockRecorder struct {
	mock *MockEpochTime
}

// NewMockEpochTime creates a new mock instance.
func NewMockEpochTime(ctrl *gomock.Controller) *MockEpochTime {
	mock := &MockEpochTime{ctrl: ctrl}
	mock.recorder = &MockEpochTimeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEpochTime) EXPECT() *MockEpochTimeMockRecorder {
	return m.recorder
}

// GetEpochStartTime mocks base method.
func (m *MockEpochTime) GetEpochStartTime() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEpochStartTime")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetEpochStartTime indicates an expected call of GetEpochStartTime.
func (mr *MockEpochTimeMockRecorder) GetEpochStartTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpochStartTime", reflect.TypeOf((*MockEpochTime)(nil).GetEpochStartTime))
}
