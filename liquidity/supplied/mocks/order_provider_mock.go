// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/liquidity/supplied (interfaces: OrderProvider)

// Package mocks is a generated GoMock package.
package mocks

import (
	proto "code.vegaprotocol.io/vega/proto"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockOrderProvider is a mock of OrderProvider interface
type MockOrderProvider struct {
	ctrl     *gomock.Controller
	recorder *MockOrderProviderMockRecorder
}

// MockOrderProviderMockRecorder is the mock recorder for MockOrderProvider
type MockOrderProviderMockRecorder struct {
	mock *MockOrderProvider
}

// NewMockOrderProvider creates a new mock instance
func NewMockOrderProvider(ctrl *gomock.Controller) *MockOrderProvider {
	mock := &MockOrderProvider{ctrl: ctrl}
	mock.recorder = &MockOrderProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrderProvider) EXPECT() *MockOrderProviderMockRecorder {
	return m.recorder
}

// GetOrderByID mocks base method
func (m *MockOrderProvider) GetOrderByID(arg0 string) (*proto.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderByID", arg0)
	ret0, _ := ret[0].(*proto.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderByID indicates an expected call of GetOrderByID
func (mr *MockOrderProviderMockRecorder) GetOrderByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderByID", reflect.TypeOf((*MockOrderProvider)(nil).GetOrderByID), arg0)
}
