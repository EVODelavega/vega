// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/liquidity/supplied (interfaces: ValidPriceRangeProvider)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockValidPriceRangeProvider is a mock of ValidPriceRangeProvider interface
type MockValidPriceRangeProvider struct {
	ctrl     *gomock.Controller
	recorder *MockValidPriceRangeProviderMockRecorder
}

// MockValidPriceRangeProviderMockRecorder is the mock recorder for MockValidPriceRangeProvider
type MockValidPriceRangeProviderMockRecorder struct {
	mock *MockValidPriceRangeProvider
}

// NewMockValidPriceRangeProvider creates a new mock instance
func NewMockValidPriceRangeProvider(ctrl *gomock.Controller) *MockValidPriceRangeProvider {
	mock := &MockValidPriceRangeProvider{ctrl: ctrl}
	mock.recorder = &MockValidPriceRangeProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockValidPriceRangeProvider) EXPECT() *MockValidPriceRangeProviderMockRecorder {
	return m.recorder
}

// ValidPriceRange mocks base method
func (m *MockValidPriceRangeProvider) ValidPriceRange() (float64, float64) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidPriceRange")
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(float64)
	return ret0, ret1
}

// ValidPriceRange indicates an expected call of ValidPriceRange
func (mr *MockValidPriceRangeProviderMockRecorder) ValidPriceRange() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidPriceRange", reflect.TypeOf((*MockValidPriceRangeProvider)(nil).ValidPriceRange))
}
