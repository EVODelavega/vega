[run]
allow-parallel-runners = true
print-linter-name = true
timeout = '5m0s'
skip-dirs = [
    'protos',
]

[issues]
max-issues-per-linter = 0
max-same-issues = 0

[linters]
enable-all = true
disable = [
    "promlinter",
    "wrapcheck",
    "tagliatelle",
    "paralleltest",
    "nlreturn",
    "gomnd",
    "goerr113",
    "tparallel",
    "testpackage",
    "gochecknoglobals",
    "forcetypeassert",
    "exhaustivestruct",
    "exhaustive",
    "errorlint",
    "cyclop",
    "wsl",
    "scopelint",
    "nestif",
    "maligned",
    "lll",
    "interfacer",
    "gosec",
    "gomoddirectives",
    "golint",
    "goimports",
    "godox",
    "gocritic",
    "goconst",
    "gocognit",
    "gochecknoinits",
    "stylecheck",
    "gci",
    "errcheck",
    "dupl",
    "dogsled",
    "funlen",
    "gocyclo",
    "errname",
    "maintidx",
    "contextcheck",
    "containedctx",
    "varnamelen",
    "ireturn",
    "nilnil",
    "errchkjson",
    "ifshort",
    "predeclared",
    "nolintlint",

    ## Disabled on-pupose
    "nonamedreturns", # We don't mind named returns
    "exhaustruct", # We often make incomplete structs

    ## Deprecated linters
    "nosnakecase", # deprecated; replaced by revive
    "structcheck", # deprecated since 1.49.0; replaced by 'unused'
    "varcheck", # deprecated since 1.49.0; replaced by 'unused'
    "deadcode", # deprecated since 1.49.0; replaced by 'unused'
]

[[issues.exclude-rules]]
linters = ["staticcheck"]
text = "SA1019:"

[[issues.exclude-rules]]
linters = ["staticcheck"]
text = "SA5008:"

[[issues.exclude-rules]]
path = "_test\\.go"
linters = ["forbidigo"]

[[issues.exclude-rules]]
path = "cmd/"
linters = ["forbidigo"]

[[issues.exclude-rules]]
path = "vegatools/"
linters = ["forbidigo"]

[[issues.exclude-rules]]
path = "flags.go"
linters = ["forbidigo"]

[[issues.exclude-rules]]
path = "print.go"
linters = ["forbidigo"]

[[issues.exclude-rules]]
path = "libs/json/json.go"
linters = ["forbidigo"]

[[issues.exclude-rules]]
path = "_test.go"
linters = ["exhaustruct", "noctx"]

# Don't complain about context not being first argument in tests (convention is to use *testing.T)
[[issues.exclude-rules]]
path = "_test.go"
linters = ["revive"]
text = "context-as-argument"

[linters-settings.forbidigo]
forbid = ["fmt\\.Print.*"]

# protoc doesn't want us copying protobuf messages because they can have some internal state
# that shouldn't be copied; but we do it a lot. see below for details
# https://stackoverflow.com/questions/64183794/why-do-the-go-generated-protobuf-files-contain-mutex-locks
[[issues.exclude-rules]]
linters = ["govet"]
text = "impl.MessageState contains sync.Mutex"

